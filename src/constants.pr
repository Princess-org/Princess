import util

def unsafe_copy(s: Str) -> string {
    let res = allocate(char, s.length() + 1)
    res(s.length()) = '\0'
    for var i in 0..s.length() {
        res(i) = s(i)
    }
    return res
}

def generate_runtime_source -> string {
    let runtime = util::exe_folder() + "/../src/runtime.pr"
    let fp = open(runtime, "rb")
    let source = read_all(fp)
    close(fp)
    return unsafe_copy(source)
}

export const runtime_source = generate_runtime_source()

def create_version_string -> string {
    var ret: StringBuffer = "Princess "
    let version_file = util::exe_folder() + "/../version"
    let fp = open(version_file, "rb")
    let version_str = util::replace_all(read_all(fp), "VERSION=", "")
    ret += version_str
    close(fp)
    return unsafe_copy(ret)
}

export const version = create_version_string()