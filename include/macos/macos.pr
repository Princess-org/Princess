export type u___mbstate_t = struct #union { __mbstate8: [128; char]; _mbstateL: int64; }
export type s__opaque_pthread_attr_t
export type s__opaque_pthread_cond_t
export type s__opaque_pthread_condattr_t
export type s__opaque_pthread_mutex_t
export type s__opaque_pthread_mutexattr_t
export type s__opaque_pthread_once_t
export type s__opaque_pthread_rwlock_t
export type s__opaque_pthread_rwlockattr_t
export type s__opaque_pthread_t
export type s_mach_port_status = struct { mps_pset: uint; mps_seqno: uint; mps_mscount: uint; mps_qlimit: uint; mps_msgcount: uint; mps_sorights: uint; mps_srights: int; mps_pdrequest: int; mps_nsrequest: int; mps_flags: uint; }
export type s_mach_port_limits = struct { mpl_qlimit: uint; }
export type s_mach_port_info_ext = struct { mpie_status: s_mach_port_status; mpie_boost_cnt: uint; reserved: [6; uint]; }
export type s_mach_port_guard_info = struct { mpgi_guard: uint64; }
export type s_mach_port_qos = struct { #bits(1) name: uint; #bits(1) prealloc: uint; #bits(30) pad1: int; len: uint; }
export type s_mach_service_port_info = struct { mspi_string_name: [255; char]; mspi_domain_type: uint8; }
export type s_mach_port_options = struct { flags: uint; mpl: s_mach_port_limits; struct #union { reserved: [2; uint64]; work_interval_port: uint; service_port_info: *s_mach_service_port_info; service_port_name: uint; }; }
export type s_mach_msg_type_descriptor_t = struct { pad1: uint; pad2: uint; #bits(24) pad3: uint; #bits(8) type_: uint; }
export type s_mach_msg_port_descriptor_t = struct { name: uint; pad1: uint; #bits(16) pad2: uint; #bits(8) disposition: uint; #bits(8) type_: uint; }
export type s_mach_msg_ool_descriptor32_t = struct { address: uint; size: uint; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) pad1: uint; #bits(8) type_: uint; }
export type s_mach_msg_ool_descriptor64_t = struct { address: uint64; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) pad1: uint; #bits(8) type_: uint; size: uint; }
export type s_mach_msg_ool_descriptor_t = struct { address: *; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) pad1: uint; #bits(8) type_: uint; size: uint; }
export type s_mach_msg_ool_ports_descriptor32_t = struct { address: uint; count: uint; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) disposition: uint; #bits(8) type_: uint; }
export type s_mach_msg_ool_ports_descriptor64_t = struct { address: uint64; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) disposition: uint; #bits(8) type_: uint; count: uint; }
export type s_mach_msg_ool_ports_descriptor_t = struct { address: *; #bits(8) deallocate: int; #bits(8) copy: uint; #bits(8) disposition: uint; #bits(8) type_: uint; count: uint; }
export type s_mach_msg_guarded_port_descriptor32_t = struct { context: uint; name: uint; #bits(16) flags: uint; #bits(8) disposition: uint; #bits(8) type_: uint; }
export type s_mach_msg_guarded_port_descriptor64_t = struct { context: uint64; #bits(16) flags: uint; #bits(8) disposition: uint; #bits(8) type_: uint; name: uint; }
export type s_mach_msg_guarded_port_descriptor_t = struct { context: ulong; #bits(16) flags: uint; #bits(8) disposition: uint; #bits(8) type_: uint; name: uint; }
export type u_mach_msg_descriptor_t = struct #union { port: s_mach_msg_port_descriptor_t; out_of_line: s_mach_msg_ool_descriptor_t; ool_ports: s_mach_msg_ool_ports_descriptor_t; type_: s_mach_msg_type_descriptor_t; guarded_port: s_mach_msg_guarded_port_descriptor_t; }
export type s_mach_msg_body_t = struct { msgh_descriptor_count: uint; }
export type s_mach_msg_header_t = struct { msgh_bits: uint; msgh_size: uint; msgh_remote_port: uint; msgh_local_port: uint; msgh_voucher_port: uint; msgh_id: int; }
export type s_mach_msg_base_t = struct { header: s_mach_msg_header_t; body: s_mach_msg_body_t; }
export type s_mach_msg_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; }
export type s_mach_msg_seqno_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; msgh_seqno: uint; }
export type s_security_token_t = struct { val: [2; uint]; }
export type s_mach_msg_security_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; msgh_seqno: uint; msgh_sender: s_security_token_t; }
export type s_audit_token_t = struct { val: [8; uint]; }
export type s_mach_msg_audit_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; msgh_seqno: uint; msgh_sender: s_security_token_t; msgh_audit: s_audit_token_t; }
export type s_mach_msg_context_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; msgh_seqno: uint; msgh_sender: s_security_token_t; msgh_audit: s_audit_token_t; msgh_context: ulong; }
export type s_msg_labels_t = struct { sender: uint; }
export type s_mach_msg_mac_trailer_t = struct { msgh_trailer_type: uint; msgh_trailer_size: uint; msgh_seqno: uint; msgh_sender: s_security_token_t; msgh_audit: s_audit_token_t; msgh_context: ulong; msgh_ad: int; msgh_labels: s_msg_labels_t; }
export type s_mach_msg_empty_send_t = struct { header: s_mach_msg_header_t; }
export type s_mach_msg_empty_rcv_t = struct { header: s_mach_msg_header_t; trailer: s_mach_msg_trailer_t; }
export type u_mach_msg_empty_t = struct #union { send: s_mach_msg_empty_send_t; rcv: s_mach_msg_empty_rcv_t; }
export type s_mach_vm_range
export type e_mach_vm_range_flavor_t = enum { MACH_VM_RANGE_FLAVOR_INVALID; MACH_VM_RANGE_FLAVOR_V1 = 1; }
export type e_mach_vm_range_flags_t = enum { MACH_VM_RANGE_NONE; }
export type e_mach_vm_range_tag_t = enum { MACH_VM_RANGE_DEFAULT; MACH_VM_RANGE_DATA = 1; MACH_VM_RANGE_FIXED = 2; }
export type s_mach_vm_range_recipe_v1_t = struct { #bits(48) flags: e_mach_vm_range_flags_t; #bits(8) range_tag: e_mach_vm_range_tag_t; #bits(8) vm_tag: uint8; range: s_mach_vm_range; }
export type s_arm_state_hdr
export type s___darwin_arm_thread_state
export type s___darwin_arm_thread_state64
export type s_arm_unified_thread_state
export type s___darwin_arm_vfp_state
export type s___darwin_arm_neon_state
export type s___darwin_arm_neon_state64
export type s___darwin_arm_exception_state
export type s___darwin_arm_exception_state64
export type s___darwin_arm_debug_state32
export type s___darwin_arm_debug_state64
export type s___arm_pagein_state
export type s___arm_legacy_debug_state
export type e_NSObjectFileImageReturnCode = enum { NSObjectFileImageFailure; NSObjectFileImageSuccess = 1; NSObjectFileImageInappropriateFile = 2; NSObjectFileImageArch = 3; NSObjectFileImageFormat = 4; NSObjectFileImageAccess = 5; }
export type s___NSObjectFileImage
export type s___NSModule
export type s___NSSymbol
export type e_NSLinkEditErrors = enum { NSLinkEditFileAccessError; NSLinkEditFileFormatError = 1; NSLinkEditMachResourceError = 2; NSLinkEditUnixResourceError = 3; NSLinkEditOtherError = 4; NSLinkEditWarningError = 5; NSLinkEditMultiplyDefinedError = 6; NSLinkEditUndefinedError = 7; }
export type e_NSOtherErrorNumbers = enum { NSOtherErrorRelocation; NSOtherErrorLazyBind = 1; NSOtherErrorIndrLoop = 2; NSOtherErrorLazyInit = 3; NSOtherErrorInvalidArgs = 4; }
export type s_NSLinkEditErrorHandlers = struct { undefined: def *char -> ; multiple: def [*s___NSSymbol, *s___NSModule, *s___NSModule] -> *s___NSModule; linkEdit: def [e_NSLinkEditErrors, int, *char, *char] -> ; }
export type s___darwin_pthread_handler_rec
export type s___darwin_pthread_handler_rec = struct { __routine: def * -> ; __arg: *; __next: *s___darwin_pthread_handler_rec; }
export type s__opaque_pthread_attr_t = struct { __sig: long; __opaque: [56; char]; }
export type s__opaque_pthread_cond_t = struct { __sig: long; __opaque: [40; char]; }
export type s__opaque_pthread_condattr_t = struct { __sig: long; __opaque: [8; char]; }
export type s__opaque_pthread_mutex_t = struct { __sig: long; __opaque: [56; char]; }
export type s__opaque_pthread_mutexattr_t = struct { __sig: long; __opaque: [8; char]; }
export type s__opaque_pthread_once_t = struct { __sig: long; __opaque: [8; char]; }
export type s__opaque_pthread_rwlock_t = struct { __sig: long; __opaque: [192; char]; }
export type s__opaque_pthread_rwlockattr_t = struct { __sig: long; __opaque: [16; char]; }
export type s__opaque_pthread_t = struct { __sig: long; __cleanup_stack: *s___darwin_pthread_handler_rec; __opaque: [8176; char]; }
export type s___darwin_arm_exception_state = struct { __exception: uint; __fsr: uint; __far: uint; }
export type s___darwin_arm_exception_state64 = struct { __far: uint64; __esr: uint; __exception: uint; }
export type s___darwin_arm_thread_state = struct { __r: [13; uint]; __sp: uint; __lr: uint; __pc: uint; __cpsr: uint; }
export type s___darwin_arm_thread_state64 = struct { __x: [29; uint64]; __fp: uint64; __lr: uint64; __sp: uint64; __pc: uint64; __cpsr: uint; __pad: uint; }
export type s___darwin_arm_vfp_state = struct { __r: [64; uint]; __fpscr: uint; }
export type s___darwin_arm_neon_state64 = struct { __v: [32; uint128]; __fpsr: uint; __fpcr: uint; }
export type s___darwin_arm_neon_state = struct { __v: [16; uint128]; __fpsr: uint; __fpcr: uint; }
export type s___arm_pagein_state = struct { __pagein_error: int; }
export type s___arm_legacy_debug_state = struct { __bvr: [16; uint]; __bcr: [16; uint]; __wvr: [16; uint]; __wcr: [16; uint]; }
export type s___darwin_arm_debug_state32 = struct { __bvr: [16; uint]; __bcr: [16; uint]; __wvr: [16; uint]; __wcr: [16; uint]; __mdscr_el1: uint64; }
export type s___darwin_arm_debug_state64 = struct { __bvr: [16; uint64]; __bcr: [16; uint64]; __wvr: [16; uint64]; __wcr: [16; uint64]; __mdscr_el1: uint64; }
export type s___darwin_arm_cpmu_state64 = struct { __ctrs: [16; uint64]; }
export type e_mach_port_guard_exception_codes = enum { kGUARD_EXC_DESTROY = 1; kGUARD_EXC_MOD_REFS = 2; kGUARD_EXC_INVALID_OPTIONS = 3; kGUARD_EXC_SET_CONTEXT = 4; kGUARD_EXC_THREAD_SET_STATE = 5; kGUARD_EXC_EXCEPTION_BEHAVIOR_ENFORCE = 6; kGUARD_EXC_UNGUARDED = 8; kGUARD_EXC_INCORRECT_GUARD = 16; kGUARD_EXC_IMMOVABLE = 32; kGUARD_EXC_STRICT_REPLY = 64; kGUARD_EXC_MSG_FILTERED = 128; kGUARD_EXC_INVALID_RIGHT = 256; kGUARD_EXC_INVALID_NAME = 512; kGUARD_EXC_INVALID_VALUE = 1024; kGUARD_EXC_INVALID_ARGUMENT = 2048; kGUARD_EXC_RIGHT_EXISTS = 4096; kGUARD_EXC_KERN_NO_SPACE = 8192; kGUARD_EXC_KERN_FAILURE = 16384; kGUARD_EXC_KERN_RESOURCE = 32768; kGUARD_EXC_SEND_INVALID_REPLY = 65536; kGUARD_EXC_SEND_INVALID_VOUCHER = 131072; kGUARD_EXC_SEND_INVALID_RIGHT = 262144; kGUARD_EXC_RCV_INVALID_NAME = 524288; kGUARD_EXC_RCV_GUARDED_DESC = 1048576; kGUARD_EXC_MOD_REFS_NON_FATAL = 2097152; kGUARD_EXC_IMMOVABLE_NON_FATAL = 4194304; kGUARD_EXC_REQUIRE_REPLY_PORT_SEMANTICS = 8388608; }
export type s_mach_vm_range = struct { min_address: uint64; max_address: uint64; }
export type s_arm_state_hdr = struct { flavor: uint; count: uint; }
export type s_arm_unified_thread_state = struct { ash: s_arm_state_hdr; uts: struct #union { ts_32: s___darwin_arm_thread_state; ts_64: s___darwin_arm_thread_state64; }; }
export type s__OSUnalignedU16
export type s__OSUnalignedU32
export type s__OSUnalignedU64
export type e_NXByteOrder = enum { NX_UnknownByteOrder; NX_LittleEndian = 1; NX_BigEndian = 2; }
export type s_mach_header = struct { magic: uint; cputype: int; cpusubtype: int; filetype: uint; ncmds: uint; sizeofcmds: uint; flags: uint; }
export type s_mach_header_64 = struct { magic: uint; cputype: int; cpusubtype: int; filetype: uint; ncmds: uint; sizeofcmds: uint; flags: uint; reserved: uint; }
export type s_load_command = struct { cmd: uint; cmdsize: uint; }
export type u_lc_str = struct #union { offset: uint; }
export type s_segment_command = struct { cmd: uint; cmdsize: uint; segname: [16; char]; vmaddr: uint; vmsize: uint; fileoff: uint; filesize: uint; maxprot: int; initprot: int; nsects: uint; flags: uint; }
export type s_segment_command_64 = struct { cmd: uint; cmdsize: uint; segname: [16; char]; vmaddr: uint64; vmsize: uint64; fileoff: uint64; filesize: uint64; maxprot: int; initprot: int; nsects: uint; flags: uint; }
export type s_section = struct { sectname: [16; char]; segname: [16; char]; addr: uint; size: uint; offset: uint; align: uint; reloff: uint; nreloc: uint; flags: uint; reserved1: uint; reserved2: uint; }
export type s_section_64 = struct { sectname: [16; char]; segname: [16; char]; addr: uint64; size: uint64; offset: uint; align: uint; reloff: uint; nreloc: uint; flags: uint; reserved1: uint; reserved2: uint; reserved3: uint; }
export type s_fvmlib = struct { name: u_lc_str; minor_version: uint; header_addr: uint; }
export type s_fvmlib_command = struct { cmd: uint; cmdsize: uint; fvmlib: s_fvmlib; }
export type s_dylib = struct { name: u_lc_str; timestamp: uint; current_version: uint; compatibility_version: uint; }
export type s_dylib_command = struct { cmd: uint; cmdsize: uint; dylib: s_dylib; }
export type s_dylib_use_command = struct { cmd: uint; cmdsize: uint; nameoff: uint; marker: uint; current_version: uint; compat_version: uint; flags: uint; }
export type s_sub_framework_command = struct { cmd: uint; cmdsize: uint; umbrella: u_lc_str; }
export type s_sub_client_command = struct { cmd: uint; cmdsize: uint; client: u_lc_str; }
export type s_sub_umbrella_command = struct { cmd: uint; cmdsize: uint; sub_umbrella: u_lc_str; }
export type s_sub_library_command = struct { cmd: uint; cmdsize: uint; sub_library: u_lc_str; }
export type s_prebound_dylib_command = struct { cmd: uint; cmdsize: uint; name: u_lc_str; nmodules: uint; linked_modules: u_lc_str; }
export type s_dylinker_command = struct { cmd: uint; cmdsize: uint; name: u_lc_str; }
export type s_thread_command = struct { cmd: uint; cmdsize: uint; }
export type s_routines_command = struct { cmd: uint; cmdsize: uint; init_address: uint; init_module: uint; reserved1: uint; reserved2: uint; reserved3: uint; reserved4: uint; reserved5: uint; reserved6: uint; }
export type s_routines_command_64 = struct { cmd: uint; cmdsize: uint; init_address: uint64; init_module: uint64; reserved1: uint64; reserved2: uint64; reserved3: uint64; reserved4: uint64; reserved5: uint64; reserved6: uint64; }
export type s_symtab_command = struct { cmd: uint; cmdsize: uint; symoff: uint; nsyms: uint; stroff: uint; strsize: uint; }
export type s_dysymtab_command = struct { cmd: uint; cmdsize: uint; ilocalsym: uint; nlocalsym: uint; iextdefsym: uint; nextdefsym: uint; iundefsym: uint; nundefsym: uint; tocoff: uint; ntoc: uint; modtaboff: uint; nmodtab: uint; extrefsymoff: uint; nextrefsyms: uint; indirectsymoff: uint; nindirectsyms: uint; extreloff: uint; nextrel: uint; locreloff: uint; nlocrel: uint; }
export type s_dylib_table_of_contents = struct { symbol_index: uint; module_index: uint; }
export type s_dylib_module = struct { module_name: uint; iextdefsym: uint; nextdefsym: uint; irefsym: uint; nrefsym: uint; ilocalsym: uint; nlocalsym: uint; iextrel: uint; nextrel: uint; iinit_iterm: uint; ninit_nterm: uint; objc_module_info_addr: uint; objc_module_info_size: uint; }
export type s_dylib_module_64 = struct { module_name: uint; iextdefsym: uint; nextdefsym: uint; irefsym: uint; nrefsym: uint; ilocalsym: uint; nlocalsym: uint; iextrel: uint; nextrel: uint; iinit_iterm: uint; ninit_nterm: uint; objc_module_info_size: uint; objc_module_info_addr: uint64; }
export type s_dylib_reference = struct { #bits(24) isym: uint; #bits(8) flags: uint; }
export type s_twolevel_hints_command = struct { cmd: uint; cmdsize: uint; offset: uint; nhints: uint; }
export type s_twolevel_hint = struct { #bits(8) isub_image: uint; #bits(24) itoc: uint; }
export type s_prebind_cksum_command = struct { cmd: uint; cmdsize: uint; cksum: uint; }
export type s_uuid_command = struct { cmd: uint; cmdsize: uint; uuid: [16; uint8]; }
export type s_rpath_command = struct { cmd: uint; cmdsize: uint; path: u_lc_str; }
export type s_linkedit_data_command = struct { cmd: uint; cmdsize: uint; dataoff: uint; datasize: uint; }
export type s_encryption_info_command = struct { cmd: uint; cmdsize: uint; cryptoff: uint; cryptsize: uint; cryptid: uint; }
export type s_encryption_info_command_64 = struct { cmd: uint; cmdsize: uint; cryptoff: uint; cryptsize: uint; cryptid: uint; pad: uint; }
export type s_version_min_command = struct { cmd: uint; cmdsize: uint; version: uint; sdk: uint; }
export type s_build_version_command = struct { cmd: uint; cmdsize: uint; platform: uint; minos: uint; sdk: uint; ntools: uint; }
export type s_build_tool_version = struct { tool: uint; version: uint; }
export type s_dyld_info_command = struct { cmd: uint; cmdsize: uint; rebase_off: uint; rebase_size: uint; bind_off: uint; bind_size: uint; weak_bind_off: uint; weak_bind_size: uint; lazy_bind_off: uint; lazy_bind_size: uint; export_off: uint; export_size: uint; }
export type s_linker_option_command = struct { cmd: uint; cmdsize: uint; count: uint; }
export type s_symseg_command = struct { cmd: uint; cmdsize: uint; offset: uint; size: uint; }
export type s_ident_command = struct { cmd: uint; cmdsize: uint; }
export type s_fvmfile_command = struct { cmd: uint; cmdsize: uint; name: u_lc_str; header_addr: uint; }
export type s_entry_point_command = struct { cmd: uint; cmdsize: uint; entryoff: uint64; stacksize: uint64; }
export type s_source_version_command = struct { cmd: uint; cmdsize: uint; version: uint64; }
export type s_data_in_code_entry = struct { offset: uint; length: ushort; kind: ushort; }
export type s_tlv_descriptor
export type s_tlv_descriptor = struct { thunk: def *s_tlv_descriptor -> *; key: ulong; offset: ulong; }
export type s_note_command = struct { cmd: uint; cmdsize: uint; data_owner: [16; char]; offset: uint64; size: uint64; }
export type s_fileset_entry_command = struct { cmd: uint; cmdsize: uint; vmaddr: uint64; fileoff: uint64; entry_id: u_lc_str; reserved: uint; }
export type e_DYLD_BOOL = enum { FALSE; TRUE = 1; }
export type s___NSObjectFileImage
export type s___NSModule
export type s___NSSymbol
export const __llvm__: int = 1
export const __clang__: int = 1
export const __clang_major__: int = 17
export const __clang_minor__: int = 0
export const __clang_patchlevel__: int = 6
export const __clang_version__: [char] = "17.0.6 "
export const __GNUC__: int = 4
export const __GNUC_MINOR__: int = 2
export const __GNUC_PATCHLEVEL__: int = 1
export const __GXX_ABI_VERSION: int = 1002
export const __ATOMIC_RELAXED: int = 0
export const __ATOMIC_CONSUME: int = 1
export const __ATOMIC_ACQUIRE: int = 2
export const __ATOMIC_RELEASE: int = 3
export const __ATOMIC_ACQ_REL: int = 4
export const __ATOMIC_SEQ_CST: int = 5
export const __OPENCL_MEMORY_SCOPE_WORK_ITEM: int = 0
export const __OPENCL_MEMORY_SCOPE_WORK_GROUP: int = 1
export const __OPENCL_MEMORY_SCOPE_DEVICE: int = 2
export const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES: int = 3
export const __OPENCL_MEMORY_SCOPE_SUB_GROUP: int = 4
export const __PRAGMA_REDEFINE_EXTNAME: int = 1
export const __VERSION__: [char] = "Homebrew Clang 17.0.6"
export const __OBJC_BOOL_IS_BOOL: int = 1
export const __CONSTANT_CFSTRINGS__: int = 1
export const __BLOCKS__: int = 1
export const __clang_literal_encoding__: [char] = "UTF-8"
export const __clang_wide_literal_encoding__: [char] = "UTF-32"
export const __ORDER_LITTLE_ENDIAN__: int = 1234
export const __ORDER_BIG_ENDIAN__: int = 4321
export const __ORDER_PDP_ENDIAN__: int = 3412
export const __LITTLE_ENDIAN__: int = 1
export const _LP64: int = 1
export const __LP64__: int = 1
export const __CHAR_BIT__: int = 8
export const __BOOL_WIDTH__: int = 8
export const __SHRT_WIDTH__: int = 16
export const __INT_WIDTH__: int = 32
export const __LONG_WIDTH__: int = 64
export const __LLONG_WIDTH__: int = 64
export const __BITINT_MAXWIDTH__: int = 128
export const __SCHAR_MAX__: int = 127
export const __SHRT_MAX__: int = 32767
export const __INT_MAX__: int = 2147483647
export const __WCHAR_MAX__: int = 2147483647
export const __WCHAR_WIDTH__: int = 32
export const __WINT_MAX__: int = 2147483647
export const __WINT_WIDTH__: int = 32
export const __INTMAX_WIDTH__: int = 64
export const __SIZE_WIDTH__: int = 64
export const __UINTMAX_WIDTH__: int = 64
export const __PTRDIFF_WIDTH__: int = 64
export const __INTPTR_WIDTH__: int = 64
export const __UINTPTR_WIDTH__: int = 64
export const __SIZEOF_DOUBLE__: int = 8
export const __SIZEOF_FLOAT__: int = 4
export const __SIZEOF_INT__: int = 4
export const __SIZEOF_LONG__: int = 8
export const __SIZEOF_LONG_DOUBLE__: int = 8
export const __SIZEOF_LONG_LONG__: int = 8
export const __SIZEOF_POINTER__: int = 8
export const __SIZEOF_SHORT__: int = 2
export const __SIZEOF_PTRDIFF_T__: int = 8
export const __SIZEOF_SIZE_T__: int = 8
export const __SIZEOF_WCHAR_T__: int = 4
export const __SIZEOF_WINT_T__: int = 4
export const __SIZEOF_INT128__: int = 16
export const __INTMAX_FMTd__: [char] = "ld"
export const __INTMAX_FMTi__: [char] = "li"
export const __UINTMAX_FMTo__: [char] = "lo"
export const __UINTMAX_FMTu__: [char] = "lu"
export const __UINTMAX_FMTx__: [char] = "lx"
export const __UINTMAX_FMTX__: [char] = "lX"
export const __PTRDIFF_FMTd__: [char] = "ld"
export const __PTRDIFF_FMTi__: [char] = "li"
export const __INTPTR_FMTd__: [char] = "ld"
export const __INTPTR_FMTi__: [char] = "li"
export const __SIZE_FMTo__: [char] = "lo"
export const __SIZE_FMTu__: [char] = "lu"
export const __SIZE_FMTx__: [char] = "lx"
export const __SIZE_FMTX__: [char] = "lX"
export const __SIG_ATOMIC_MAX__: int = 2147483647
export const __SIG_ATOMIC_WIDTH__: int = 32
export const __UINTPTR_FMTo__: [char] = "lo"
export const __UINTPTR_FMTu__: [char] = "lu"
export const __UINTPTR_FMTx__: [char] = "lx"
export const __UINTPTR_FMTX__: [char] = "lX"
export const __FLT16_HAS_DENORM__: int = 1
export const __FLT16_DIG__: int = 3
export const __FLT16_DECIMAL_DIG__: int = 5
export const __FLT16_HAS_INFINITY__: int = 1
export const __FLT16_HAS_QUIET_NAN__: int = 1
export const __FLT16_MANT_DIG__: int = 11
export const __FLT16_MAX_10_EXP__: int = 4
export const __FLT16_MAX_EXP__: int = 16
export const __FLT_HAS_DENORM__: int = 1
export const __FLT_DIG__: int = 6
export const __FLT_DECIMAL_DIG__: int = 9
export const __FLT_HAS_INFINITY__: int = 1
export const __FLT_HAS_QUIET_NAN__: int = 1
export const __FLT_MANT_DIG__: int = 24
export const __FLT_MAX_10_EXP__: int = 38
export const __FLT_MAX_EXP__: int = 128
export const __DBL_DENORM_MIN__: double = 4.9406564584124654e-324
export const __DBL_HAS_DENORM__: int = 1
export const __DBL_DIG__: int = 15
export const __DBL_DECIMAL_DIG__: int = 17
export const __DBL_EPSILON__: double = 2.2204460492503131e-16
export const __DBL_HAS_INFINITY__: int = 1
export const __DBL_HAS_QUIET_NAN__: int = 1
export const __DBL_MANT_DIG__: int = 53
export const __DBL_MAX_10_EXP__: int = 308
export const __DBL_MAX_EXP__: int = 1024
export const __DBL_MAX__: double = 1.7976931348623157e+308
export const __DBL_MIN__: double = 2.2250738585072014e-308
export const __LDBL_HAS_DENORM__: int = 1
export const __LDBL_DIG__: int = 15
export const __LDBL_DECIMAL_DIG__: int = 17
export const __LDBL_HAS_INFINITY__: int = 1
export const __LDBL_HAS_QUIET_NAN__: int = 1
export const __LDBL_MANT_DIG__: int = 53
export const __LDBL_MAX_10_EXP__: int = 308
export const __LDBL_MAX_EXP__: int = 1024
export const __POINTER_WIDTH__: int = 64
export const __BIGGEST_ALIGNMENT__: int = 8
export const __INT8_FMTd__: [char] = "hhd"
export const __INT8_FMTi__: [char] = "hhi"
export const __INT16_FMTd__: [char] = "hd"
export const __INT16_FMTi__: [char] = "hi"
export const __INT32_FMTd__: [char] = "d"
export const __INT32_FMTi__: [char] = "i"
export const __INT64_FMTd__: [char] = "lld"
export const __INT64_FMTi__: [char] = "lli"
export const __UINT8_FMTo__: [char] = "hho"
export const __UINT8_FMTu__: [char] = "hhu"
export const __UINT8_FMTx__: [char] = "hhx"
export const __UINT8_FMTX__: [char] = "hhX"
export const __UINT8_MAX__: int = 255
export const __INT8_MAX__: int = 127
export const __UINT16_FMTo__: [char] = "ho"
export const __UINT16_FMTu__: [char] = "hu"
export const __UINT16_FMTx__: [char] = "hx"
export const __UINT16_FMTX__: [char] = "hX"
export const __UINT16_MAX__: int = 65535
export const __INT16_MAX__: int = 32767
export const __UINT32_FMTo__: [char] = "o"
export const __UINT32_FMTu__: [char] = "u"
export const __UINT32_FMTx__: [char] = "x"
export const __UINT32_FMTX__: [char] = "X"
export const __INT32_MAX__: int = 2147483647
export const __UINT64_FMTo__: [char] = "llo"
export const __UINT64_FMTu__: [char] = "llu"
export const __UINT64_FMTx__: [char] = "llx"
export const __UINT64_FMTX__: [char] = "llX"
export const __INT_LEAST8_MAX__: int = 127
export const __INT_LEAST8_WIDTH__: int = 8
export const __INT_LEAST8_FMTd__: [char] = "hhd"
export const __INT_LEAST8_FMTi__: [char] = "hhi"
export const __UINT_LEAST8_MAX__: int = 255
export const __UINT_LEAST8_FMTo__: [char] = "hho"
export const __UINT_LEAST8_FMTu__: [char] = "hhu"
export const __UINT_LEAST8_FMTx__: [char] = "hhx"
export const __UINT_LEAST8_FMTX__: [char] = "hhX"
export const __INT_LEAST16_MAX__: int = 32767
export const __INT_LEAST16_WIDTH__: int = 16
export const __INT_LEAST16_FMTd__: [char] = "hd"
export const __INT_LEAST16_FMTi__: [char] = "hi"
export const __UINT_LEAST16_MAX__: int = 65535
export const __UINT_LEAST16_FMTo__: [char] = "ho"
export const __UINT_LEAST16_FMTu__: [char] = "hu"
export const __UINT_LEAST16_FMTx__: [char] = "hx"
export const __UINT_LEAST16_FMTX__: [char] = "hX"
export const __INT_LEAST32_MAX__: int = 2147483647
export const __INT_LEAST32_WIDTH__: int = 32
export const __INT_LEAST32_FMTd__: [char] = "d"
export const __INT_LEAST32_FMTi__: [char] = "i"
export const __UINT_LEAST32_FMTo__: [char] = "o"
export const __UINT_LEAST32_FMTu__: [char] = "u"
export const __UINT_LEAST32_FMTx__: [char] = "x"
export const __UINT_LEAST32_FMTX__: [char] = "X"
export const __INT_LEAST64_WIDTH__: int = 64
export const __INT_LEAST64_FMTd__: [char] = "lld"
export const __INT_LEAST64_FMTi__: [char] = "lli"
export const __UINT_LEAST64_FMTo__: [char] = "llo"
export const __UINT_LEAST64_FMTu__: [char] = "llu"
export const __UINT_LEAST64_FMTx__: [char] = "llx"
export const __UINT_LEAST64_FMTX__: [char] = "llX"
export const __INT_FAST8_MAX__: int = 127
export const __INT_FAST8_WIDTH__: int = 8
export const __INT_FAST8_FMTd__: [char] = "hhd"
export const __INT_FAST8_FMTi__: [char] = "hhi"
export const __UINT_FAST8_MAX__: int = 255
export const __UINT_FAST8_FMTo__: [char] = "hho"
export const __UINT_FAST8_FMTu__: [char] = "hhu"
export const __UINT_FAST8_FMTx__: [char] = "hhx"
export const __UINT_FAST8_FMTX__: [char] = "hhX"
export const __INT_FAST16_MAX__: int = 32767
export const __INT_FAST16_WIDTH__: int = 16
export const __INT_FAST16_FMTd__: [char] = "hd"
export const __INT_FAST16_FMTi__: [char] = "hi"
export const __UINT_FAST16_MAX__: int = 65535
export const __UINT_FAST16_FMTo__: [char] = "ho"
export const __UINT_FAST16_FMTu__: [char] = "hu"
export const __UINT_FAST16_FMTx__: [char] = "hx"
export const __UINT_FAST16_FMTX__: [char] = "hX"
export const __INT_FAST32_MAX__: int = 2147483647
export const __INT_FAST32_WIDTH__: int = 32
export const __INT_FAST32_FMTd__: [char] = "d"
export const __INT_FAST32_FMTi__: [char] = "i"
export const __UINT_FAST32_FMTo__: [char] = "o"
export const __UINT_FAST32_FMTu__: [char] = "u"
export const __UINT_FAST32_FMTx__: [char] = "x"
export const __UINT_FAST32_FMTX__: [char] = "X"
export const __INT_FAST64_WIDTH__: int = 64
export const __INT_FAST64_FMTd__: [char] = "lld"
export const __INT_FAST64_FMTi__: [char] = "lli"
export const __UINT_FAST64_FMTo__: [char] = "llo"
export const __UINT_FAST64_FMTu__: [char] = "llu"
export const __UINT_FAST64_FMTx__: [char] = "llx"
export const __UINT_FAST64_FMTX__: [char] = "llX"
export const __NO_MATH_ERRNO__: int = 1
export const __FINITE_MATH_ONLY__: int = 0
export const __GNUC_STDC_INLINE__: int = 1
export const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL: int = 1
export const __CLANG_ATOMIC_BOOL_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_SHORT_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_INT_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_LONG_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_LLONG_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_POINTER_LOCK_FREE: int = 2
export const __GCC_ATOMIC_BOOL_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR16_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR32_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_WCHAR_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_SHORT_LOCK_FREE: int = 2
export const __GCC_ATOMIC_INT_LOCK_FREE: int = 2
export const __GCC_ATOMIC_LONG_LOCK_FREE: int = 2
export const __GCC_ATOMIC_LLONG_LOCK_FREE: int = 2
export const __GCC_ATOMIC_POINTER_LOCK_FREE: int = 2
export const __NO_INLINE__: int = 1
export const __PIC__: int = 2
export const __pic__: int = 2
export const __FLT_RADIX__: int = 2
export const __SSP__: int = 1
export const __AARCH64EL__: int = 1
export const __aarch64__: int = 1
export const __GCC_ASM_FLAG_OUTPUTS__: int = 1
export const __AARCH64_CMODEL_SMALL__: int = 1
export const __ARM_ACLE: int = 200
export const __ARM_ARCH: int = 8
export const __ARM_64BIT_STATE: int = 1
export const __ARM_PCS_AAPCS64: int = 1
export const __ARM_ARCH_ISA_A64: int = 1
export const __ARM_FEATURE_CLZ: int = 1
export const __ARM_FEATURE_FMA: int = 1
export const __ARM_FEATURE_IDIV: int = 1
export const __ARM_FEATURE_DIV: int = 1
export const __ARM_FEATURE_NUMERIC_MAXMIN: int = 1
export const __ARM_FEATURE_DIRECTED_ROUNDING: int = 1
export const __ARM_ALIGN_MAX_STACK_PWR: int = 4
export const __ARM_FP16_FORMAT_IEEE: int = 1
export const __ARM_FP16_ARGS: int = 1
export const __ARM_SIZEOF_WCHAR_T: int = 4
export const __ARM_SIZEOF_MINIMAL_ENUM: int = 4
export const __ARM_NEON: int = 1
export const __ARM_FEATURE_CRC32: int = 1
export const __ARM_FEATURE_RCPC: int = 1
export const __HAVE_FUNCTION_MULTI_VERSIONING: int = 1
export const __ARM_FEATURE_CRYPTO: int = 1
export const __ARM_FEATURE_AES: int = 1
export const __ARM_FEATURE_SHA2: int = 1
export const __ARM_FEATURE_SHA3: int = 1
export const __ARM_FEATURE_SHA512: int = 1
export const __ARM_FEATURE_UNALIGNED: int = 1
export const __ARM_FEATURE_FP16_VECTOR_ARITHMETIC: int = 1
export const __ARM_FEATURE_FP16_SCALAR_ARITHMETIC: int = 1
export const __ARM_FEATURE_DOTPROD: int = 1
export const __ARM_FEATURE_ATOMICS: int = 1
export const __ARM_FEATURE_FP16_FML: int = 1
export const __ARM_FEATURE_FRINT: int = 1
export const __ARM_FEATURE_BTI: int = 1
export const __ARM_FEATURE_COMPLEX: int = 1
export const __ARM_FEATURE_JCVT: int = 1
export const __ARM_FEATURE_PAUTH: int = 1
export const __ARM_FEATURE_QRDMX: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8: int = 1
export const __FP_FAST_FMA: int = 1
export const __FP_FAST_FMAF: int = 1
export const __AARCH64_SIMD__: int = 1
export const __ARM64_ARCH_8__: int = 1
export const __ARM_NEON__: int = 1
export const __arm64: int = 1
export const __arm64__: int = 1
export const __APPLE_CC__: int = 6000
export const __APPLE__: int = 1
export const __STDC_NO_THREADS__: int = 1
export const __DYNAMIC__: int = 1
export const __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__: int = 140000
export const __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__: int = 140000
export const __MACH__: int = 1
export const __STDC__: int = 1
export const __STDC_HOSTED__: int = 1
export const __STDC_UTF_16__: int = 1
export const __STDC_UTF_32__: int = 1
export const __GCC_HAVE_DWARF2_CFI_ASM: int = 1
export const __has_safe_buffers: int = 1
export const __DARWIN_ONLY_64_BIT_INO_T: int = 1
export const __DARWIN_ONLY_UNIX_CONFORMANCE: int = 1
export const __DARWIN_ONLY_VERS_1050: int = 1
export const __DARWIN_UNIX03: int = 1
export const __DARWIN_64_BIT_INO_T: int = 1
export const __DARWIN_VERS_1050: int = 1
export const __DARWIN_NON_CANCELABLE: int = 0
export const __DARWIN_SUF_EXTSN: [char] = "$DARWIN_EXTSN"
export const __STDC_WANT_LIB_EXT1__: int = 1
export const __DARWIN_NO_LONG_LONG: int = 0
export const _DARWIN_FEATURE_64_BIT_INODE: int = 1
export const _DARWIN_FEATURE_ONLY_64_BIT_INODE: int = 1
export const _DARWIN_FEATURE_ONLY_VERS_1050: int = 1
export const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: int = 1
export const _DARWIN_FEATURE_UNIX_CONFORMANCE: int = 3
export const __has_ptrcheck: int = 0
export const __PTHREAD_SIZE__: int = 8176
export const __PTHREAD_ATTR_SIZE__: int = 56
export const __PTHREAD_MUTEXATTR_SIZE__: int = 8
export const __PTHREAD_MUTEX_SIZE__: int = 56
export const __PTHREAD_CONDATTR_SIZE__: int = 8
export const __PTHREAD_COND_SIZE__: int = 40
export const __PTHREAD_ONCE_SIZE__: int = 8
export const __PTHREAD_RWLOCK_SIZE__: int = 192
export const __PTHREAD_RWLOCKATTR_SIZE__: int = 16
export const _FORTIFY_SOURCE: int = 2
export const __WORDSIZE: int = 64
export const INT8_MAX: int = 127
export const INT16_MAX: int = 32767
export const INT32_MAX: int = 2147483647
export const UINT8_MAX: int = 255
export const UINT16_MAX: int = 65535
export const __API_TO_BE_DEPRECATED: int = 100000
export const __API_TO_BE_DEPRECATED_MACOS: int = 100000
export const __API_TO_BE_DEPRECATED_IOS: int = 100000
export const __API_TO_BE_DEPRECATED_MACCATALYST: int = 100000
export const __API_TO_BE_DEPRECATED_WATCHOS: int = 100000
export const __API_TO_BE_DEPRECATED_TVOS: int = 100000
export const __API_TO_BE_DEPRECATED_DRIVERKIT: int = 100000
export const __API_TO_BE_DEPRECATED_VISIONOS: int = 100000
export const __MAC_10_0: int = 1000
export const __MAC_10_1: int = 1010
export const __MAC_10_2: int = 1020
export const __MAC_10_3: int = 1030
export const __MAC_10_4: int = 1040
export const __MAC_10_5: int = 1050
export const __MAC_10_6: int = 1060
export const __MAC_10_7: int = 1070
export const __MAC_10_8: int = 1080
export const __MAC_10_9: int = 1090
export const __MAC_10_10: int = 101000
export const __MAC_10_10_2: int = 101002
export const __MAC_10_10_3: int = 101003
export const __MAC_10_11: int = 101100
export const __MAC_10_11_2: int = 101102
export const __MAC_10_11_3: int = 101103
export const __MAC_10_11_4: int = 101104
export const __MAC_10_12: int = 101200
export const __MAC_10_12_1: int = 101201
export const __MAC_10_12_2: int = 101202
export const __MAC_10_12_4: int = 101204
export const __MAC_10_13: int = 101300
export const __MAC_10_13_1: int = 101301
export const __MAC_10_13_2: int = 101302
export const __MAC_10_13_4: int = 101304
export const __MAC_10_14: int = 101400
export const __MAC_10_14_1: int = 101401
export const __MAC_10_14_4: int = 101404
export const __MAC_10_14_5: int = 101405
export const __MAC_10_14_6: int = 101406
export const __MAC_10_15: int = 101500
export const __MAC_10_15_1: int = 101501
export const __MAC_10_15_4: int = 101504
export const __MAC_10_16: int = 101600
export const __MAC_11_0: int = 110000
export const __MAC_11_1: int = 110100
export const __MAC_11_3: int = 110300
export const __MAC_11_4: int = 110400
export const __MAC_11_5: int = 110500
export const __MAC_11_6: int = 110600
export const __MAC_12_0: int = 120000
export const __MAC_12_1: int = 120100
export const __MAC_12_2: int = 120200
export const __MAC_12_3: int = 120300
export const __MAC_12_4: int = 120400
export const __MAC_12_5: int = 120500
export const __MAC_12_6: int = 120600
export const __MAC_12_7: int = 120700
export const __MAC_13_0: int = 130000
export const __MAC_13_1: int = 130100
export const __MAC_13_2: int = 130200
export const __MAC_13_3: int = 130300
export const __MAC_13_4: int = 130400
export const __MAC_13_5: int = 130500
export const __MAC_13_6: int = 130600
export const __MAC_14_0: int = 140000
export const __MAC_14_1: int = 140100
export const __MAC_14_2: int = 140200
export const __MAC_14_3: int = 140300
export const __MAC_14_4: int = 140400
export const __IPHONE_2_0: int = 20000
export const __IPHONE_2_1: int = 20100
export const __IPHONE_2_2: int = 20200
export const __IPHONE_3_0: int = 30000
export const __IPHONE_3_1: int = 30100
export const __IPHONE_3_2: int = 30200
export const __IPHONE_4_0: int = 40000
export const __IPHONE_4_1: int = 40100
export const __IPHONE_4_2: int = 40200
export const __IPHONE_4_3: int = 40300
export const __IPHONE_5_0: int = 50000
export const __IPHONE_5_1: int = 50100
export const __IPHONE_6_0: int = 60000
export const __IPHONE_6_1: int = 60100
export const __IPHONE_7_0: int = 70000
export const __IPHONE_7_1: int = 70100
export const __IPHONE_8_0: int = 80000
export const __IPHONE_8_1: int = 80100
export const __IPHONE_8_2: int = 80200
export const __IPHONE_8_3: int = 80300
export const __IPHONE_8_4: int = 80400
export const __IPHONE_9_0: int = 90000
export const __IPHONE_9_1: int = 90100
export const __IPHONE_9_2: int = 90200
export const __IPHONE_9_3: int = 90300
export const __IPHONE_10_0: int = 100000
export const __IPHONE_10_1: int = 100100
export const __IPHONE_10_2: int = 100200
export const __IPHONE_10_3: int = 100300
export const __IPHONE_11_0: int = 110000
export const __IPHONE_11_1: int = 110100
export const __IPHONE_11_2: int = 110200
export const __IPHONE_11_3: int = 110300
export const __IPHONE_11_4: int = 110400
export const __IPHONE_12_0: int = 120000
export const __IPHONE_12_1: int = 120100
export const __IPHONE_12_2: int = 120200
export const __IPHONE_12_3: int = 120300
export const __IPHONE_12_4: int = 120400
export const __IPHONE_13_0: int = 130000
export const __IPHONE_13_1: int = 130100
export const __IPHONE_13_2: int = 130200
export const __IPHONE_13_3: int = 130300
export const __IPHONE_13_4: int = 130400
export const __IPHONE_13_5: int = 130500
export const __IPHONE_13_6: int = 130600
export const __IPHONE_13_7: int = 130700
export const __IPHONE_14_0: int = 140000
export const __IPHONE_14_1: int = 140100
export const __IPHONE_14_2: int = 140200
export const __IPHONE_14_3: int = 140300
export const __IPHONE_14_5: int = 140500
export const __IPHONE_14_4: int = 140400
export const __IPHONE_14_6: int = 140600
export const __IPHONE_14_7: int = 140700
export const __IPHONE_14_8: int = 140800
export const __IPHONE_15_0: int = 150000
export const __IPHONE_15_1: int = 150100
export const __IPHONE_15_2: int = 150200
export const __IPHONE_15_3: int = 150300
export const __IPHONE_15_4: int = 150400
export const __IPHONE_15_5: int = 150500
export const __IPHONE_15_6: int = 150600
export const __IPHONE_15_7: int = 150700
export const __IPHONE_15_8: int = 150800
export const __IPHONE_16_0: int = 160000
export const __IPHONE_16_1: int = 160100
export const __IPHONE_16_2: int = 160200
export const __IPHONE_16_3: int = 160300
export const __IPHONE_16_4: int = 160400
export const __IPHONE_16_5: int = 160500
export const __IPHONE_16_6: int = 160600
export const __IPHONE_16_7: int = 160700
export const __IPHONE_17_0: int = 170000
export const __IPHONE_17_1: int = 170100
export const __IPHONE_17_2: int = 170200
export const __IPHONE_17_3: int = 170300
export const __IPHONE_17_4: int = 170400
export const __WATCHOS_1_0: int = 10000
export const __WATCHOS_2_0: int = 20000
export const __WATCHOS_2_1: int = 20100
export const __WATCHOS_2_2: int = 20200
export const __WATCHOS_3_0: int = 30000
export const __WATCHOS_3_1: int = 30100
export const __WATCHOS_3_1_1: int = 30101
export const __WATCHOS_3_2: int = 30200
export const __WATCHOS_4_0: int = 40000
export const __WATCHOS_4_1: int = 40100
export const __WATCHOS_4_2: int = 40200
export const __WATCHOS_4_3: int = 40300
export const __WATCHOS_5_0: int = 50000
export const __WATCHOS_5_1: int = 50100
export const __WATCHOS_5_2: int = 50200
export const __WATCHOS_5_3: int = 50300
export const __WATCHOS_6_0: int = 60000
export const __WATCHOS_6_1: int = 60100
export const __WATCHOS_6_2: int = 60200
export const __WATCHOS_7_0: int = 70000
export const __WATCHOS_7_1: int = 70100
export const __WATCHOS_7_2: int = 70200
export const __WATCHOS_7_3: int = 70300
export const __WATCHOS_7_4: int = 70400
export const __WATCHOS_7_5: int = 70500
export const __WATCHOS_7_6: int = 70600
export const __WATCHOS_8_0: int = 80000
export const __WATCHOS_8_1: int = 80100
export const __WATCHOS_8_3: int = 80300
export const __WATCHOS_8_4: int = 80400
export const __WATCHOS_8_5: int = 80500
export const __WATCHOS_8_6: int = 80600
export const __WATCHOS_8_7: int = 80700
export const __WATCHOS_8_8: int = 80800
export const __WATCHOS_9_0: int = 90000
export const __WATCHOS_9_1: int = 90100
export const __WATCHOS_9_2: int = 90200
export const __WATCHOS_9_3: int = 90300
export const __WATCHOS_9_4: int = 90400
export const __WATCHOS_9_5: int = 90500
export const __WATCHOS_9_6: int = 90600
export const __WATCHOS_10_0: int = 100000
export const __WATCHOS_10_1: int = 100100
export const __WATCHOS_10_2: int = 100200
export const __WATCHOS_10_3: int = 100300
export const __WATCHOS_10_4: int = 100400
export const __TVOS_9_0: int = 90000
export const __TVOS_9_1: int = 90100
export const __TVOS_9_2: int = 90200
export const __TVOS_10_0: int = 100000
export const __TVOS_10_0_1: int = 100001
export const __TVOS_10_1: int = 100100
export const __TVOS_10_2: int = 100200
export const __TVOS_11_0: int = 110000
export const __TVOS_11_1: int = 110100
export const __TVOS_11_2: int = 110200
export const __TVOS_11_3: int = 110300
export const __TVOS_11_4: int = 110400
export const __TVOS_12_0: int = 120000
export const __TVOS_12_1: int = 120100
export const __TVOS_12_2: int = 120200
export const __TVOS_12_3: int = 120300
export const __TVOS_12_4: int = 120400
export const __TVOS_13_0: int = 130000
export const __TVOS_13_2: int = 130200
export const __TVOS_13_3: int = 130300
export const __TVOS_13_4: int = 130400
export const __TVOS_14_0: int = 140000
export const __TVOS_14_1: int = 140100
export const __TVOS_14_2: int = 140200
export const __TVOS_14_3: int = 140300
export const __TVOS_14_5: int = 140500
export const __TVOS_14_6: int = 140600
export const __TVOS_14_7: int = 140700
export const __TVOS_15_0: int = 150000
export const __TVOS_15_1: int = 150100
export const __TVOS_15_2: int = 150200
export const __TVOS_15_3: int = 150300
export const __TVOS_15_4: int = 150400
export const __TVOS_15_5: int = 150500
export const __TVOS_15_6: int = 150600
export const __TVOS_16_0: int = 160000
export const __TVOS_16_1: int = 160100
export const __TVOS_16_2: int = 160200
export const __TVOS_16_3: int = 160300
export const __TVOS_16_4: int = 160400
export const __TVOS_16_5: int = 160500
export const __TVOS_16_6: int = 160600
export const __TVOS_17_0: int = 170000
export const __TVOS_17_1: int = 170100
export const __TVOS_17_2: int = 170200
export const __TVOS_17_3: int = 170300
export const __TVOS_17_4: int = 170400
export const __BRIDGEOS_2_0: int = 20000
export const __BRIDGEOS_3_0: int = 30000
export const __BRIDGEOS_3_1: int = 30100
export const __BRIDGEOS_3_4: int = 30400
export const __BRIDGEOS_4_0: int = 40000
export const __BRIDGEOS_4_1: int = 40100
export const __BRIDGEOS_5_0: int = 50000
export const __BRIDGEOS_5_1: int = 50100
export const __BRIDGEOS_5_3: int = 50300
export const __BRIDGEOS_6_0: int = 60000
export const __BRIDGEOS_6_2: int = 60200
export const __BRIDGEOS_6_4: int = 60400
export const __BRIDGEOS_6_5: int = 60500
export const __BRIDGEOS_6_6: int = 60600
export const __BRIDGEOS_7_0: int = 70000
export const __BRIDGEOS_7_1: int = 70100
export const __BRIDGEOS_7_2: int = 70200
export const __BRIDGEOS_7_3: int = 70300
export const __BRIDGEOS_7_4: int = 70400
export const __BRIDGEOS_7_6: int = 70600
export const __BRIDGEOS_8_0: int = 80000
export const __BRIDGEOS_8_1: int = 80100
export const __BRIDGEOS_8_2: int = 80200
export const __BRIDGEOS_8_3: int = 80300
export const __BRIDGEOS_8_4: int = 80400
export const __DRIVERKIT_19_0: int = 190000
export const __DRIVERKIT_20_0: int = 200000
export const __DRIVERKIT_21_0: int = 210000
export const __DRIVERKIT_22_0: int = 220000
export const __DRIVERKIT_22_4: int = 220400
export const __DRIVERKIT_22_5: int = 220500
export const __DRIVERKIT_22_6: int = 220600
export const __DRIVERKIT_23_0: int = 230000
export const __DRIVERKIT_23_1: int = 230100
export const __DRIVERKIT_23_2: int = 230200
export const __DRIVERKIT_23_3: int = 230300
export const __DRIVERKIT_23_4: int = 230400
export const __VISIONOS_1_0: int = 10000
export const __VISIONOS_1_1: int = 10100
export const __ENABLE_LEGACY_MAC_AVAILABILITY: int = 1
export const TRUE: int = 1
export const FALSE: int = 0
export const CPU_STATE_MAX: int = 4
export const CPU_STATE_USER: int = 0
export const CPU_STATE_SYSTEM: int = 1
export const CPU_STATE_IDLE: int = 2
export const CPU_STATE_NICE: int = 3
export const CPU_SUBTYPE_INTEL_FAMILY_MAX: int = 15
export const CPU_SUBTYPE_INTEL_MODEL_ALL: int = 0
export const CPUFAMILY_UNKNOWN: int = 0
export const CPUSUBFAMILY_UNKNOWN: int = 0
export const CPUSUBFAMILY_ARM_HP: int = 1
export const CPUSUBFAMILY_ARM_HG: int = 2
export const CPUSUBFAMILY_ARM_M: int = 3
export const CPUSUBFAMILY_ARM_HS: int = 4
export const CPUSUBFAMILY_ARM_HC_HD: int = 5
export const CPUSUBFAMILY_ARM_HA: int = 6
export const __DARWIN_OPAQUE_ARM_THREAD_STATE64: int = 0
export const THREAD_STATE_MAX: int = 1296
export const __DARWIN_CLK_TCK: int = 100
export const MB_LEN_MAX: int = 6
export const CHAR_BIT: int = 8
export const SCHAR_MAX: int = 127
export const UCHAR_MAX: int = 255
export const CHAR_MAX: int = 127
export const USHRT_MAX: int = 65535
export const SHRT_MAX: int = 32767
export const INT_MAX: int = 2147483647
export const LONG_BIT: int = 64
export const WORD_BIT: int = 32
export const MACH_PORT_NULL: int = 0
export const MACH_PORT_SRIGHTS_NONE: int = 0
export const MACH_PORT_SRIGHTS_PRESENT: int = 1
export const MACH_PORT_LIMITS_INFO: int = 1
export const MACH_PORT_RECEIVE_STATUS: int = 2
export const MACH_PORT_DNREQUESTS_SIZE: int = 3
export const MACH_PORT_TEMPOWNER: int = 4
export const MACH_PORT_IMPORTANCE_RECEIVER: int = 5
export const MACH_PORT_DENAP_RECEIVER: int = 6
export const MACH_PORT_INFO_EXT: int = 7
export const MACH_PORT_GUARD_INFO: int = 8
export const MACH_PORT_SERVICE_THROTTLED: int = 9
export const MACH_PORT_DNREQUESTS_SIZE_COUNT: int = 1
export const MACH_PORT_SERVICE_THROTTLED_COUNT: int = 1
export const MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN: int = 255
export const KERN_SUCCESS: int = 0
export const KERN_INVALID_ADDRESS: int = 1
export const KERN_PROTECTION_FAILURE: int = 2
export const KERN_NO_SPACE: int = 3
export const KERN_INVALID_ARGUMENT: int = 4
export const KERN_FAILURE: int = 5
export const KERN_RESOURCE_SHORTAGE: int = 6
export const KERN_NOT_RECEIVER: int = 7
export const KERN_NO_ACCESS: int = 8
export const KERN_MEMORY_FAILURE: int = 9
export const KERN_MEMORY_ERROR: int = 10
export const KERN_ALREADY_IN_SET: int = 11
export const KERN_NOT_IN_SET: int = 12
export const KERN_NAME_EXISTS: int = 13
export const KERN_ABORTED: int = 14
export const KERN_INVALID_NAME: int = 15
export const KERN_INVALID_TASK: int = 16
export const KERN_INVALID_RIGHT: int = 17
export const KERN_INVALID_VALUE: int = 18
export const KERN_UREFS_OVERFLOW: int = 19
export const KERN_INVALID_CAPABILITY: int = 20
export const KERN_RIGHT_EXISTS: int = 21
export const KERN_INVALID_HOST: int = 22
export const KERN_MEMORY_PRESENT: int = 23
export const KERN_MEMORY_DATA_MOVED: int = 24
export const KERN_MEMORY_RESTART_COPY: int = 25
export const KERN_INVALID_PROCESSOR_SET: int = 26
export const KERN_POLICY_LIMIT: int = 27
export const KERN_INVALID_POLICY: int = 28
export const KERN_INVALID_OBJECT: int = 29
export const KERN_ALREADY_WAITING: int = 30
export const KERN_DEFAULT_SET: int = 31
export const KERN_EXCEPTION_PROTECTED: int = 32
export const KERN_INVALID_LEDGER: int = 33
export const KERN_INVALID_MEMORY_CONTROL: int = 34
export const KERN_INVALID_SECURITY: int = 35
export const KERN_NOT_DEPRESSED: int = 36
export const KERN_TERMINATED: int = 37
export const KERN_LOCK_SET_DESTROYED: int = 38
export const KERN_LOCK_UNSTABLE: int = 39
export const KERN_LOCK_OWNED: int = 40
export const KERN_LOCK_OWNED_SELF: int = 41
export const KERN_SEMAPHORE_DESTROYED: int = 42
export const KERN_RPC_SERVER_TERMINATED: int = 43
export const KERN_RPC_TERMINATE_ORPHAN: int = 44
export const KERN_RPC_CONTINUE_ORPHAN: int = 45
export const KERN_NOT_SUPPORTED: int = 46
export const KERN_NODE_DOWN: int = 47
export const KERN_NOT_WAITING: int = 48
export const KERN_OPERATION_TIMED_OUT: int = 49
export const KERN_CODESIGN_ERROR: int = 50
export const KERN_POLICY_STATIC: int = 51
export const KERN_INSUFFICIENT_BUFFER_SIZE: int = 52
export const KERN_DENIED: int = 53
export const KERN_MISSING_KC: int = 54
export const KERN_INVALID_KC: int = 55
export const KERN_NOT_FOUND: int = 56
export const MACH_MSG_TYPE_MOVE_RECEIVE: int = 16
export const MACH_MSG_TYPE_MOVE_SEND: int = 17
export const MACH_MSG_TYPE_MOVE_SEND_ONCE: int = 18
export const MACH_MSG_TYPE_COPY_SEND: int = 19
export const MACH_MSG_TYPE_MAKE_SEND: int = 20
export const MACH_MSG_TYPE_MAKE_SEND_ONCE: int = 21
export const MACH_MSG_TYPE_COPY_RECEIVE: int = 22
export const MACH_MSG_TYPE_DISPOSE_RECEIVE: int = 24
export const MACH_MSG_TYPE_DISPOSE_SEND: int = 25
export const MACH_MSG_TYPE_DISPOSE_SEND_ONCE: int = 26
export const MACH_MSG_PHYSICAL_COPY: int = 0
export const MACH_MSG_VIRTUAL_COPY: int = 1
export const MACH_MSG_ALLOCATE: int = 2
export const MACH_MSG_OVERWRITE: int = 3
export const MACH_MSG_PORT_DESCRIPTOR: int = 0
export const MACH_MSG_OOL_DESCRIPTOR: int = 1
export const MACH_MSG_OOL_PORTS_DESCRIPTOR: int = 2
export const MACH_MSG_OOL_VOLATILE_DESCRIPTOR: int = 3
export const MACH_MSG_GUARDED_PORT_DESCRIPTOR: int = 4
export const MACH_MSG_TRAILER_FORMAT_0: int = 0
export const MACH_MSG_TYPE_PORT_NONE: int = 0
export const MACH_MSG_TYPE_PORT_NAME: int = 15
export const MACH_MSG_TYPE_LAST: int = 22
export const MACH_RCV_TRAILER_NULL: int = 0
export const MACH_RCV_TRAILER_SEQNO: int = 1
export const MACH_RCV_TRAILER_SENDER: int = 2
export const MACH_RCV_TRAILER_AUDIT: int = 3
export const MACH_RCV_TRAILER_CTX: int = 4
export const MACH_RCV_TRAILER_AV: int = 7
export const MACH_RCV_TRAILER_LABELS: int = 8
export const ARM_THREAD_STATE: int = 1
export const ARM_VFP_STATE: int = 2
export const ARM_EXCEPTION_STATE: int = 3
export const ARM_DEBUG_STATE: int = 4
export const THREAD_STATE_NONE: int = 5
export const ARM_THREAD_STATE64: int = 6
export const ARM_EXCEPTION_STATE64: int = 7
export const ARM_THREAD_STATE32: int = 9
export const ARM_DEBUG_STATE32: int = 14
export const ARM_DEBUG_STATE64: int = 15
export const ARM_NEON_STATE: int = 16
export const ARM_NEON_STATE64: int = 17
export const ARM_CPMU_STATE64: int = 18
export const ARM_PAGEIN_STATE: int = 27
export const SEG_PAGEZERO: [char] = "__PAGEZERO"
export const SEG_TEXT: [char] = "__TEXT"
export const SECT_TEXT: [char] = "__text"
export const SECT_FVMLIB_INIT0: [char] = "__fvmlib_init0"
export const SECT_FVMLIB_INIT1: [char] = "__fvmlib_init1"
export const SEG_DATA: [char] = "__DATA"
export const SECT_DATA: [char] = "__data"
export const SECT_BSS: [char] = "__bss"
export const SECT_COMMON: [char] = "__common"
export const SEG_OBJC: [char] = "__OBJC"
export const SECT_OBJC_SYMBOLS: [char] = "__symbol_table"
export const SECT_OBJC_MODULES: [char] = "__module_info"
export const SECT_OBJC_STRINGS: [char] = "__selector_strs"
export const SECT_OBJC_REFS: [char] = "__selector_refs"
export const SEG_ICON: [char] = "__ICON"
export const SECT_ICON_HEADER: [char] = "__header"
export const SECT_ICON_TIFF: [char] = "__tiff"
export const SEG_LINKEDIT: [char] = "__LINKEDIT"
export const SEG_UNIXSTACK: [char] = "__UNIXSTACK"
export const SEG_IMPORT: [char] = "__IMPORT"
export const PLATFORM_UNKNOWN: int = 0
export const PLATFORM_MACOS: int = 1
export const PLATFORM_IOS: int = 2
export const PLATFORM_TVOS: int = 3
export const PLATFORM_WATCHOS: int = 4
export const PLATFORM_BRIDGEOS: int = 5
export const PLATFORM_MACCATALYST: int = 6
export const PLATFORM_IOSSIMULATOR: int = 7
export const PLATFORM_TVOSSIMULATOR: int = 8
export const PLATFORM_WATCHOSSIMULATOR: int = 9
export const PLATFORM_DRIVERKIT: int = 10
export const PLATFORM_VISIONOS: int = 11
export const PLATFORM_VISIONOSSIMULATOR: int = 12
export const PLATFORM_FIRMWARE: int = 13
export const PLATFORM_SEPOS: int = 14
export const TOOL_CLANG: int = 1
export const TOOL_SWIFT: int = 2
export const TOOL_LD: int = 3
export const TOOL_LLD: int = 4
export const TOOL_METAL: int = 1024
export const TOOL_AIRLLD: int = 1025
export const TOOL_AIRNT: int = 1026
export const TOOL_AIRNT_PLUGIN: int = 1027
export const TOOL_AIRPACK: int = 1028
export const TOOL_GPUARCHIVER: int = 1031
export const TOOL_METAL_FRAMEWORK: int = 1032
export const REBASE_TYPE_POINTER: int = 1
export const REBASE_TYPE_TEXT_ABSOLUTE32: int = 2
export const REBASE_TYPE_TEXT_PCREL32: int = 3
export const BIND_TYPE_POINTER: int = 1
export const BIND_TYPE_TEXT_ABSOLUTE32: int = 2
export const BIND_TYPE_TEXT_PCREL32: int = 3
export const BIND_SPECIAL_DYLIB_SELF: int = 0
export const DYNAMIC_TARGETS_ENABLED: int = 0
export const TARGET_OS_MAC: int = 1
export const TARGET_OS_OSX: int = 1
export const TARGET_OS_IPHONE: int = 0
export const TARGET_OS_IOS: int = 0
export const TARGET_OS_WATCH: int = 0
export const TARGET_OS_TV: int = 0
export const TARGET_OS_MACCATALYST: int = 0
export const TARGET_OS_UIKITFORMAC: int = 0
export const TARGET_OS_SIMULATOR: int = 0
export const TARGET_OS_EMBEDDED: int = 0
export const TARGET_OS_UNIX: int = 0
export const TARGET_OS_RTKIT: int = 0
export const TARGET_RT_LITTLE_ENDIAN: int = 1
export const TARGET_RT_BIG_ENDIAN: int = 0
export const TARGET_RT_64_BIT: int = 1
export const TARGET_RT_MAC_CFM: int = 0
export const TARGET_RT_MAC_MACHO: int = 1
export const TARGET_CPU_ARM64: int = 1
export const TARGET_OS_VISION: int = 0
export const TARGET_OS_DRIVERKIT: int = 0
export const TARGET_OS_WIN32: int = 0
export const TARGET_OS_WINDOWS: int = 0
export const TARGET_OS_LINUX: int = 0
export const TARGET_CPU_PPC: int = 0
export const TARGET_CPU_PPC64: int = 0
export const TARGET_CPU_68K: int = 0
export const TARGET_CPU_X86: int = 0
export const TARGET_CPU_X86_64: int = 0
export const TARGET_CPU_ARM: int = 0
export const TARGET_CPU_MIPS: int = 0
export const TARGET_CPU_SPARC: int = 0
export const TARGET_CPU_ALPHA: int = 0
export const kGUARD_EXC_DESTROY: int = 1
export const kGUARD_EXC_MOD_REFS: int = 2
export const kGUARD_EXC_INVALID_OPTIONS: int = 3
export const kGUARD_EXC_SET_CONTEXT: int = 4
export const kGUARD_EXC_THREAD_SET_STATE: int = 5
export const kGUARD_EXC_EXCEPTION_BEHAVIOR_ENFORCE: int = 6
export const kGUARD_EXC_UNGUARDED: int = 8
export const kGUARD_EXC_INCORRECT_GUARD: int = 16
export const kGUARD_EXC_IMMOVABLE: int = 32
export const kGUARD_EXC_STRICT_REPLY: int = 64
export const kGUARD_EXC_MSG_FILTERED: int = 128
export const kGUARD_EXC_INVALID_RIGHT: int = 256
export const kGUARD_EXC_INVALID_NAME: int = 512
export const kGUARD_EXC_INVALID_VALUE: int = 1024
export const kGUARD_EXC_INVALID_ARGUMENT: int = 2048
export const kGUARD_EXC_RIGHT_EXISTS: int = 4096
export const kGUARD_EXC_KERN_NO_SPACE: int = 8192
export const kGUARD_EXC_KERN_FAILURE: int = 16384
export const kGUARD_EXC_KERN_RESOURCE: int = 32768
export const kGUARD_EXC_SEND_INVALID_REPLY: int = 65536
export const kGUARD_EXC_SEND_INVALID_VOUCHER: int = 131072
export const kGUARD_EXC_SEND_INVALID_RIGHT: int = 262144
export const kGUARD_EXC_RCV_INVALID_NAME: int = 524288
export const kGUARD_EXC_RCV_GUARDED_DESC: int = 1048576
export const kGUARD_EXC_MOD_REFS_NON_FATAL: int = 2097152
export const kGUARD_EXC_IMMOVABLE_NON_FATAL: int = 4194304
export const kGUARD_EXC_REQUIRE_REPLY_PORT_SEMANTICS: int = 8388608
export import def #extern mach_msg_overwrite(msg: *s_mach_msg_header_t, option: int, send_size: uint, rcv_size: uint, rcv_name: uint, timeout: uint, notify: uint, rcv_msg: *s_mach_msg_header_t, rcv_limit: uint) -> int
export import def #extern mach_msg(msg: *s_mach_msg_header_t, option: int, send_size: uint, rcv_size: uint, rcv_name: uint, timeout: uint, notify: uint) -> int
export import def #extern mach_voucher_deallocate(voucher: uint) -> int
export const MACH_VM_RANGE_FLAVOR_INVALID: int = 0
export const MACH_VM_RANGE_FLAVOR_V1: int = 1
export const MACH_VM_RANGE_NONE: int = 0
export const MACH_VM_RANGE_DEFAULT: int = 0
export const MACH_VM_RANGE_DATA: int = 1
export const MACH_VM_RANGE_FIXED: int = 2
export const OSUnknownByteOrder: int = 0
export const OSLittleEndian: int = 1
export const OSBigEndian: int = 2
export const NX_UnknownByteOrder: int = 0
export const NX_LittleEndian: int = 1
export const NX_BigEndian: int = 2
export import def #extern _dyld_image_count() -> uint
export import def #extern _dyld_get_image_header(image_index: uint) -> *s_mach_header
export import def #extern _dyld_get_image_vmaddr_slide(image_index: uint) -> long
export import def #extern _dyld_get_image_name(image_index: uint) -> *char
export import def #extern _dyld_register_func_for_add_image(func: def [*s_mach_header, long] -> )
export import def #extern _dyld_register_func_for_remove_image(func: def [*s_mach_header, long] -> )
export import def #extern NSVersionOfRunTimeLibrary(libraryName: *char) -> int
export import def #extern NSVersionOfLinkTimeLibrary(libraryName: *char) -> int
export import def #extern _NSGetExecutablePath(buf: *char, bufsize: *uint) -> int
export import def #extern _tlv_atexit(termFunc: def * -> , objAddr: *)
export import def #extern _tlv_bootstrap()
export import def #extern _dyld_shared_cache_contains_path(path: *char) -> int
export const NSObjectFileImageFailure: int = 0
export const NSObjectFileImageSuccess: int = 1
export const NSObjectFileImageInappropriateFile: int = 2
export const NSObjectFileImageArch: int = 3
export const NSObjectFileImageFormat: int = 4
export const NSObjectFileImageAccess: int = 5
export import def #extern NSCreateObjectFileImageFromFile(pathName: *char, objectFileImage: **s___NSObjectFileImage) -> e_NSObjectFileImageReturnCode
export import def #extern NSCreateObjectFileImageFromMemory(address: *, size: ulong, objectFileImage: **s___NSObjectFileImage) -> e_NSObjectFileImageReturnCode
export import def #extern NSDestroyObjectFileImage(objectFileImage: *s___NSObjectFileImage) -> int
export import def #extern NSSymbolDefinitionCountInObjectFileImage(objectFileImage: *s___NSObjectFileImage) -> uint
export import def #extern NSSymbolDefinitionNameInObjectFileImage(objectFileImage: *s___NSObjectFileImage, ordinal: uint) -> *char
export import def #extern NSSymbolReferenceCountInObjectFileImage(objectFileImage: *s___NSObjectFileImage) -> uint
export import def #extern NSSymbolReferenceNameInObjectFileImage(objectFileImage: *s___NSObjectFileImage, ordinal: uint, tentative_definition: *int) -> *char
export import def #extern NSIsSymbolDefinedInObjectFileImage(objectFileImage: *s___NSObjectFileImage, symbolName: *char) -> int
export import def #extern NSGetSectionDataInObjectFileImage(objectFileImage: *s___NSObjectFileImage, segmentName: *char, sectionName: *char, size: *ulong) -> *
export import def #extern NSNameOfModule(m: *s___NSModule) -> *char
export import def #extern NSLibraryNameForModule(m: *s___NSModule) -> *char
export import def #extern NSLinkModule(objectFileImage: *s___NSObjectFileImage, moduleName: *char, options: uint) -> *s___NSModule
export import def #extern NSUnLinkModule(module: *s___NSModule, options: uint) -> int
export import def #extern NSIsSymbolNameDefined(symbolName: *char) -> int
export import def #extern NSIsSymbolNameDefinedWithHint(symbolName: *char, libraryNameHint: *char) -> int
export import def #extern NSIsSymbolNameDefinedInImage(image: *s_mach_header, symbolName: *char) -> int
export import def #extern NSLookupAndBindSymbol(symbolName: *char) -> *s___NSSymbol
export import def #extern NSLookupAndBindSymbolWithHint(symbolName: *char, libraryNameHint: *char) -> *s___NSSymbol
export import def #extern NSLookupSymbolInModule(module: *s___NSModule, symbolName: *char) -> *s___NSSymbol
export import def #extern NSLookupSymbolInImage(image: *s_mach_header, symbolName: *char, options: uint) -> *s___NSSymbol
export import def #extern NSNameOfSymbol(symbol: *s___NSSymbol) -> *char
export import def #extern NSAddressOfSymbol(symbol: *s___NSSymbol) -> *
export import def #extern NSModuleForSymbol(symbol: *s___NSSymbol) -> *s___NSModule
export const NSLinkEditFileAccessError: int = 0
export const NSLinkEditFileFormatError: int = 1
export const NSLinkEditMachResourceError: int = 2
export const NSLinkEditUnixResourceError: int = 3
export const NSLinkEditOtherError: int = 4
export const NSLinkEditWarningError: int = 5
export const NSLinkEditMultiplyDefinedError: int = 6
export const NSLinkEditUndefinedError: int = 7
export const NSOtherErrorRelocation: int = 0
export const NSOtherErrorLazyBind: int = 1
export const NSOtherErrorIndrLoop: int = 2
export const NSOtherErrorLazyInit: int = 3
export const NSOtherErrorInvalidArgs: int = 4
export import def #extern NSLinkEditError(c: *e_NSLinkEditErrors, errorNumber: *int, fileName: **char, errorString: **char)
export import def #extern NSInstallLinkEditErrorHandlers(handlers: *s_NSLinkEditErrorHandlers)
export import def #extern NSAddLibrary(pathName: *char) -> int
export import def #extern NSAddLibraryWithSearching(pathName: *char) -> int
export import def #extern NSAddImage(image_name: *char, options: uint) -> *s_mach_header
export import def #extern _dyld_present() -> int
export import def #extern _dyld_launched_prebound() -> int
export import def #extern _dyld_all_twolevel_modules_prebound() -> int
export import def #extern _dyld_bind_fully_image_containing_address(address: *) -> int
export import def #extern _dyld_image_containing_address(address: *) -> int
export import def #extern _dyld_lookup_and_bind(symbol_name: *char, address: **, module: **s___NSModule)
export import def #extern _dyld_lookup_and_bind_with_hint(symbol_name: *char, library_name_hint: *char, address: **, module: **s___NSModule)
export import def #extern _dyld_lookup_and_bind_fully(symbol_name: *char, address: **, module: **s___NSModule)
export import def #extern _dyld_get_image_header_containing_address(address: *) -> *s_mach_header
