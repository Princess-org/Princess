import macos
import symbol
__SYMBOLS(0) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "mach_msg_overwrite", function = *mach_msg_overwrite !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(1) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "mach_msg", function = *mach_msg !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(2) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "mach_voucher_deallocate", function = *mach_voucher_deallocate !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(3) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_image_count", function = *_dyld_image_count !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(4) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_get_image_header", function = *_dyld_get_image_header !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(5) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_get_image_vmaddr_slide", function = *_dyld_get_image_vmaddr_slide !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(6) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_get_image_name", function = *_dyld_get_image_name !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(7) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_register_func_for_add_image", function = *_dyld_register_func_for_add_image !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(8) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_register_func_for_remove_image", function = *_dyld_register_func_for_remove_image !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(9) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSVersionOfRunTimeLibrary", function = *NSVersionOfRunTimeLibrary !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(10) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSVersionOfLinkTimeLibrary", function = *NSVersionOfLinkTimeLibrary !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(11) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_NSGetExecutablePath", function = *_NSGetExecutablePath !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(12) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_tlv_atexit", function = *_tlv_atexit !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(13) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_tlv_bootstrap", function = *_tlv_bootstrap !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(14) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_shared_cache_contains_path", function = *_dyld_shared_cache_contains_path !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(15) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSCreateObjectFileImageFromFile", function = *NSCreateObjectFileImageFromFile !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(16) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSCreateObjectFileImageFromMemory", function = *NSCreateObjectFileImageFromMemory !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(17) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSDestroyObjectFileImage", function = *NSDestroyObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(18) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSSymbolDefinitionCountInObjectFileImage", function = *NSSymbolDefinitionCountInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(19) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSSymbolDefinitionNameInObjectFileImage", function = *NSSymbolDefinitionNameInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(20) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSSymbolReferenceCountInObjectFileImage", function = *NSSymbolReferenceCountInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(21) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSSymbolReferenceNameInObjectFileImage", function = *NSSymbolReferenceNameInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(22) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSIsSymbolDefinedInObjectFileImage", function = *NSIsSymbolDefinedInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(23) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSGetSectionDataInObjectFileImage", function = *NSGetSectionDataInObjectFileImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(24) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSNameOfModule", function = *NSNameOfModule !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(25) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLibraryNameForModule", function = *NSLibraryNameForModule !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(26) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLinkModule", function = *NSLinkModule !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(27) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSUnLinkModule", function = *NSUnLinkModule !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(28) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSIsSymbolNameDefined", function = *NSIsSymbolNameDefined !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(29) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSIsSymbolNameDefinedWithHint", function = *NSIsSymbolNameDefinedWithHint !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(30) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSIsSymbolNameDefinedInImage", function = *NSIsSymbolNameDefinedInImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(31) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLookupAndBindSymbol", function = *NSLookupAndBindSymbol !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(32) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLookupAndBindSymbolWithHint", function = *NSLookupAndBindSymbolWithHint !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(33) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLookupSymbolInModule", function = *NSLookupSymbolInModule !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(34) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLookupSymbolInImage", function = *NSLookupSymbolInImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(35) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSNameOfSymbol", function = *NSNameOfSymbol !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(36) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSAddressOfSymbol", function = *NSAddressOfSymbol !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(37) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSModuleForSymbol", function = *NSModuleForSymbol !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(38) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSLinkEditError", function = *NSLinkEditError !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(39) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSInstallLinkEditErrorHandlers", function = *NSInstallLinkEditErrorHandlers !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(40) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSAddLibrary", function = *NSAddLibrary !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(41) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSAddLibraryWithSearching", function = *NSAddLibraryWithSearching !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(42) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "NSAddImage", function = *NSAddImage !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(43) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_present", function = *_dyld_present !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(44) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_launched_prebound", function = *_dyld_launched_prebound !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(45) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_all_twolevel_modules_prebound", function = *_dyld_all_twolevel_modules_prebound !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(46) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_bind_fully_image_containing_address", function = *_dyld_bind_fully_image_containing_address !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(47) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_image_containing_address", function = *_dyld_image_containing_address !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(48) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_lookup_and_bind", function = *_dyld_lookup_and_bind !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(49) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_lookup_and_bind_with_hint", function = *_dyld_lookup_and_bind_with_hint !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(50) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_lookup_and_bind_fully", function = *_dyld_lookup_and_bind_fully !(def [] -> []) ] !symbol::Symbol
__SYMBOLS(51) = [ kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "_dyld_get_image_header_containing_address", function = *_dyld_get_image_header_containing_address !(def [] -> []) ] !symbol::Symbol
export var __SYMBOLS: [52; symbol::Symbol]
