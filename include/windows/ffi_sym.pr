import ffi
import symbol
__SYMBOLS[0] = { kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "__threadid", function = *__threadid !def () -> ()} !symbol::Symbol
__SYMBOLS[1] = { kind = symbol::SymbolKind::FUNCTION, dllimport = false, name = "__threadhandle", function = *__threadhandle !def () -> ()} !symbol::Symbol
__SYMBOLS[2] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_void"} !symbol::Symbol
__SYMBOLS[3] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_uint8"} !symbol::Symbol
__SYMBOLS[4] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_sint8"} !symbol::Symbol
__SYMBOLS[5] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_uint16"} !symbol::Symbol
__SYMBOLS[6] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_sint16"} !symbol::Symbol
__SYMBOLS[7] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_uint32"} !symbol::Symbol
__SYMBOLS[8] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_sint32"} !symbol::Symbol
__SYMBOLS[9] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_uint64"} !symbol::Symbol
__SYMBOLS[10] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_sint64"} !symbol::Symbol
__SYMBOLS[11] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_float"} !symbol::Symbol
__SYMBOLS[12] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_double"} !symbol::Symbol
__SYMBOLS[13] = { kind = symbol::SymbolKind::VARIABLE, dllimport = true, name = "ffi_type_pointer"} !symbol::Symbol
__SYMBOLS[14] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_closure_alloc"} !symbol::Symbol
__SYMBOLS[15] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_closure_free"} !symbol::Symbol
__SYMBOLS[16] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_prep_closure_loc"} !symbol::Symbol
__SYMBOLS[17] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_prep_go_closure"} !symbol::Symbol
__SYMBOLS[18] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_call_go"} !symbol::Symbol
__SYMBOLS[19] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_prep_cif"} !symbol::Symbol
__SYMBOLS[20] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_prep_cif_var"} !symbol::Symbol
__SYMBOLS[21] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_call"} !symbol::Symbol
__SYMBOLS[22] = { kind = symbol::SymbolKind::FUNCTION, dllimport = true, name = "ffi_get_struct_offsets"} !symbol::Symbol
export var __SYMBOLS: [23; symbol::Symbol]
