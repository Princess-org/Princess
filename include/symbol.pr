import ffi
import cstd

export type SymbolKind = enum {
    FUNCTION
    VARIABLE
}

export type Symbol = struct {
    kind: SymbolKind
    name: string
    dllimport: bool
    function: def ->
    variable: *
    initialized: bool
    ffi_cif: ffi::s_ffi_cif
    arglen: size_t
    args: **ffi::s__ffi_type
    ret: *ffi::s__ffi_type
}

export def destruct(symbol: *Symbol) {
    if symbol.kind == SymbolKind::FUNCTION and symbol.initialized {
        // Cleanup
        for var i in 0..symbol.arglen {
            free(@(symbol.args ++ i))
        }
        free(symbol.args)
        free(symbol.ret)
    }
}