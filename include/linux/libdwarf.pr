export type s_Dwarf_Form_Data16_s = struct { fd_data: [16; uint8]; }
export type s_Dwarf_Sig8_s = struct { signature: [8; char]; }
export type s_Dwarf_Block_s = struct { bl_len: uint64; bl_data: *; bl_from_loclist: uint8; bl_section_offset: uint64; }
export type s_Dwarf_Locdesc_c_s
export type s_Dwarf_Loc_Head_c_s
export type s_Dwarf_Gnu_Index_Head_s
export type s_Dwarf_Dsc_Head_s
export type s_Dwarf_Frame_Instr_Head_s
export type s_Dwarf_Cmdline_Options_s = struct { check_verbose_mode: int; }
export type s_Dwarf_Str_Offsets_Table_s
export type e_Dwarf_Ranges_Entry_Type = enum { DW_RANGES_ENTRY; DW_RANGES_ADDRESS_SELECTION = 1; DW_RANGES_END = 2; }
export type s_Dwarf_Ranges_s = struct { dwr_addr1: uint64; dwr_addr2: uint64; dwr_type: e_Dwarf_Ranges_Entry_Type; }
export type s_Dwarf_Regtable_Entry3_s = struct { dw_offset_relevant: uint8; dw_value_type: uint8; dw_regnum: ushort; dw_offset: uint64; dw_args_size: uint64; dw_block: s_Dwarf_Block_s; }
export type s_Dwarf_Regtable3_s = struct { rt3_cfa_rule: s_Dwarf_Regtable_Entry3_s; rt3_reg_table_size: ushort; rt3_rules: *s_Dwarf_Regtable_Entry3_s; }
export type s_Dwarf_Error_s
export type s_Dwarf_Debug_s
export type s_Dwarf_Die_s
export type s_Dwarf_Debug_Addr_Table_s
export type s_Dwarf_Line_s
export type s_Dwarf_Global_s
export type s_Dwarf_Type_s
export type s_Dwarf_Func_s
export type s_Dwarf_Var_s
export type s_Dwarf_Weak_s
export type s_Dwarf_Attribute_s
export type s_Dwarf_Abbrev_s
export type s_Dwarf_Fde_s
export type s_Dwarf_Cie_s
export type s_Dwarf_Arange_s
export type s_Dwarf_Gdbindex_s
export type s_Dwarf_Xu_Index_Header_s
export type s_Dwarf_Line_Context_s
export type s_Dwarf_Macro_Context_s
export type s_Dwarf_Dnames_Head_s
export type s_Dwarf_Macro_Details_s
export type s_Dwarf_Debug_Fission_Per_CU_s
export type s_Dwarf_Obj_Access_Interface_a_s
export type s_Dwarf_Obj_Access_Methods_a_s
export type s_Dwarf_Obj_Access_Section_a_s
export type s_Dwarf_Rnglists_Head_s
export type s_Dwarf_P_Debug_s
export type s_Dwarf_P_Die_s
export type s_Dwarf_P_Attribute_s
export type s_Dwarf_P_Fde_s
export type s_Dwarf_P_Expr_s
export type s_Dwarf_P_Marker_s
export type s_Dwarf_Relocation_Data_s
export type s_Dwarf_P_String_Attr_s
export type e_Dwarf_Form_Class = enum { DW_FORM_CLASS_UNKNOWN; DW_FORM_CLASS_ADDRESS = 1; DW_FORM_CLASS_BLOCK = 2; DW_FORM_CLASS_CONSTANT = 3; DW_FORM_CLASS_EXPRLOC = 4; DW_FORM_CLASS_FLAG = 5; DW_FORM_CLASS_LINEPTR = 6; DW_FORM_CLASS_LOCLISTPTR = 7; DW_FORM_CLASS_MACPTR = 8; DW_FORM_CLASS_RANGELISTPTR = 9; DW_FORM_CLASS_REFERENCE = 10; DW_FORM_CLASS_STRING = 11; DW_FORM_CLASS_FRAMEPTR = 12; DW_FORM_CLASS_MACROPTR = 13; DW_FORM_CLASS_ADDRPTR = 14; DW_FORM_CLASS_LOCLIST = 15; DW_FORM_CLASS_LOCLISTSPTR = 16; DW_FORM_CLASS_RNGLIST = 17; DW_FORM_CLASS_RNGLISTSPTR = 18; DW_FORM_CLASS_STROFFSETSPTR = 19; }
export type s_Dwarf_Locdesc_c_s
export type s_Dwarf_Loc_Head_c_s
export type s_Dwarf_Gnu_Index_Head_s
export type s_Dwarf_Dsc_Head_s
export type s_Dwarf_Frame_Instr_Head_s
export type s_Dwarf_Printf_Callback_Info_s = struct { dp_user_pointer: *; dp_fptr: def (*, *char) -> (); dp_buffer: *char; dp_buffer_len: uint; dp_buffer_user_provided: int; dp_reserved: *; }
export type s_Dwarf_Str_Offsets_Table_s
export type s_Dwarf_Error_s
export type s_Dwarf_Debug_s
export type s_Dwarf_Die_s
export type s_Dwarf_Debug_Addr_Table_s
export type s_Dwarf_Line_s
export type s_Dwarf_Global_s
export type s_Dwarf_Type_s
export type s_Dwarf_Func_s
export type s_Dwarf_Var_s
export type s_Dwarf_Weak_s
export type s_Dwarf_Attribute_s
export type s_Dwarf_Abbrev_s
export type s_Dwarf_Fde_s
export type s_Dwarf_Cie_s
export type s_Dwarf_Arange_s
export type s_Dwarf_Gdbindex_s
export type s_Dwarf_Xu_Index_Header_s
export type s_Dwarf_Line_Context_s
export type s_Dwarf_Macro_Context_s
export type s_Dwarf_Dnames_Head_s
export type s_Dwarf_Macro_Details_s = struct { dmd_offset: uint64; dmd_type: uint8; dmd_lineno: int64; dmd_fileindex: int64; dmd_macro: *char; }
export type s_Dwarf_Obj_Access_Section_a_s = struct { as_name: *char; as_type: uint64; as_flags: uint64; as_addr: uint64; as_offset: uint64; as_size: uint64; as_link: uint64; as_info: uint64; as_addralign: uint64; as_entrysize: uint64; }
export type s_Dwarf_Obj_Access_Methods_a_s = struct { om_get_section_info: def (*, uint64, *s_Dwarf_Obj_Access_Section_a_s, *int) -> (int); om_get_byte_order: def (*) -> (uint8); om_get_length_size: def (*) -> (uint8); om_get_pointer_size: def (*) -> (uint8); om_get_filesize: def (*) -> (uint64); om_get_section_count: def (*) -> (uint64); om_load_section: def (*, uint64, **uint8, *int) -> (int); om_relocate_a_section: def (*, uint64, *s_Dwarf_Debug_s, *int) -> (int); }
export type s_Dwarf_Obj_Access_Interface_a_s = struct { ai_object: *; ai_methods: *s_Dwarf_Obj_Access_Methods_a_s; }
export type s_Dwarf_Debug_Fission_Per_CU_s = struct { pcu_type: *char; pcu_index: uint64; pcu_hash: s_Dwarf_Sig8_s; pcu_offset: [12; uint64]; pcu_size: [12; uint64]; unused1: uint64; unused2: uint64; }
export type s_Dwarf_Rnglists_Head_s
export type s_Dwarf_P_Debug_s
export type s_Dwarf_P_Die_s
export type s_Dwarf_P_Attribute_s
export type s_Dwarf_P_Fde_s
export type s_Dwarf_P_Expr_s
export type e_Dwarf_Rel_Type = enum { dwarf_drt_none; dwarf_drt_data_reloc = 1; dwarf_drt_segment_rel = 2; dwarf_drt_first_of_length_pair = 3; dwarf_drt_second_of_length_pair = 4; }
export type s_Dwarf_P_Marker_s = struct { ma_marker: uint64; ma_offset: uint64; }
export type s_Dwarf_Relocation_Data_s = struct { drd_type: uint8; drd_length: uint8; drd_offset: uint64; drd_symbol_index: uint64; }
export type s_Dwarf_P_String_Attr_s = struct { sa_offset: uint64; sa_nbytes: uint64; }
export const __llvm__: int = 1
export const __clang__: int = 1
export const __clang_major__: int = 16
export const __clang_minor__: int = 0
export const __clang_patchlevel__: int = 6
export const __clang_version__: [char] = "16.0.6 (++20230710042046+7cbf1a259152-1~exp1~20230710162136.105)"
export const __GNUC__: int = 4
export const __GNUC_MINOR__: int = 2
export const __GNUC_PATCHLEVEL__: int = 1
export const __GXX_ABI_VERSION: int = 1002
export const __ATOMIC_RELAXED: int = 0
export const __ATOMIC_CONSUME: int = 1
export const __ATOMIC_ACQUIRE: int = 2
export const __ATOMIC_RELEASE: int = 3
export const __ATOMIC_ACQ_REL: int = 4
export const __ATOMIC_SEQ_CST: int = 5
export const __OPENCL_MEMORY_SCOPE_WORK_ITEM: int = 0
export const __OPENCL_MEMORY_SCOPE_WORK_GROUP: int = 1
export const __OPENCL_MEMORY_SCOPE_DEVICE: int = 2
export const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES: int = 3
export const __OPENCL_MEMORY_SCOPE_SUB_GROUP: int = 4
export const __PRAGMA_REDEFINE_EXTNAME: int = 1
export const __VERSION__: [char] = "Ubuntu Clang 16.0.6 (++20230710042046+7cbf1a259152-1~exp1~20230710162136.105)"
export const __OBJC_BOOL_IS_BOOL: int = 0
export const __CONSTANT_CFSTRINGS__: int = 1
export const __clang_literal_encoding__: [char] = "UTF-8"
export const __clang_wide_literal_encoding__: [char] = "UTF-32"
export const __ORDER_LITTLE_ENDIAN__: int = 1234
export const __ORDER_BIG_ENDIAN__: int = 4321
export const __ORDER_PDP_ENDIAN__: int = 3412
export const __LITTLE_ENDIAN__: int = 1
export const _LP64: int = 1
export const __LP64__: int = 1
export const __CHAR_BIT__: int = 8
export const __BOOL_WIDTH__: int = 8
export const __SHRT_WIDTH__: int = 16
export const __INT_WIDTH__: int = 32
export const __LONG_WIDTH__: int = 64
export const __LLONG_WIDTH__: int = 64
export const __BITINT_MAXWIDTH__: int = 8388608
export const __SCHAR_MAX__: int = 127
export const __SHRT_MAX__: int = 32767
export const __INT_MAX__: int = 2147483647
export const __WCHAR_MAX__: int = 2147483647
export const __WCHAR_WIDTH__: int = 32
export const __WINT_WIDTH__: int = 32
export const __INTMAX_WIDTH__: int = 64
export const __SIZE_WIDTH__: int = 64
export const __UINTMAX_WIDTH__: int = 64
export const __PTRDIFF_WIDTH__: int = 64
export const __INTPTR_WIDTH__: int = 64
export const __UINTPTR_WIDTH__: int = 64
export const __SIZEOF_DOUBLE__: int = 8
export const __SIZEOF_FLOAT__: int = 4
export const __SIZEOF_INT__: int = 4
export const __SIZEOF_LONG__: int = 8
export const __SIZEOF_LONG_DOUBLE__: int = 16
export const __SIZEOF_LONG_LONG__: int = 8
export const __SIZEOF_POINTER__: int = 8
export const __SIZEOF_SHORT__: int = 2
export const __SIZEOF_PTRDIFF_T__: int = 8
export const __SIZEOF_SIZE_T__: int = 8
export const __SIZEOF_WCHAR_T__: int = 4
export const __SIZEOF_WINT_T__: int = 4
export const __SIZEOF_INT128__: int = 16
export const __INTMAX_FMTd__: [char] = "ld"
export const __INTMAX_FMTi__: [char] = "li"
export const __UINTMAX_FMTo__: [char] = "lo"
export const __UINTMAX_FMTu__: [char] = "lu"
export const __UINTMAX_FMTx__: [char] = "lx"
export const __UINTMAX_FMTX__: [char] = "lX"
export const __PTRDIFF_FMTd__: [char] = "ld"
export const __PTRDIFF_FMTi__: [char] = "li"
export const __INTPTR_FMTd__: [char] = "ld"
export const __INTPTR_FMTi__: [char] = "li"
export const __SIZE_FMTo__: [char] = "lo"
export const __SIZE_FMTu__: [char] = "lu"
export const __SIZE_FMTx__: [char] = "lx"
export const __SIZE_FMTX__: [char] = "lX"
export const __SIG_ATOMIC_MAX__: int = 2147483647
export const __SIG_ATOMIC_WIDTH__: int = 32
export const __UINTPTR_FMTo__: [char] = "lo"
export const __UINTPTR_FMTu__: [char] = "lu"
export const __UINTPTR_FMTx__: [char] = "lx"
export const __UINTPTR_FMTX__: [char] = "lX"
export const __FLT16_HAS_DENORM__: int = 1
export const __FLT16_DIG__: int = 3
export const __FLT16_DECIMAL_DIG__: int = 5
export const __FLT16_HAS_INFINITY__: int = 1
export const __FLT16_HAS_QUIET_NAN__: int = 1
export const __FLT16_MANT_DIG__: int = 11
export const __FLT16_MAX_10_EXP__: int = 4
export const __FLT16_MAX_EXP__: int = 16
export const __FLT_HAS_DENORM__: int = 1
export const __FLT_DIG__: int = 6
export const __FLT_DECIMAL_DIG__: int = 9
export const __FLT_HAS_INFINITY__: int = 1
export const __FLT_HAS_QUIET_NAN__: int = 1
export const __FLT_MANT_DIG__: int = 24
export const __FLT_MAX_10_EXP__: int = 38
export const __FLT_MAX_EXP__: int = 128
export const __DBL_DENORM_MIN__: double = 4.9406564584124654e-324
export const __DBL_HAS_DENORM__: int = 1
export const __DBL_DIG__: int = 15
export const __DBL_DECIMAL_DIG__: int = 17
export const __DBL_EPSILON__: double = 2.2204460492503131e-16
export const __DBL_HAS_INFINITY__: int = 1
export const __DBL_HAS_QUIET_NAN__: int = 1
export const __DBL_MANT_DIG__: int = 53
export const __DBL_MAX_10_EXP__: int = 308
export const __DBL_MAX_EXP__: int = 1024
export const __DBL_MAX__: double = 1.7976931348623157e+308
export const __DBL_MIN__: double = 2.2250738585072014e-308
export const __LDBL_HAS_DENORM__: int = 1
export const __LDBL_DIG__: int = 18
export const __LDBL_DECIMAL_DIG__: int = 21
export const __LDBL_HAS_INFINITY__: int = 1
export const __LDBL_HAS_QUIET_NAN__: int = 1
export const __LDBL_MANT_DIG__: int = 64
export const __LDBL_MAX_10_EXP__: int = 4932
export const __LDBL_MAX_EXP__: int = 16384
export const __POINTER_WIDTH__: int = 64
export const __BIGGEST_ALIGNMENT__: int = 16
export const __WINT_UNSIGNED__: int = 1
export const __INT8_FMTd__: [char] = "hhd"
export const __INT8_FMTi__: [char] = "hhi"
export const __INT16_FMTd__: [char] = "hd"
export const __INT16_FMTi__: [char] = "hi"
export const __INT32_FMTd__: [char] = "d"
export const __INT32_FMTi__: [char] = "i"
export const __INT64_FMTd__: [char] = "ld"
export const __INT64_FMTi__: [char] = "li"
export const __UINT8_FMTo__: [char] = "hho"
export const __UINT8_FMTu__: [char] = "hhu"
export const __UINT8_FMTx__: [char] = "hhx"
export const __UINT8_FMTX__: [char] = "hhX"
export const __UINT8_MAX__: int = 255
export const __INT8_MAX__: int = 127
export const __UINT16_FMTo__: [char] = "ho"
export const __UINT16_FMTu__: [char] = "hu"
export const __UINT16_FMTx__: [char] = "hx"
export const __UINT16_FMTX__: [char] = "hX"
export const __UINT16_MAX__: int = 65535
export const __INT16_MAX__: int = 32767
export const __UINT32_FMTo__: [char] = "o"
export const __UINT32_FMTu__: [char] = "u"
export const __UINT32_FMTx__: [char] = "x"
export const __UINT32_FMTX__: [char] = "X"
export const __INT32_MAX__: int = 2147483647
export const __UINT64_FMTo__: [char] = "lo"
export const __UINT64_FMTu__: [char] = "lu"
export const __UINT64_FMTx__: [char] = "lx"
export const __UINT64_FMTX__: [char] = "lX"
export const __INT_LEAST8_MAX__: int = 127
export const __INT_LEAST8_WIDTH__: int = 8
export const __INT_LEAST8_FMTd__: [char] = "hhd"
export const __INT_LEAST8_FMTi__: [char] = "hhi"
export const __UINT_LEAST8_MAX__: int = 255
export const __UINT_LEAST8_FMTo__: [char] = "hho"
export const __UINT_LEAST8_FMTu__: [char] = "hhu"
export const __UINT_LEAST8_FMTx__: [char] = "hhx"
export const __UINT_LEAST8_FMTX__: [char] = "hhX"
export const __INT_LEAST16_MAX__: int = 32767
export const __INT_LEAST16_WIDTH__: int = 16
export const __INT_LEAST16_FMTd__: [char] = "hd"
export const __INT_LEAST16_FMTi__: [char] = "hi"
export const __UINT_LEAST16_MAX__: int = 65535
export const __UINT_LEAST16_FMTo__: [char] = "ho"
export const __UINT_LEAST16_FMTu__: [char] = "hu"
export const __UINT_LEAST16_FMTx__: [char] = "hx"
export const __UINT_LEAST16_FMTX__: [char] = "hX"
export const __INT_LEAST32_MAX__: int = 2147483647
export const __INT_LEAST32_WIDTH__: int = 32
export const __INT_LEAST32_FMTd__: [char] = "d"
export const __INT_LEAST32_FMTi__: [char] = "i"
export const __UINT_LEAST32_FMTo__: [char] = "o"
export const __UINT_LEAST32_FMTu__: [char] = "u"
export const __UINT_LEAST32_FMTx__: [char] = "x"
export const __UINT_LEAST32_FMTX__: [char] = "X"
export const __INT_LEAST64_WIDTH__: int = 64
export const __INT_LEAST64_FMTd__: [char] = "ld"
export const __INT_LEAST64_FMTi__: [char] = "li"
export const __UINT_LEAST64_FMTo__: [char] = "lo"
export const __UINT_LEAST64_FMTu__: [char] = "lu"
export const __UINT_LEAST64_FMTx__: [char] = "lx"
export const __UINT_LEAST64_FMTX__: [char] = "lX"
export const __INT_FAST8_MAX__: int = 127
export const __INT_FAST8_WIDTH__: int = 8
export const __INT_FAST8_FMTd__: [char] = "hhd"
export const __INT_FAST8_FMTi__: [char] = "hhi"
export const __UINT_FAST8_MAX__: int = 255
export const __UINT_FAST8_FMTo__: [char] = "hho"
export const __UINT_FAST8_FMTu__: [char] = "hhu"
export const __UINT_FAST8_FMTx__: [char] = "hhx"
export const __UINT_FAST8_FMTX__: [char] = "hhX"
export const __INT_FAST16_MAX__: int = 32767
export const __INT_FAST16_WIDTH__: int = 16
export const __INT_FAST16_FMTd__: [char] = "hd"
export const __INT_FAST16_FMTi__: [char] = "hi"
export const __UINT_FAST16_MAX__: int = 65535
export const __UINT_FAST16_FMTo__: [char] = "ho"
export const __UINT_FAST16_FMTu__: [char] = "hu"
export const __UINT_FAST16_FMTx__: [char] = "hx"
export const __UINT_FAST16_FMTX__: [char] = "hX"
export const __INT_FAST32_MAX__: int = 2147483647
export const __INT_FAST32_WIDTH__: int = 32
export const __INT_FAST32_FMTd__: [char] = "d"
export const __INT_FAST32_FMTi__: [char] = "i"
export const __UINT_FAST32_FMTo__: [char] = "o"
export const __UINT_FAST32_FMTu__: [char] = "u"
export const __UINT_FAST32_FMTx__: [char] = "x"
export const __UINT_FAST32_FMTX__: [char] = "X"
export const __INT_FAST64_WIDTH__: int = 64
export const __INT_FAST64_FMTd__: [char] = "ld"
export const __INT_FAST64_FMTi__: [char] = "li"
export const __UINT_FAST64_FMTo__: [char] = "lo"
export const __UINT_FAST64_FMTu__: [char] = "lu"
export const __UINT_FAST64_FMTx__: [char] = "lx"
export const __UINT_FAST64_FMTX__: [char] = "lX"
export const __FINITE_MATH_ONLY__: int = 0
export const __GNUC_STDC_INLINE__: int = 1
export const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL: int = 1
export const __CLANG_ATOMIC_BOOL_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_SHORT_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_INT_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_LONG_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_LLONG_LOCK_FREE: int = 2
export const __CLANG_ATOMIC_POINTER_LOCK_FREE: int = 2
export const __GCC_ATOMIC_BOOL_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR16_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_CHAR32_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_WCHAR_T_LOCK_FREE: int = 2
export const __GCC_ATOMIC_SHORT_LOCK_FREE: int = 2
export const __GCC_ATOMIC_INT_LOCK_FREE: int = 2
export const __GCC_ATOMIC_LONG_LOCK_FREE: int = 2
export const __GCC_ATOMIC_LLONG_LOCK_FREE: int = 2
export const __GCC_ATOMIC_POINTER_LOCK_FREE: int = 2
export const __NO_INLINE__: int = 1
export const __PIC__: int = 2
export const __pic__: int = 2
export const __PIE__: int = 2
export const __pie__: int = 2
export const __FLT_RADIX__: int = 2
export const __GCC_ASM_FLAG_OUTPUTS__: int = 1
export const __code_model_small__: int = 1
export const __amd64__: int = 1
export const __amd64: int = 1
export const __x86_64: int = 1
export const __x86_64__: int = 1
export const __SEG_GS: int = 1
export const __SEG_FS: int = 1
export const __k8: int = 1
export const __k8__: int = 1
export const __tune_k8__: int = 1
export const __NO_MATH_INLINES: int = 1
export const __FXSR__: int = 1
export const __SSE2__: int = 1
export const __SSE2_MATH__: int = 1
export const __SSE__: int = 1
export const __SSE_MATH__: int = 1
export const __MMX__: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4: int = 1
export const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8: int = 1
export const __SIZEOF_FLOAT128__: int = 16
export const unix: int = 1
export const __unix: int = 1
export const __unix__: int = 1
export const linux: int = 1
export const __linux: int = 1
export const __linux__: int = 1
export const __ELF__: int = 1
export const __gnu_linux__: int = 1
export const __FLOAT128__: int = 1
export const __STDC__: int = 1
export const __STDC_HOSTED__: int = 1
export const __STDC_UTF_16__: int = 1
export const __STDC_UTF_32__: int = 1
export const __GCC_HAVE_DWARF2_CFI_ASM: int = 1
export const DW_LIBDWARF_VERSION: [char] = "0.8.0"
export const DW_LIBDWARF_VERSION_MAJOR: int = 0
export const DW_LIBDWARF_VERSION_MINOR: int = 8
export const DW_LIBDWARF_VERSION_MICRO: int = 0
export const DW_PATHSOURCE_unspecified: int = 0
export const DW_PATHSOURCE_basic: int = 1
export const DW_PATHSOURCE_dsym: int = 2
export const DW_PATHSOURCE_debuglink: int = 3
export const DW_FTYPE_UNKNOWN: int = 0
export const DW_FTYPE_ELF: int = 1
export const DW_FTYPE_MACH_O: int = 2
export const DW_FTYPE_PE: int = 3
export const DW_FTYPE_ARCHIVE: int = 4
export const DW_DLV_OK: int = 0
export const DW_DLV_ERROR: int = 1
export const DW_GROUPNUMBER_ANY: int = 0
export const DW_GROUPNUMBER_BASE: int = 1
export const DW_GROUPNUMBER_DWO: int = 2
export const DW_CIE_AUGMENTER_STRING_V0: [char] = "z"
export const DW_FRAME_UNDEFINED_VAL: int = 12288
export const DW_FRAME_SAME_VAL: int = 12289
export const DW_FRAME_CFA_COL: int = 12290
export const DW_DLS_NOSLIDE: int = 0
export const DW_DLS_FORWARD: int = 1
export const DW_FISSION_SECT_COUNT: int = 12
export const DW_EXPR_OFFSET: int = 0
export const DW_EXPR_VAL_OFFSET: int = 1
export const DW_EXPR_EXPRESSION: int = 2
export const DW_EXPR_VAL_EXPRESSION: int = 3
export const DW_DLE_NE: int = 0
export const DW_DLE_VMM: int = 1
export const DW_DLE_MAP: int = 2
export const DW_DLE_LEE: int = 3
export const DW_DLE_NDS: int = 4
export const DW_DLE_NLS: int = 5
export const DW_DLE_ID: int = 6
export const DW_DLE_IOF: int = 7
export const DW_DLE_MAF: int = 8
export const DW_DLE_IA: int = 9
export const DW_DLE_MDE: int = 10
export const DW_DLE_MLE: int = 11
export const DW_DLE_FNO: int = 12
export const DW_DLE_FNR: int = 13
export const DW_DLE_FWA: int = 14
export const DW_DLE_NOB: int = 15
export const DW_DLE_MOF: int = 16
export const DW_DLE_EOLL: int = 17
export const DW_DLE_NOLL: int = 18
export const DW_DLE_BADOFF: int = 19
export const DW_DLE_EOS: int = 20
export const DW_DLE_ATRUNC: int = 21
export const DW_DLE_BADBITC: int = 22
export const DW_DLE_DBG_ALLOC: int = 23
export const DW_DLE_FSTAT_ERROR: int = 24
export const DW_DLE_FSTAT_MODE_ERROR: int = 25
export const DW_DLE_INIT_ACCESS_WRONG: int = 26
export const DW_DLE_ELF_BEGIN_ERROR: int = 27
export const DW_DLE_ELF_GETEHDR_ERROR: int = 28
export const DW_DLE_ELF_GETSHDR_ERROR: int = 29
export const DW_DLE_ELF_STRPTR_ERROR: int = 30
export const DW_DLE_DEBUG_INFO_DUPLICATE: int = 31
export const DW_DLE_DEBUG_INFO_NULL: int = 32
export const DW_DLE_DEBUG_ABBREV_DUPLICATE: int = 33
export const DW_DLE_DEBUG_ABBREV_NULL: int = 34
export const DW_DLE_DEBUG_ARANGES_DUPLICATE: int = 35
export const DW_DLE_DEBUG_ARANGES_NULL: int = 36
export const DW_DLE_DEBUG_LINE_DUPLICATE: int = 37
export const DW_DLE_DEBUG_LINE_NULL: int = 38
export const DW_DLE_DEBUG_LOC_DUPLICATE: int = 39
export const DW_DLE_DEBUG_LOC_NULL: int = 40
export const DW_DLE_DEBUG_MACINFO_DUPLICATE: int = 41
export const DW_DLE_DEBUG_MACINFO_NULL: int = 42
export const DW_DLE_DEBUG_PUBNAMES_DUPLICATE: int = 43
export const DW_DLE_DEBUG_PUBNAMES_NULL: int = 44
export const DW_DLE_DEBUG_STR_DUPLICATE: int = 45
export const DW_DLE_DEBUG_STR_NULL: int = 46
export const DW_DLE_CU_LENGTH_ERROR: int = 47
export const DW_DLE_VERSION_STAMP_ERROR: int = 48
export const DW_DLE_ABBREV_OFFSET_ERROR: int = 49
export const DW_DLE_ADDRESS_SIZE_ERROR: int = 50
export const DW_DLE_DEBUG_INFO_PTR_NULL: int = 51
export const DW_DLE_DIE_NULL: int = 52
export const DW_DLE_STRING_OFFSET_BAD: int = 53
export const DW_DLE_DEBUG_LINE_LENGTH_BAD: int = 54
export const DW_DLE_LINE_PROLOG_LENGTH_BAD: int = 55
export const DW_DLE_LINE_NUM_OPERANDS_BAD: int = 56
export const DW_DLE_LINE_SET_ADDR_ERROR: int = 57
export const DW_DLE_LINE_EXT_OPCODE_BAD: int = 58
export const DW_DLE_DWARF_LINE_NULL: int = 59
export const DW_DLE_INCL_DIR_NUM_BAD: int = 60
export const DW_DLE_LINE_FILE_NUM_BAD: int = 61
export const DW_DLE_ALLOC_FAIL: int = 62
export const DW_DLE_NO_CALLBACK_FUNC: int = 63
export const DW_DLE_SECT_ALLOC: int = 64
export const DW_DLE_FILE_ENTRY_ALLOC: int = 65
export const DW_DLE_LINE_ALLOC: int = 66
export const DW_DLE_FPGM_ALLOC: int = 67
export const DW_DLE_INCDIR_ALLOC: int = 68
export const DW_DLE_STRING_ALLOC: int = 69
export const DW_DLE_CHUNK_ALLOC: int = 70
export const DW_DLE_BYTEOFF_ERR: int = 71
export const DW_DLE_CIE_ALLOC: int = 72
export const DW_DLE_FDE_ALLOC: int = 73
export const DW_DLE_REGNO_OVFL: int = 74
export const DW_DLE_CIE_OFFS_ALLOC: int = 75
export const DW_DLE_WRONG_ADDRESS: int = 76
export const DW_DLE_EXTRA_NEIGHBORS: int = 77
export const DW_DLE_WRONG_TAG: int = 78
export const DW_DLE_DIE_ALLOC: int = 79
export const DW_DLE_PARENT_EXISTS: int = 80
export const DW_DLE_DBG_NULL: int = 81
export const DW_DLE_DEBUGLINE_ERROR: int = 82
export const DW_DLE_DEBUGFRAME_ERROR: int = 83
export const DW_DLE_DEBUGINFO_ERROR: int = 84
export const DW_DLE_ATTR_ALLOC: int = 85
export const DW_DLE_ABBREV_ALLOC: int = 86
export const DW_DLE_OFFSET_UFLW: int = 87
export const DW_DLE_ELF_SECT_ERR: int = 88
export const DW_DLE_DEBUG_FRAME_LENGTH_BAD: int = 89
export const DW_DLE_FRAME_VERSION_BAD: int = 90
export const DW_DLE_CIE_RET_ADDR_REG_ERROR: int = 91
export const DW_DLE_FDE_NULL: int = 92
export const DW_DLE_FDE_DBG_NULL: int = 93
export const DW_DLE_CIE_NULL: int = 94
export const DW_DLE_CIE_DBG_NULL: int = 95
export const DW_DLE_FRAME_TABLE_COL_BAD: int = 96
export const DW_DLE_PC_NOT_IN_FDE_RANGE: int = 97
export const DW_DLE_CIE_INSTR_EXEC_ERROR: int = 98
export const DW_DLE_FRAME_INSTR_EXEC_ERROR: int = 99
export const DW_DLE_FDE_PTR_NULL: int = 100
export const DW_DLE_RET_OP_LIST_NULL: int = 101
export const DW_DLE_LINE_CONTEXT_NULL: int = 102
export const DW_DLE_DBG_NO_CU_CONTEXT: int = 103
export const DW_DLE_DIE_NO_CU_CONTEXT: int = 104
export const DW_DLE_FIRST_DIE_NOT_CU: int = 105
export const DW_DLE_NEXT_DIE_PTR_NULL: int = 106
export const DW_DLE_DEBUG_FRAME_DUPLICATE: int = 107
export const DW_DLE_DEBUG_FRAME_NULL: int = 108
export const DW_DLE_ABBREV_DECODE_ERROR: int = 109
export const DW_DLE_DWARF_ABBREV_NULL: int = 110
export const DW_DLE_ATTR_NULL: int = 111
export const DW_DLE_DIE_BAD: int = 112
export const DW_DLE_DIE_ABBREV_BAD: int = 113
export const DW_DLE_ATTR_FORM_BAD: int = 114
export const DW_DLE_ATTR_NO_CU_CONTEXT: int = 115
export const DW_DLE_ATTR_FORM_SIZE_BAD: int = 116
export const DW_DLE_ATTR_DBG_NULL: int = 117
export const DW_DLE_BAD_REF_FORM: int = 118
export const DW_DLE_ATTR_FORM_OFFSET_BAD: int = 119
export const DW_DLE_LINE_OFFSET_BAD: int = 120
export const DW_DLE_DEBUG_STR_OFFSET_BAD: int = 121
export const DW_DLE_STRING_PTR_NULL: int = 122
export const DW_DLE_PUBNAMES_VERSION_ERROR: int = 123
export const DW_DLE_PUBNAMES_LENGTH_BAD: int = 124
export const DW_DLE_GLOBAL_NULL: int = 125
export const DW_DLE_GLOBAL_CONTEXT_NULL: int = 126
export const DW_DLE_DIR_INDEX_BAD: int = 127
export const DW_DLE_LOC_EXPR_BAD: int = 128
export const DW_DLE_DIE_LOC_EXPR_BAD: int = 129
export const DW_DLE_ADDR_ALLOC: int = 130
export const DW_DLE_OFFSET_BAD: int = 131
export const DW_DLE_MAKE_CU_CONTEXT_FAIL: int = 132
export const DW_DLE_REL_ALLOC: int = 133
export const DW_DLE_ARANGE_OFFSET_BAD: int = 134
export const DW_DLE_SEGMENT_SIZE_BAD: int = 135
export const DW_DLE_ARANGE_LENGTH_BAD: int = 136
export const DW_DLE_ARANGE_DECODE_ERROR: int = 137
export const DW_DLE_ARANGES_NULL: int = 138
export const DW_DLE_ARANGE_NULL: int = 139
export const DW_DLE_NO_FILE_NAME: int = 140
export const DW_DLE_NO_COMP_DIR: int = 141
export const DW_DLE_CU_ADDRESS_SIZE_BAD: int = 142
export const DW_DLE_INPUT_ATTR_BAD: int = 143
export const DW_DLE_EXPR_NULL: int = 144
export const DW_DLE_BAD_EXPR_OPCODE: int = 145
export const DW_DLE_EXPR_LENGTH_BAD: int = 146
export const DW_DLE_MULTIPLE_RELOC_IN_EXPR: int = 147
export const DW_DLE_ELF_GETIDENT_ERROR: int = 148
export const DW_DLE_NO_AT_MIPS_FDE: int = 149
export const DW_DLE_NO_CIE_FOR_FDE: int = 150
export const DW_DLE_DIE_ABBREV_LIST_NULL: int = 151
export const DW_DLE_DEBUG_FUNCNAMES_DUPLICATE: int = 152
export const DW_DLE_DEBUG_FUNCNAMES_NULL: int = 153
export const DW_DLE_DEBUG_FUNCNAMES_VERSION_ERROR: int = 154
export const DW_DLE_DEBUG_FUNCNAMES_LENGTH_BAD: int = 155
export const DW_DLE_FUNC_NULL: int = 156
export const DW_DLE_FUNC_CONTEXT_NULL: int = 157
export const DW_DLE_DEBUG_TYPENAMES_DUPLICATE: int = 158
export const DW_DLE_DEBUG_TYPENAMES_NULL: int = 159
export const DW_DLE_DEBUG_TYPENAMES_VERSION_ERROR: int = 160
export const DW_DLE_DEBUG_TYPENAMES_LENGTH_BAD: int = 161
export const DW_DLE_TYPE_NULL: int = 162
export const DW_DLE_TYPE_CONTEXT_NULL: int = 163
export const DW_DLE_DEBUG_VARNAMES_DUPLICATE: int = 164
export const DW_DLE_DEBUG_VARNAMES_NULL: int = 165
export const DW_DLE_DEBUG_VARNAMES_VERSION_ERROR: int = 166
export const DW_DLE_DEBUG_VARNAMES_LENGTH_BAD: int = 167
export const DW_DLE_VAR_NULL: int = 168
export const DW_DLE_VAR_CONTEXT_NULL: int = 169
export const DW_DLE_DEBUG_WEAKNAMES_DUPLICATE: int = 170
export const DW_DLE_DEBUG_WEAKNAMES_NULL: int = 171
export const DW_DLE_DEBUG_WEAKNAMES_VERSION_ERROR: int = 172
export const DW_DLE_DEBUG_WEAKNAMES_LENGTH_BAD: int = 173
export const DW_DLE_WEAK_NULL: int = 174
export const DW_DLE_WEAK_CONTEXT_NULL: int = 175
export const DW_DLE_LOCDESC_COUNT_WRONG: int = 176
export const DW_DLE_MACINFO_STRING_NULL: int = 177
export const DW_DLE_MACINFO_STRING_EMPTY: int = 178
export const DW_DLE_MACINFO_INTERNAL_ERROR_SPACE: int = 179
export const DW_DLE_MACINFO_MALLOC_FAIL: int = 180
export const DW_DLE_DEBUGMACINFO_ERROR: int = 181
export const DW_DLE_DEBUG_MACRO_LENGTH_BAD: int = 182
export const DW_DLE_DEBUG_MACRO_MAX_BAD: int = 183
export const DW_DLE_DEBUG_MACRO_INTERNAL_ERR: int = 184
export const DW_DLE_DEBUG_MACRO_MALLOC_SPACE: int = 185
export const DW_DLE_DEBUG_MACRO_INCONSISTENT: int = 186
export const DW_DLE_DF_NO_CIE_AUGMENTATION: int = 187
export const DW_DLE_DF_REG_NUM_TOO_HIGH: int = 188
export const DW_DLE_DF_MAKE_INSTR_NO_INIT: int = 189
export const DW_DLE_DF_NEW_LOC_LESS_OLD_LOC: int = 190
export const DW_DLE_DF_POP_EMPTY_STACK: int = 191
export const DW_DLE_DF_ALLOC_FAIL: int = 192
export const DW_DLE_DF_FRAME_DECODING_ERROR: int = 193
export const DW_DLE_DEBUG_LOC_SECTION_SHORT: int = 194
export const DW_DLE_FRAME_AUGMENTATION_UNKNOWN: int = 195
export const DW_DLE_PUBTYPE_CONTEXT: int = 196
export const DW_DLE_DEBUG_PUBTYPES_LENGTH_BAD: int = 197
export const DW_DLE_DEBUG_PUBTYPES_VERSION_ERROR: int = 198
export const DW_DLE_DEBUG_PUBTYPES_DUPLICATE: int = 199
export const DW_DLE_FRAME_CIE_DECODE_ERROR: int = 200
export const DW_DLE_FRAME_REGISTER_UNREPRESENTABLE: int = 201
export const DW_DLE_FRAME_REGISTER_COUNT_MISMATCH: int = 202
export const DW_DLE_LINK_LOOP: int = 203
export const DW_DLE_STRP_OFFSET_BAD: int = 204
export const DW_DLE_DEBUG_RANGES_DUPLICATE: int = 205
export const DW_DLE_DEBUG_RANGES_OFFSET_BAD: int = 206
export const DW_DLE_DEBUG_RANGES_MISSING_END: int = 207
export const DW_DLE_DEBUG_RANGES_OUT_OF_MEM: int = 208
export const DW_DLE_DEBUG_SYMTAB_ERR: int = 209
export const DW_DLE_DEBUG_STRTAB_ERR: int = 210
export const DW_DLE_RELOC_MISMATCH_INDEX: int = 211
export const DW_DLE_RELOC_MISMATCH_RELOC_INDEX: int = 212
export const DW_DLE_RELOC_MISMATCH_STRTAB_INDEX: int = 213
export const DW_DLE_RELOC_SECTION_MISMATCH: int = 214
export const DW_DLE_RELOC_SECTION_MISSING_INDEX: int = 215
export const DW_DLE_RELOC_SECTION_LENGTH_ODD: int = 216
export const DW_DLE_RELOC_SECTION_PTR_NULL: int = 217
export const DW_DLE_RELOC_SECTION_MALLOC_FAIL: int = 218
export const DW_DLE_NO_ELF64_SUPPORT: int = 219
export const DW_DLE_MISSING_ELF64_SUPPORT: int = 220
export const DW_DLE_ORPHAN_FDE: int = 221
export const DW_DLE_DUPLICATE_INST_BLOCK: int = 222
export const DW_DLE_BAD_REF_SIG8_FORM: int = 223
export const DW_DLE_ATTR_EXPRLOC_FORM_BAD: int = 224
export const DW_DLE_FORM_SEC_OFFSET_LENGTH_BAD: int = 225
export const DW_DLE_NOT_REF_FORM: int = 226
export const DW_DLE_DEBUG_FRAME_LENGTH_NOT_MULTIPLE: int = 227
export const DW_DLE_REF_SIG8_NOT_HANDLED: int = 228
export const DW_DLE_DEBUG_FRAME_POSSIBLE_ADDRESS_BOTCH: int = 229
export const DW_DLE_LOC_BAD_TERMINATION: int = 230
export const DW_DLE_SYMTAB_SECTION_LENGTH_ODD: int = 231
export const DW_DLE_RELOC_SECTION_SYMBOL_INDEX_BAD: int = 232
export const DW_DLE_RELOC_SECTION_RELOC_TARGET_SIZE_UNKNOWN: int = 233
export const DW_DLE_SYMTAB_SECTION_ENTRYSIZE_ZERO: int = 234
export const DW_DLE_LINE_NUMBER_HEADER_ERROR: int = 235
export const DW_DLE_DEBUG_TYPES_NULL: int = 236
export const DW_DLE_DEBUG_TYPES_DUPLICATE: int = 237
export const DW_DLE_DEBUG_TYPES_ONLY_DWARF4: int = 238
export const DW_DLE_DEBUG_TYPEOFFSET_BAD: int = 239
export const DW_DLE_GNU_OPCODE_ERROR: int = 240
export const DW_DLE_DEBUGPUBTYPES_ERROR: int = 241
export const DW_DLE_AT_FIXUP_NULL: int = 242
export const DW_DLE_AT_FIXUP_DUP: int = 243
export const DW_DLE_BAD_ABINAME: int = 244
export const DW_DLE_TOO_MANY_DEBUG: int = 245
export const DW_DLE_DEBUG_STR_OFFSETS_DUPLICATE: int = 246
export const DW_DLE_SECTION_DUPLICATION: int = 247
export const DW_DLE_SECTION_ERROR: int = 248
export const DW_DLE_DEBUG_ADDR_DUPLICATE: int = 249
export const DW_DLE_DEBUG_CU_UNAVAILABLE_FOR_FORM: int = 250
export const DW_DLE_DEBUG_FORM_HANDLING_INCOMPLETE: int = 251
export const DW_DLE_NEXT_DIE_PAST_END: int = 252
export const DW_DLE_NEXT_DIE_WRONG_FORM: int = 253
export const DW_DLE_NEXT_DIE_NO_ABBREV_LIST: int = 254
export const DW_DLE_NESTED_FORM_INDIRECT_ERROR: int = 255
export const DW_DLE_CU_DIE_NO_ABBREV_LIST: int = 256
export const DW_DLE_MISSING_NEEDED_DEBUG_ADDR_SECTION: int = 257
export const DW_DLE_ATTR_FORM_NOT_ADDR_INDEX: int = 258
export const DW_DLE_ATTR_FORM_NOT_STR_INDEX: int = 259
export const DW_DLE_DUPLICATE_GDB_INDEX: int = 260
export const DW_DLE_ERRONEOUS_GDB_INDEX_SECTION: int = 261
export const DW_DLE_GDB_INDEX_COUNT_ERROR: int = 262
export const DW_DLE_GDB_INDEX_COUNT_ADDR_ERROR: int = 263
export const DW_DLE_GDB_INDEX_INDEX_ERROR: int = 264
export const DW_DLE_GDB_INDEX_CUVEC_ERROR: int = 265
export const DW_DLE_DUPLICATE_CU_INDEX: int = 266
export const DW_DLE_DUPLICATE_TU_INDEX: int = 267
export const DW_DLE_XU_TYPE_ARG_ERROR: int = 268
export const DW_DLE_XU_IMPOSSIBLE_ERROR: int = 269
export const DW_DLE_XU_NAME_COL_ERROR: int = 270
export const DW_DLE_XU_HASH_ROW_ERROR: int = 271
export const DW_DLE_XU_HASH_INDEX_ERROR: int = 272
export const DW_DLE_FAILSAFE_ERRVAL: int = 273
export const DW_DLE_ARANGE_ERROR: int = 274
export const DW_DLE_PUBNAMES_ERROR: int = 275
export const DW_DLE_FUNCNAMES_ERROR: int = 276
export const DW_DLE_TYPENAMES_ERROR: int = 277
export const DW_DLE_VARNAMES_ERROR: int = 278
export const DW_DLE_WEAKNAMES_ERROR: int = 279
export const DW_DLE_RELOCS_ERROR: int = 280
export const DW_DLE_ATTR_OUTSIDE_SECTION: int = 281
export const DW_DLE_FISSION_INDEX_WRONG: int = 282
export const DW_DLE_FISSION_VERSION_ERROR: int = 283
export const DW_DLE_NEXT_DIE_LOW_ERROR: int = 284
export const DW_DLE_CU_UT_TYPE_ERROR: int = 285
export const DW_DLE_NO_SUCH_SIGNATURE_FOUND: int = 286
export const DW_DLE_SIGNATURE_SECTION_NUMBER_WRONG: int = 287
export const DW_DLE_ATTR_FORM_NOT_DATA8: int = 288
export const DW_DLE_SIG_TYPE_WRONG_STRING: int = 289
export const DW_DLE_MISSING_REQUIRED_TU_OFFSET_HASH: int = 290
export const DW_DLE_MISSING_REQUIRED_CU_OFFSET_HASH: int = 291
export const DW_DLE_DWP_MISSING_DWO_ID: int = 292
export const DW_DLE_DWP_SIBLING_ERROR: int = 293
export const DW_DLE_DEBUG_FISSION_INCOMPLETE: int = 294
export const DW_DLE_FISSION_SECNUM_ERR: int = 295
export const DW_DLE_DEBUG_MACRO_DUPLICATE: int = 296
export const DW_DLE_DEBUG_NAMES_DUPLICATE: int = 297
export const DW_DLE_DEBUG_LINE_STR_DUPLICATE: int = 298
export const DW_DLE_DEBUG_SUP_DUPLICATE: int = 299
export const DW_DLE_NO_SIGNATURE_TO_LOOKUP: int = 300
export const DW_DLE_NO_TIED_ADDR_AVAILABLE: int = 301
export const DW_DLE_NO_TIED_SIG_AVAILABLE: int = 302
export const DW_DLE_STRING_NOT_TERMINATED: int = 303
export const DW_DLE_BAD_LINE_TABLE_OPERATION: int = 304
export const DW_DLE_LINE_CONTEXT_BOTCH: int = 305
export const DW_DLE_LINE_CONTEXT_INDEX_WRONG: int = 306
export const DW_DLE_NO_TIED_STRING_AVAILABLE: int = 307
export const DW_DLE_NO_TIED_FILE_AVAILABLE: int = 308
export const DW_DLE_CU_TYPE_MISSING: int = 309
export const DW_DLE_LLE_CODE_UNKNOWN: int = 310
export const DW_DLE_LOCLIST_INTERFACE_ERROR: int = 311
export const DW_DLE_LOCLIST_INDEX_ERROR: int = 312
export const DW_DLE_INTERFACE_NOT_SUPPORTED: int = 313
export const DW_DLE_ZDEBUG_REQUIRES_ZLIB: int = 314
export const DW_DLE_ZDEBUG_INPUT_FORMAT_ODD: int = 315
export const DW_DLE_ZLIB_BUF_ERROR: int = 316
export const DW_DLE_ZLIB_DATA_ERROR: int = 317
export const DW_DLE_MACRO_OFFSET_BAD: int = 318
export const DW_DLE_MACRO_OPCODE_BAD: int = 319
export const DW_DLE_MACRO_OPCODE_FORM_BAD: int = 320
export const DW_DLE_UNKNOWN_FORM: int = 321
export const DW_DLE_BAD_MACRO_HEADER_POINTER: int = 322
export const DW_DLE_BAD_MACRO_INDEX: int = 323
export const DW_DLE_MACRO_OP_UNHANDLED: int = 324
export const DW_DLE_MACRO_PAST_END: int = 325
export const DW_DLE_LINE_STRP_OFFSET_BAD: int = 326
export const DW_DLE_STRING_FORM_IMPROPER: int = 327
export const DW_DLE_ELF_FLAGS_NOT_AVAILABLE: int = 328
export const DW_DLE_LEB_IMPROPER: int = 329
export const DW_DLE_DEBUG_LINE_RANGE_ZERO: int = 330
export const DW_DLE_READ_LITTLEENDIAN_ERROR: int = 331
export const DW_DLE_READ_BIGENDIAN_ERROR: int = 332
export const DW_DLE_RELOC_INVALID: int = 333
export const DW_DLE_INFO_HEADER_ERROR: int = 334
export const DW_DLE_ARANGES_HEADER_ERROR: int = 335
export const DW_DLE_LINE_OFFSET_WRONG_FORM: int = 336
export const DW_DLE_FORM_BLOCK_LENGTH_ERROR: int = 337
export const DW_DLE_ZLIB_SECTION_SHORT: int = 338
export const DW_DLE_CIE_INSTR_PTR_ERROR: int = 339
export const DW_DLE_FDE_INSTR_PTR_ERROR: int = 340
export const DW_DLE_FISSION_ADDITION_ERROR: int = 341
export const DW_DLE_HEADER_LEN_BIGGER_THAN_SECSIZE: int = 342
export const DW_DLE_LOCEXPR_OFF_SECTION_END: int = 343
export const DW_DLE_POINTER_SECTION_UNKNOWN: int = 344
export const DW_DLE_ERRONEOUS_XU_INDEX_SECTION: int = 345
export const DW_DLE_DIRECTORY_FORMAT_COUNT_VS_DIRECTORIES_MISMATCH: int = 346
export const DW_DLE_COMPRESSED_EMPTY_SECTION: int = 347
export const DW_DLE_SIZE_WRAPAROUND: int = 348
export const DW_DLE_ILLOGICAL_TSEARCH: int = 349
export const DW_DLE_BAD_STRING_FORM: int = 350
export const DW_DLE_DEBUGSTR_ERROR: int = 351
export const DW_DLE_DEBUGSTR_UNEXPECTED_REL: int = 352
export const DW_DLE_DISCR_ARRAY_ERROR: int = 353
export const DW_DLE_LEB_OUT_ERROR: int = 354
export const DW_DLE_SIBLING_LIST_IMPROPER: int = 355
export const DW_DLE_LOCLIST_OFFSET_BAD: int = 356
export const DW_DLE_LINE_TABLE_BAD: int = 357
export const DW_DLE_DEBUG_LOClISTS_DUPLICATE: int = 358
export const DW_DLE_DEBUG_RNGLISTS_DUPLICATE: int = 359
export const DW_DLE_ABBREV_OFF_END: int = 360
export const DW_DLE_FORM_STRING_BAD_STRING: int = 361
export const DW_DLE_AUGMENTATION_STRING_OFF_END: int = 362
export const DW_DLE_STRING_OFF_END_PUBNAMES_LIKE: int = 363
export const DW_DLE_LINE_STRING_BAD: int = 364
export const DW_DLE_DEFINE_FILE_STRING_BAD: int = 365
export const DW_DLE_MACRO_STRING_BAD: int = 366
export const DW_DLE_MACINFO_STRING_BAD: int = 367
export const DW_DLE_ZLIB_UNCOMPRESS_ERROR: int = 368
export const DW_DLE_IMPROPER_DWO_ID: int = 369
export const DW_DLE_GROUPNUMBER_ERROR: int = 370
export const DW_DLE_ADDRESS_SIZE_ZERO: int = 371
export const DW_DLE_DEBUG_NAMES_HEADER_ERROR: int = 372
export const DW_DLE_DEBUG_NAMES_AUG_STRING_ERROR: int = 373
export const DW_DLE_DEBUG_NAMES_PAD_NON_ZERO: int = 374
export const DW_DLE_DEBUG_NAMES_OFF_END: int = 375
export const DW_DLE_DEBUG_NAMES_ABBREV_OVERFLOW: int = 376
export const DW_DLE_DEBUG_NAMES_ABBREV_CORRUPTION: int = 377
export const DW_DLE_DEBUG_NAMES_NULL_POINTER: int = 378
export const DW_DLE_DEBUG_NAMES_BAD_INDEX_ARG: int = 379
export const DW_DLE_DEBUG_NAMES_ENTRYPOOL_OFFSET: int = 380
export const DW_DLE_DEBUG_NAMES_UNHANDLED_FORM: int = 381
export const DW_DLE_LNCT_CODE_UNKNOWN: int = 382
export const DW_DLE_LNCT_FORM_CODE_NOT_HANDLED: int = 383
export const DW_DLE_LINE_HEADER_LENGTH_BOTCH: int = 384
export const DW_DLE_STRING_HASHTAB_IDENTITY_ERROR: int = 385
export const DW_DLE_UNIT_TYPE_NOT_HANDLED: int = 386
export const DW_DLE_GROUP_MAP_ALLOC: int = 387
export const DW_DLE_GROUP_MAP_DUPLICATE: int = 388
export const DW_DLE_GROUP_COUNT_ERROR: int = 389
export const DW_DLE_GROUP_INTERNAL_ERROR: int = 390
export const DW_DLE_GROUP_LOAD_ERROR: int = 391
export const DW_DLE_GROUP_LOAD_READ_ERROR: int = 392
export const DW_DLE_AUG_DATA_LENGTH_BAD: int = 393
export const DW_DLE_ABBREV_MISSING: int = 394
export const DW_DLE_NO_TAG_FOR_DIE: int = 395
export const DW_DLE_LOWPC_WRONG_CLASS: int = 396
export const DW_DLE_HIGHPC_WRONG_FORM: int = 397
export const DW_DLE_STR_OFFSETS_BASE_WRONG_FORM: int = 398
export const DW_DLE_DATA16_OUTSIDE_SECTION: int = 399
export const DW_DLE_LNCT_MD5_WRONG_FORM: int = 400
export const DW_DLE_LINE_HEADER_CORRUPT: int = 401
export const DW_DLE_STR_OFFSETS_NULLARGUMENT: int = 402
export const DW_DLE_STR_OFFSETS_NULL_DBG: int = 403
export const DW_DLE_STR_OFFSETS_NO_MAGIC: int = 404
export const DW_DLE_STR_OFFSETS_ARRAY_SIZE: int = 405
export const DW_DLE_STR_OFFSETS_VERSION_WRONG: int = 406
export const DW_DLE_STR_OFFSETS_ARRAY_INDEX_WRONG: int = 407
export const DW_DLE_STR_OFFSETS_EXTRA_BYTES: int = 408
export const DW_DLE_DUP_ATTR_ON_DIE: int = 409
export const DW_DLE_SECTION_NAME_BIG: int = 410
export const DW_DLE_FILE_UNAVAILABLE: int = 411
export const DW_DLE_FILE_WRONG_TYPE: int = 412
export const DW_DLE_SIBLING_OFFSET_WRONG: int = 413
export const DW_DLE_OPEN_FAIL: int = 414
export const DW_DLE_OFFSET_SIZE: int = 415
export const DW_DLE_MACH_O_SEGOFFSET_BAD: int = 416
export const DW_DLE_FILE_OFFSET_BAD: int = 417
export const DW_DLE_SEEK_ERROR: int = 418
export const DW_DLE_READ_ERROR: int = 419
export const DW_DLE_ELF_CLASS_BAD: int = 420
export const DW_DLE_ELF_ENDIAN_BAD: int = 421
export const DW_DLE_ELF_VERSION_BAD: int = 422
export const DW_DLE_FILE_TOO_SMALL: int = 423
export const DW_DLE_PATH_SIZE_TOO_SMALL: int = 424
export const DW_DLE_BAD_TYPE_SIZE: int = 425
export const DW_DLE_PE_SIZE_SMALL: int = 426
export const DW_DLE_PE_OFFSET_BAD: int = 427
export const DW_DLE_PE_STRING_TOO_LONG: int = 428
export const DW_DLE_IMAGE_FILE_UNKNOWN_TYPE: int = 429
export const DW_DLE_LINE_TABLE_LINENO_ERROR: int = 430
export const DW_DLE_PRODUCER_CODE_NOT_AVAILABLE: int = 431
export const DW_DLE_NO_ELF_SUPPORT: int = 432
export const DW_DLE_NO_STREAM_RELOC_SUPPORT: int = 433
export const DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR: int = 434
export const DW_DLE_SECTION_SIZE_ERROR: int = 435
export const DW_DLE_INTERNAL_NULL_POINTER: int = 436
export const DW_DLE_SECTION_STRING_OFFSET_BAD: int = 437
export const DW_DLE_SECTION_INDEX_BAD: int = 438
export const DW_DLE_INTEGER_TOO_SMALL: int = 439
export const DW_DLE_ELF_SECTION_LINK_ERROR: int = 440
export const DW_DLE_ELF_SECTION_GROUP_ERROR: int = 441
export const DW_DLE_ELF_SECTION_COUNT_MISMATCH: int = 442
export const DW_DLE_ELF_STRING_SECTION_MISSING: int = 443
export const DW_DLE_SEEK_OFF_END: int = 444
export const DW_DLE_READ_OFF_END: int = 445
export const DW_DLE_ELF_SECTION_ERROR: int = 446
export const DW_DLE_ELF_STRING_SECTION_ERROR: int = 447
export const DW_DLE_MIXING_SPLIT_DWARF_VERSIONS: int = 448
export const DW_DLE_TAG_CORRUPT: int = 449
export const DW_DLE_FORM_CORRUPT: int = 450
export const DW_DLE_ATTR_CORRUPT: int = 451
export const DW_DLE_ABBREV_ATTR_DUPLICATION: int = 452
export const DW_DLE_DWP_SIGNATURE_MISMATCH: int = 453
export const DW_DLE_CU_UT_TYPE_VALUE: int = 454
export const DW_DLE_DUPLICATE_GNU_DEBUGLINK: int = 455
export const DW_DLE_CORRUPT_GNU_DEBUGLINK: int = 456
export const DW_DLE_CORRUPT_NOTE_GNU_DEBUGID: int = 457
export const DW_DLE_CORRUPT_GNU_DEBUGID_SIZE: int = 458
export const DW_DLE_CORRUPT_GNU_DEBUGID_STRING: int = 459
export const DW_DLE_HEX_STRING_ERROR: int = 460
export const DW_DLE_DECIMAL_STRING_ERROR: int = 461
export const DW_DLE_PRO_INIT_EXTRAS_UNKNOWN: int = 462
export const DW_DLE_PRO_INIT_EXTRAS_ERR: int = 463
export const DW_DLE_NULL_ARGS_DWARF_ADD_PATH: int = 464
export const DW_DLE_DWARF_INIT_DBG_NULL: int = 465
export const DW_DLE_ELF_RELOC_SECTION_ERROR: int = 466
export const DW_DLE_USER_DECLARED_ERROR: int = 467
export const DW_DLE_RNGLISTS_ERROR: int = 468
export const DW_DLE_LOCLISTS_ERROR: int = 469
export const DW_DLE_SECTION_SIZE_OR_OFFSET_LARGE: int = 470
export const DW_DLE_GDBINDEX_STRING_ERROR: int = 471
export const DW_DLE_GNU_PUBNAMES_ERROR: int = 472
export const DW_DLE_GNU_PUBTYPES_ERROR: int = 473
export const DW_DLE_DUPLICATE_GNU_DEBUG_PUBNAMES: int = 474
export const DW_DLE_DUPLICATE_GNU_DEBUG_PUBTYPES: int = 475
export const DW_DLE_DEBUG_SUP_STRING_ERROR: int = 476
export const DW_DLE_DEBUG_SUP_ERROR: int = 477
export const DW_DLE_LOCATION_ERROR: int = 478
export const DW_DLE_DEBUGLINK_PATH_SHORT: int = 479
export const DW_DLE_SIGNATURE_MISMATCH: int = 480
export const DW_DLE_MACRO_VERSION_ERROR: int = 481
export const DW_DLE_NEGATIVE_SIZE: int = 482
export const DW_DLE_UDATA_VALUE_NEGATIVE: int = 483
export const DW_DLE_DEBUG_NAMES_ERROR: int = 484
export const DW_DLE_CFA_INSTRUCTION_ERROR: int = 485
export const DW_DLE_MACHO_CORRUPT_HEADER: int = 486
export const DW_DLE_MACHO_CORRUPT_COMMAND: int = 487
export const DW_DLE_MACHO_CORRUPT_SECTIONDETAILS: int = 488
export const DW_DLE_RELOCATION_SECTION_SIZE_ERROR: int = 489
export const DW_DLE_SYMBOL_SECTION_SIZE_ERROR: int = 490
export const DW_DLE_PE_SECTION_SIZE_ERROR: int = 491
export const DW_DLE_DEBUG_ADDR_ERROR: int = 492
export const DW_DLE_NO_SECT_STRINGS: int = 493
export const DW_DLE_TOO_FEW_SECTIONS: int = 494
export const DW_DLE_BUILD_ID_DESCRIPTION_SIZE: int = 495
export const DW_DLE_BAD_SECTION_FLAGS: int = 496
export const DW_DLE_IMPROPER_SECTION_ZERO: int = 497
export const DW_DLE_INVALID_NULL_ARGUMENT: int = 498
export const DW_DLE_LINE_INDEX_WRONG: int = 499
export const DW_DLE_LINE_COUNT_WRONG: int = 500
export const DW_DLE_ARITHMETIC_OVERFLOW: int = 501
export const DW_DLE_LAST: int = 501
export const DW_LKIND_expression: int = 0
export const DW_LKIND_loclist: int = 1
export const DW_LKIND_GNU_exp_list: int = 2
export const DW_LKIND_loclists: int = 5
export const DW_LKIND_unknown: int = 99
export const DW_GL_GLOBALS: int = 0
export const DW_GL_PUBTYPES: int = 1
export const DW_GL_FUNCS: int = 2
export const DW_GL_TYPES: int = 3
export const DW_GL_VARS: int = 4
export const DW_GL_WEAKS: int = 5
export const DW_HARMLESS_ERROR_CIRCULAR_LIST_DEFAULT_SIZE: int = 4
export const DWARF_DRD_BUFFER_VERSION: int = 2
export const DW_children_no: int = 0
export const DW_children_yes: int = 1
export const DW_GNUIVIS_global: int = 0
export const DW_GNUIVIS_static: int = 1
export const DW_GNUIKIND_none: int = 0
export const DW_GNUIKIND_type: int = 1
export const DW_GNUIKIND_variable: int = 2
export const DW_GNUIKIND_function: int = 3
export const DW_GNUIKIND_other: int = 4
export const DW_SECT_INFO: int = 1
export const DW_SECT_TYPES: int = 2
export const DW_SECT_ABBREV: int = 3
export const DW_SECT_LINE: int = 4
export const DW_SECT_LOCLISTS: int = 5
export const DW_SECT_STR_OFFSETS: int = 6
export const DW_SECT_MACRO: int = 7
export const DW_SECT_RNGLISTS: int = 8
export const DW_ISA_UNKNOWN: int = 0
export const DW_ISA_ARM_thumb: int = 1
export const DW_ISA_ARM_arm: int = 2
export const DW_CFA_extended: int = 0
export const DW_FRAME_REG1: int = 1
export const DW_FRAME_REG2: int = 2
export const DW_FRAME_REG3: int = 3
export const DW_FRAME_REG4: int = 4
export const DW_FRAME_REG5: int = 5
export const DW_FRAME_REG6: int = 6
export const DW_FRAME_REG7: int = 7
export const DW_FRAME_REG8: int = 8
export const DW_FRAME_REG9: int = 9
export const DW_FRAME_REG10: int = 10
export const DW_FRAME_REG11: int = 11
export const DW_FRAME_REG12: int = 12
export const DW_FRAME_REG13: int = 13
export const DW_FRAME_REG14: int = 14
export const DW_FRAME_REG15: int = 15
export const DW_FRAME_REG16: int = 16
export const DW_FRAME_REG17: int = 17
export const DW_FRAME_REG18: int = 18
export const DW_FRAME_REG19: int = 19
export const DW_FRAME_REG20: int = 20
export const DW_FRAME_REG21: int = 21
export const DW_FRAME_REG22: int = 22
export const DW_FRAME_REG23: int = 23
export const DW_FRAME_REG24: int = 24
export const DW_FRAME_REG25: int = 25
export const DW_FRAME_REG26: int = 26
export const DW_FRAME_REG27: int = 27
export const DW_FRAME_REG28: int = 28
export const DW_FRAME_REG29: int = 29
export const DW_FRAME_REG30: int = 30
export const DW_FRAME_REG31: int = 31
export const DW_FRAME_FREG0: int = 32
export const DW_FRAME_FREG1: int = 33
export const DW_FRAME_FREG2: int = 34
export const DW_FRAME_FREG3: int = 35
export const DW_FRAME_FREG4: int = 36
export const DW_FRAME_FREG5: int = 37
export const DW_FRAME_FREG6: int = 38
export const DW_FRAME_FREG7: int = 39
export const DW_FRAME_FREG8: int = 40
export const DW_FRAME_FREG9: int = 41
export const DW_FRAME_FREG10: int = 42
export const DW_FRAME_FREG11: int = 43
export const DW_FRAME_FREG12: int = 44
export const DW_FRAME_FREG13: int = 45
export const DW_FRAME_FREG14: int = 46
export const DW_FRAME_FREG15: int = 47
export const DW_FRAME_FREG16: int = 48
export const DW_FRAME_FREG17: int = 49
export const DW_FRAME_FREG18: int = 50
export const DW_FRAME_FREG19: int = 51
export const DW_FRAME_FREG20: int = 52
export const DW_FRAME_FREG21: int = 53
export const DW_FRAME_FREG22: int = 54
export const DW_FRAME_FREG23: int = 55
export const DW_FRAME_FREG24: int = 56
export const DW_FRAME_FREG25: int = 57
export const DW_FRAME_FREG26: int = 58
export const DW_FRAME_FREG27: int = 59
export const DW_FRAME_FREG28: int = 60
export const DW_FRAME_FREG29: int = 61
export const DW_FRAME_FREG30: int = 62
export const DW_FRAME_FREG31: int = 63
export const DW_FRAME_FREG32: int = 64
export const DW_FRAME_FREG33: int = 65
export const DW_FRAME_FREG34: int = 66
export const DW_FRAME_FREG35: int = 67
export const DW_FRAME_FREG36: int = 68
export const DW_FRAME_FREG37: int = 69
export const DW_FRAME_FREG38: int = 70
export const DW_FRAME_FREG39: int = 71
export const DW_FRAME_FREG40: int = 72
export const DW_FRAME_FREG41: int = 73
export const DW_FRAME_FREG42: int = 74
export const DW_FRAME_FREG43: int = 75
export const DW_FRAME_FREG44: int = 76
export const DW_FRAME_FREG45: int = 77
export const DW_FRAME_FREG46: int = 78
export const DW_FRAME_FREG47: int = 79
export const DW_FRAME_FREG48: int = 80
export const DW_FRAME_FREG49: int = 81
export const DW_FRAME_FREG50: int = 82
export const DW_FRAME_FREG51: int = 83
export const DW_FRAME_FREG52: int = 84
export const DW_FRAME_FREG53: int = 85
export const DW_FRAME_FREG54: int = 86
export const DW_FRAME_FREG55: int = 87
export const DW_FRAME_FREG56: int = 88
export const DW_FRAME_FREG57: int = 89
export const DW_FRAME_FREG58: int = 90
export const DW_FRAME_FREG59: int = 91
export const DW_FRAME_FREG60: int = 92
export const DW_FRAME_FREG61: int = 93
export const DW_FRAME_FREG62: int = 94
export const DW_FRAME_FREG63: int = 95
export const DW_FRAME_FREG64: int = 96
export const DW_FRAME_FREG65: int = 97
export const DW_FRAME_FREG66: int = 98
export const DW_FRAME_FREG67: int = 99
export const DW_FRAME_FREG68: int = 100
export const DW_FRAME_FREG69: int = 101
export const DW_FRAME_FREG70: int = 102
export const DW_FRAME_FREG71: int = 103
export const DW_FRAME_FREG72: int = 104
export const DW_FRAME_FREG73: int = 105
export const DW_FRAME_FREG74: int = 106
export const DW_FRAME_FREG75: int = 107
export const DW_FRAME_FREG76: int = 108
export const DW_FRAME_HIGHEST_NORMAL_REGISTER: int = 188
export const DW_ADDR_none: int = 0
export const DW_RANGES_ENTRY: int = 0
export const DW_RANGES_ADDRESS_SELECTION: int = 1
export const DW_RANGES_END: int = 2
export const DW_FORM_CLASS_UNKNOWN: int = 0
export const DW_FORM_CLASS_ADDRESS: int = 1
export const DW_FORM_CLASS_BLOCK: int = 2
export const DW_FORM_CLASS_CONSTANT: int = 3
export const DW_FORM_CLASS_EXPRLOC: int = 4
export const DW_FORM_CLASS_FLAG: int = 5
export const DW_FORM_CLASS_LINEPTR: int = 6
export const DW_FORM_CLASS_LOCLISTPTR: int = 7
export const DW_FORM_CLASS_MACPTR: int = 8
export const DW_FORM_CLASS_RANGELISTPTR: int = 9
export const DW_FORM_CLASS_REFERENCE: int = 10
export const DW_FORM_CLASS_STRING: int = 11
export const DW_FORM_CLASS_FRAMEPTR: int = 12
export const DW_FORM_CLASS_MACROPTR: int = 13
export const DW_FORM_CLASS_ADDRPTR: int = 14
export const DW_FORM_CLASS_LOCLIST: int = 15
export const DW_FORM_CLASS_LOCLISTSPTR: int = 16
export const DW_FORM_CLASS_RNGLIST: int = 17
export const DW_FORM_CLASS_RNGLISTSPTR: int = 18
export const DW_FORM_CLASS_STROFFSETSPTR: int = 19
export import def #extern dwarf_init_path(dw_path: *char, dw_true_path_out_buffer: *char, dw_true_path_bufferlen: uint, dw_groupnumber: uint, dw_errhand: def (*s_Dwarf_Error_s, *) -> (), dw_errarg: *, dw_dbg: **s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_init_path_dl(dw_path: *char, dw_true_path_out_buffer: *char, dw_true_path_bufferlen: uint, dw_groupnumber: uint, dw_errhand: def (*s_Dwarf_Error_s, *) -> (), dw_errarg: *, dw_dbg: **s_Dwarf_Debug_s, dw_dl_path_array: **char, dw_dl_path_array_size: uint, dw_dl_path_source: *uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_init_b(dw_fd: int, dw_groupnumber: uint, dw_errhand: def (*s_Dwarf_Error_s, *) -> (), dw_errarg: *, dw_dbg: **s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_finish(dw_dbg: *s_Dwarf_Debug_s) -> int
export import def #extern dwarf_object_init_b(dw_obj: *s_Dwarf_Obj_Access_Interface_a_s, dw_errhand: def (*s_Dwarf_Error_s, *) -> (), dw_errarg: *, dw_groupnumber: uint, dw_dbg: **s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_object_finish(dw_dbg: *s_Dwarf_Debug_s) -> int
export import def #extern dwarf_set_tied_dbg(dw_basedbg: *s_Dwarf_Debug_s, dw_tied_dbg: *s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_tied_dbg(dw_dbg: *s_Dwarf_Debug_s, dw_tieddbg_out: **s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_next_cu_header_d(dw_dbg: *s_Dwarf_Debug_s, dw_is_info: int, dw_cu_header_length: *uint64, dw_version_stamp: *ushort, dw_abbrev_offset: *uint64, dw_address_size: *ushort, dw_length_size: *ushort, dw_extension_size: *ushort, dw_type_signature: *s_Dwarf_Sig8_s, dw_typeoffset: *uint64, dw_next_cu_header_offset: *uint64, dw_header_cu_type: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_siblingof_b(dw_dbg: *s_Dwarf_Debug_s, dw_die: *s_Dwarf_Die_s, dw_is_info: int, dw_return_siblingdie: **s_Dwarf_Die_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_cu_header_basics(dw_die: *s_Dwarf_Die_s, dw_version: *ushort, dw_is_info: *int, dw_is_dwo: *int, dw_offset_size: *ushort, dw_address_size: *ushort, dw_extension_size: *ushort, dw_signature: **s_Dwarf_Sig8_s, dw_offset_of_length: *uint64, dw_total_byte_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_child(dw_die: *s_Dwarf_Die_s, dw_return_childdie: **s_Dwarf_Die_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_die(dw_die: *s_Dwarf_Die_s)
export import def #extern dwarf_die_from_hash_signature(dw_dbg: *s_Dwarf_Debug_s, dw_hash_sig: *s_Dwarf_Sig8_s, dw_sig_type: *char, dw_returned_CU_die: **s_Dwarf_Die_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_offdie_b(dw_dbg: *s_Dwarf_Debug_s, dw_offset: uint64, dw_is_info: int, dw_return_die: **s_Dwarf_Die_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_find_die_given_sig8(dw_dbg: *s_Dwarf_Debug_s, dw_ref: *s_Dwarf_Sig8_s, dw_die_out: **s_Dwarf_Die_s, dw_is_info: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_die_infotypes_flag(dw_die: *s_Dwarf_Die_s) -> int
export import def #extern dwarf_die_abbrev_global_offset(dw_die: *s_Dwarf_Die_s, dw_abbrev_offset: *uint64, dw_abbrev_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_tag(dw_die: *s_Dwarf_Die_s, dw_return_tag: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dieoffset(dw_die: *s_Dwarf_Die_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_debug_addr_index_to_addr(dw_die: *s_Dwarf_Die_s, dw_index: uint64, dw_return_addr: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_addr_form_is_indexed(dw_form: int) -> int
export import def #extern dwarf_CU_dieoffset_given_die(dw_die: *s_Dwarf_Die_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cu_die_offset_given_cu_header_offset_b(dw_dbg: *s_Dwarf_Debug_s, dw_in_cu_header_offset: uint64, dw_is_info: int, dw_out_cu_die_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_CU_offset(dw_die: *s_Dwarf_Die_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_CU_offset_range(dw_die: *s_Dwarf_Die_s, dw_return_CU_header_offset: *uint64, dw_return_CU_length_bytes: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_attr(dw_die: *s_Dwarf_Die_s, dw_attrnum: ushort, dw_returned_attr: **s_Dwarf_Attribute_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_text(dw_die: *s_Dwarf_Die_s, dw_attrnum: ushort, dw_ret_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_diename(dw_die: *s_Dwarf_Die_s, dw_diename: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_abbrev_code(dw_die: *s_Dwarf_Die_s) -> int
export import def #extern dwarf_die_abbrev_children_flag(dw_die: *s_Dwarf_Die_s, dw_ab_has_child: *ushort) -> int
export import def #extern dwarf_validate_die_sibling(dw_sibling: *s_Dwarf_Die_s, dw_offset: *uint64) -> int
export import def #extern dwarf_hasattr(dw_die: *s_Dwarf_Die_s, dw_attrnum: ushort, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_offset_list(dw_dbg: *s_Dwarf_Debug_s, dw_offset: uint64, dw_is_info: int, dw_offbuf: **uint64, dw_offcount: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_die_address_size(dw_die: *s_Dwarf_Die_s, dw_addr_size: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_offsets(dw_die: *s_Dwarf_Die_s, dw_global_offset: *uint64, dw_local_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_version_of_die(dw_die: *s_Dwarf_Die_s, dw_version: *ushort, dw_offset_size: *ushort) -> int
export import def #extern dwarf_lowpc(dw_die: *s_Dwarf_Die_s, dw_returned_addr: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_highpc_b(dw_die: *s_Dwarf_Die_s, dw_return_addr: *uint64, dw_return_form: *ushort, dw_return_class: *e_Dwarf_Form_Class, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dietype_offset(dw_die: *s_Dwarf_Die_s, dw_return_offset: *uint64, dw_is_info: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_bytesize(dw_die: *s_Dwarf_Die_s, dw_returned_size: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_bitsize(dw_die: *s_Dwarf_Die_s, dw_returned_size: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_bitoffset(dw_die: *s_Dwarf_Die_s, dw_attrnum: *ushort, dw_returned_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclang(dw_die: *s_Dwarf_Die_s, dw_returned_lang: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_arrayorder(dw_die: *s_Dwarf_Die_s, dw_returned_order: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_attrlist(dw_die: *s_Dwarf_Die_s, dw_attrbuf: ***s_Dwarf_Attribute_s, dw_attrcount: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_hasform(dw_attr: *s_Dwarf_Attribute_s, dw_form: ushort, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_whatform(dw_attr: *s_Dwarf_Attribute_s, dw_returned_final_form: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_whatform_direct(dw_attr: *s_Dwarf_Attribute_s, dw_returned_initial_form: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_whatattr(dw_attr: *s_Dwarf_Attribute_s, dw_returned_attrnum: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formref(dw_attr: *s_Dwarf_Attribute_s, dw_return_offset: *uint64, dw_is_info: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_formref_b(dw_attr: *s_Dwarf_Attribute_s, dw_return_offset: *uint64, dw_offset_is_info: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_formref(dw_attr: *s_Dwarf_Attribute_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formsig8(dw_attr: *s_Dwarf_Attribute_s, dw_returned_sig_bytes: *s_Dwarf_Sig8_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formsig8_const(dw_attr: *s_Dwarf_Attribute_s, dw_returned_sig_bytes: *s_Dwarf_Sig8_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formaddr(dw_attr: *s_Dwarf_Attribute_s, dw_returned_addr: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_debug_addr_index(dw_attr: *s_Dwarf_Attribute_s, dw_return_index: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formflag(dw_attr: *s_Dwarf_Attribute_s, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formudata(dw_attr: *s_Dwarf_Attribute_s, dw_returned_val: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formsdata(dw_attr: *s_Dwarf_Attribute_s, dw_returned_val: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formdata16(dw_attr: *s_Dwarf_Attribute_s, dw_returned_val: *s_Dwarf_Form_Data16_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formblock(dw_attr: *s_Dwarf_Attribute_s, dw_returned_block: **s_Dwarf_Block_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formstring(dw_attr: *s_Dwarf_Attribute_s, dw_returned_string: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_debug_str_index(dw_attr: *s_Dwarf_Attribute_s, dw_return_index: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_formexprloc(dw_attr: *s_Dwarf_Attribute_s, dw_return_exprlen: *uint64, dw_block_ptr: **, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_form_class(dw_version: ushort, dw_attrnum: ushort, dw_offset_size: ushort, dw_form: ushort) -> e_Dwarf_Form_Class
export import def #extern dwarf_attr_offset(dw_die: *s_Dwarf_Die_s, dw_attr: *s_Dwarf_Attribute_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_uncompress_integer_block_a(dw_dbg: *s_Dwarf_Debug_s, dw_input_length_in_bytes: uint64, dw_input_block: *, dw_value_count: *uint64, dw_value_array: **int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_uncompressed_block(dw_dbg: *s_Dwarf_Debug_s, dw_value_array: *)
export import def #extern dwarf_convert_to_global_offset(dw_attr: *s_Dwarf_Attribute_s, dw_offset: uint64, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_attribute(dw_attr: *s_Dwarf_Attribute_s)
export import def #extern dwarf_discr_list(dw_dbg: *s_Dwarf_Debug_s, dw_blockpointer: *uint8, dw_blocklen: uint64, dw_dsc_head_out: **s_Dwarf_Dsc_Head_s, dw_dsc_array_length_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_discr_entry_u(dw_dsc: *s_Dwarf_Dsc_Head_s, dw_entrynum: uint64, dw_out_type: *ushort, dw_out_discr_low: *uint64, dw_out_discr_high: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_discr_entry_s(dw_dsc: *s_Dwarf_Dsc_Head_s, dw_entrynum: uint64, dw_out_type: *ushort, dw_out_discr_low: *int64, dw_out_discr_high: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srcfiles(dw_cu_die: *s_Dwarf_Die_s, dw_srcfiles: ***char, dw_filecount: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_b(dw_cudie: *s_Dwarf_Die_s, dw_version_out: *uint64, dw_table_count: *uint8, dw_linecontext: **s_Dwarf_Line_Context_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_from_linecontext(dw_linecontext: *s_Dwarf_Line_Context_s, dw_linebuf: ***s_Dwarf_Line_s, dw_linecount: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_two_level_from_linecontext(dw_context: *s_Dwarf_Line_Context_s, dw_linebuf: ***s_Dwarf_Line_s, dw_linecount: *int64, dw_linebuf_actuals: ***s_Dwarf_Line_s, dw_linecount_actuals: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_dealloc_b(dw_context: *s_Dwarf_Line_Context_s)
export import def #extern dwarf_srclines_table_offset(dw_context: *s_Dwarf_Line_Context_s, dw_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_comp_dir(dw_context: *s_Dwarf_Line_Context_s, dw_compilation_directory: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_subprog_count(dw_context: *s_Dwarf_Line_Context_s, dw_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_subprog_data(dw_context: *s_Dwarf_Line_Context_s, dw_index: int64, dw_name: **char, dw_decl_file: *uint64, dw_decl_line: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_files_indexes(dw_context: *s_Dwarf_Line_Context_s, dw_baseindex: *int64, dw_count: *int64, dw_endindex: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_files_data_b(dw_context: *s_Dwarf_Line_Context_s, dw_index_in: int64, dw_name: **char, dw_directory_index: *uint64, dw_last_mod_time: *uint64, dw_file_length: *uint64, dw_md5ptr: **s_Dwarf_Form_Data16_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_include_dir_count(dw_line_context: *s_Dwarf_Line_Context_s, dw_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_include_dir_data(dw_line_context: *s_Dwarf_Line_Context_s, dw_index: int64, dw_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_srclines_version(dw_line_context: *s_Dwarf_Line_Context_s, dw_version: *uint64, dw_table_count: *uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_linebeginstatement(dw_line: *s_Dwarf_Line_s, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lineendsequence(dw_line: *s_Dwarf_Line_s, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lineno(dw_line: *s_Dwarf_Line_s, dw_returned_linenum: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_line_srcfileno(dw_line: *s_Dwarf_Line_s, dw_returned_filenum: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_line_is_addr_set(dw_line: *s_Dwarf_Line_s, dw_is_addr_set: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lineaddr(dw_line: *s_Dwarf_Line_s, dw_returned_addr: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lineoff_b(dw_line: *s_Dwarf_Line_s, dw_returned_lineoffset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_linesrc(dw_line: *s_Dwarf_Line_s, dw_returned_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lineblock(dw_line: *s_Dwarf_Line_s, dw_returned_bool: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_prologue_end_etc(dw_line: *s_Dwarf_Line_s, dw_prologue_end: *int, dw_epilogue_begin: *int, dw_isa: *uint64, dw_discriminator: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_linelogical(dw_line: *s_Dwarf_Line_s, dw_returned_logical: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_linecontext(dw_line: *s_Dwarf_Line_s, dw_returned_context: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_line_subprogno(_0: *s_Dwarf_Line_s, _1: *uint64, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_line_subprog(_0: *s_Dwarf_Line_s, _1: **char, _2: **char, _3: *uint64, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_check_lineheader_b(dw_cu_die: *s_Dwarf_Die_s, dw_errcount_out: *int, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_print_lines(dw_cu_die: *s_Dwarf_Die_s, dw_error: **s_Dwarf_Error_s, dw_errorcount_out: *int) -> int
export import def #extern dwarf_register_printf_callback(dw_dbg: *s_Dwarf_Debug_s, dw_callbackinfo: *s_Dwarf_Printf_Callback_Info_s) -> s_Dwarf_Printf_Callback_Info_s
export import def #extern dwarf_get_ranges_b(dw_dbg: *s_Dwarf_Debug_s, dw_rangesoffset: uint64, dw_die: *s_Dwarf_Die_s, dw_return_realoffset: *uint64, dw_rangesbuf: **s_Dwarf_Ranges_s, dw_rangecount: *int64, dw_bytecount: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_ranges(dw_dbg: *s_Dwarf_Debug_s, dw_rangesbuf: *s_Dwarf_Ranges_s, dw_rangecount: int64)
export import def #extern dwarf_rnglists_get_rle_head(dw_attr: *s_Dwarf_Attribute_s, dw_theform: ushort, dw_index_or_offset_value: uint64, dw_head_out: **s_Dwarf_Rnglists_Head_s, dw_count_of_entries_in_head: *uint64, dw_global_offset_of_rle_set: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_rnglists_entry_fields_a(dw_head: *s_Dwarf_Rnglists_Head_s, dw_entrynum: uint64, dw_entrylen: *uint, dw_rle_value_out: *uint, dw_raw1: *uint64, dw_raw2: *uint64, dw_debug_addr_unavailable: *int, dw_cooked1: *uint64, dw_cooked2: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_rnglists_head(dw_head: *s_Dwarf_Rnglists_Head_s)
export import def #extern dwarf_load_rnglists(dw_dbg: *s_Dwarf_Debug_s, dw_rnglists_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_rnglist_offset_index_value(dw_dbg: *s_Dwarf_Debug_s, dw_context_index: uint64, dw_offsetentry_index: uint64, dw_offset_value_out: *uint64, dw_global_offset_value_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_rnglist_head_basics(dw_head: *s_Dwarf_Rnglists_Head_s, dw_rle_count: *uint64, dw_rnglists_version: *uint64, dw_rnglists_index_returned: *uint64, dw_bytes_total_in_rle: *uint64, dw_offset_size: *ushort, dw_address_size: *ushort, dw_segment_selector_size: *ushort, dw_overall_offset_of_this_context: *uint64, dw_total_length_of_this_context: *uint64, dw_offset_table_offset: *uint64, dw_offset_table_entrycount: *uint64, dw_rnglists_base_present: *int, dw_rnglists_base: *uint64, dw_rnglists_base_address_present: *int, dw_rnglists_base_address: *uint64, dw_rnglists_debug_addr_base_present: *int, dw_rnglists_debug_addr_base: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_rnglist_context_basics(dw_dbg: *s_Dwarf_Debug_s, dw_index: uint64, dw_header_offset: *uint64, dw_offset_size: *uint8, dw_extension_size: *uint8, dw_version: *uint, dw_address_size: *uint8, dw_segment_selector_size: *uint8, dw_offset_entry_count: *uint64, dw_offset_of_offset_array: *uint64, dw_offset_of_first_rangeentry: *uint64, dw_offset_past_last_rangeentry: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_rnglist_rle(dw_dbg: *s_Dwarf_Debug_s, dw_contextnumber: uint64, dw_entry_offset: uint64, dw_endoffset: uint64, dw_entrylen: *uint, dw_entry_kind: *uint, dw_entry_operand1: *uint64, dw_entry_operand2: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_c(dw_attr: *s_Dwarf_Attribute_s, dw_loclist_head: **s_Dwarf_Loc_Head_c_s, dw_locentry_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_head_kind(dw_loclist_head: *s_Dwarf_Loc_Head_c_s, dw_lkind: *uint, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_locdesc_entry_d(dw_loclist_head: *s_Dwarf_Loc_Head_c_s, dw_index: uint64, dw_lle_value_out: *uint8, dw_rawlowpc: *uint64, dw_rawhipc: *uint64, dw_debug_addr_unavailable: *int, dw_lowpc_cooked: *uint64, dw_hipc_cooked: *uint64, dw_locexpr_op_count_out: *uint64, dw_locentry_out: **s_Dwarf_Locdesc_c_s, dw_loclist_source_out: *uint8, dw_expression_offset_out: *uint64, dw_locdesc_offset_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_location_op_value_c(dw_locdesc: *s_Dwarf_Locdesc_c_s, dw_index: uint64, dw_operator_out: *uint8, dw_operand1: *uint64, dw_operand2: *uint64, dw_operand3: *uint64, dw_offset_for_branch: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_loclist_from_expr_c(dw_dbg: *s_Dwarf_Debug_s, dw_expression_in: *, dw_expression_length: uint64, dw_address_size: ushort, dw_offset_size: ushort, dw_dwarf_version: uint8, dw_loc_head: **s_Dwarf_Loc_Head_c_s, dw_listlen: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_loc_head_c(dw_head: *s_Dwarf_Loc_Head_c_s)
export import def #extern dwarf_load_loclists(dw_dbg: *s_Dwarf_Debug_s, dw_loclists_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_offset_index_value(dw_dbg: *s_Dwarf_Debug_s, dw_context_index: uint64, dw_offsetentry_index: uint64, dw_offset_value_out: *uint64, dw_global_offset_value_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_head_basics(dw_head: *s_Dwarf_Loc_Head_c_s, dw_lkind: *uint8, dw_lle_count: *uint64, dw_loclists_version: *uint64, dw_loclists_index_returned: *uint64, dw_bytes_total_in_rle: *uint64, dw_offset_size: *ushort, dw_address_size: *ushort, dw_segment_selector_size: *ushort, dw_overall_offset_of_this_context: *uint64, dw_total_length_of_this_context: *uint64, dw_offset_table_offset: *uint64, dw_offset_table_entrycount: *uint64, dw_loclists_base_present: *int, dw_loclists_base: *uint64, dw_loclists_base_address_present: *int, dw_loclists_base_address: *uint64, dw_loclists_debug_addr_base_present: *int, dw_loclists_debug_addr_base: *uint64, dw_offset_this_lle_area: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_context_basics(dw_dbg: *s_Dwarf_Debug_s, dw_index: uint64, dw_header_offset: *uint64, dw_offset_size: *uint8, dw_extension_size: *uint8, dw_version: *uint, dw_address_size: *uint8, dw_segment_selector_size: *uint8, dw_offset_entry_count: *uint64, dw_offset_of_offset_array: *uint64, dw_offset_of_first_locentry: *uint64, dw_offset_past_last_locentry: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_loclist_lle(dw_dbg: *s_Dwarf_Debug_s, dw_contextnumber: uint64, dw_entry_offset: uint64, dw_endoffset: uint64, dw_entrylen: *uint, dw_entry_kind: *uint, dw_entry_operand1: *uint64, dw_entry_operand2: *uint64, dw_expr_ops_blocksize: *uint64, dw_expr_ops_offset: *uint64, dw_expr_opsdata: **uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_debug_addr_table(dw_dbg: *s_Dwarf_Debug_s, dw_section_offset: uint64, dw_table_header: **s_Dwarf_Debug_Addr_Table_s, dw_length: *uint64, dw_version: *ushort, dw_address_size: *uint8, dw_dw_at_addr_base: *uint64, dw_entry_count: *uint64, dw_next_table_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_debug_addr_by_index(dw_dat: *s_Dwarf_Debug_Addr_Table_s, dw_entry_index: uint64, dw_address: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_debug_addr_table(dw_dat: *s_Dwarf_Debug_Addr_Table_s)
export import def #extern dwarf_get_macro_context(dw_die: *s_Dwarf_Die_s, dw_version_out: *uint64, dw_macro_context: **s_Dwarf_Macro_Context_s, dw_macro_unit_offset_out: *uint64, dw_macro_ops_count_out: *uint64, dw_macro_ops_data_length_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_context_by_offset(dw_die: *s_Dwarf_Die_s, dw_offset: uint64, dw_version_out: *uint64, dw_macro_context: **s_Dwarf_Macro_Context_s, dw_macro_ops_count_out: *uint64, dw_macro_ops_data_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_macro_context_total_length(dw_context: *s_Dwarf_Macro_Context_s, dw_mac_total_len: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_macro_context(dw_mc: *s_Dwarf_Macro_Context_s)
export import def #extern dwarf_macro_context_head(dw_mc: *s_Dwarf_Macro_Context_s, dw_version: *ushort, dw_mac_offset: *uint64, dw_mac_len: *uint64, dw_mac_header_len: *uint64, dw_flags: *uint, dw_has_line_offset: *int, dw_line_offset: *uint64, dw_has_offset_size_64: *int, dw_has_operands_table: *int, dw_opcode_count: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_macro_operands_table(dw_mc: *s_Dwarf_Macro_Context_s, dw_index: ushort, dw_opcode_number: *ushort, dw_operand_count: *ushort, dw_operand_array: **uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_op(dw_macro_context: *s_Dwarf_Macro_Context_s, dw_op_number: uint64, dw_op_start_section_offset: *uint64, dw_macro_operator: *ushort, dw_forms_count: *ushort, dw_formcode_array: **uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_defundef(dw_macro_context: *s_Dwarf_Macro_Context_s, dw_op_number: uint64, dw_line_number: *uint64, dw_index: *uint64, dw_offset: *uint64, dw_forms_count: *ushort, dw_macro_string: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_startend_file(dw_macro_context: *s_Dwarf_Macro_Context_s, dw_op_number: uint64, dw_line_number: *uint64, dw_name_index_to_line_tab: *uint64, dw_src_file_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_import(dw_macro_context: *s_Dwarf_Macro_Context_s, dw_op_number: uint64, dw_target_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_find_macro_value_start(dw_macro_string: *char) -> *char
export import def #extern dwarf_get_macro_details(dw_dbg: *s_Dwarf_Debug_s, dw_macro_offset: uint64, dw_maximum_count: uint64, dw_entry_count: *int64, dw_details: **s_Dwarf_Macro_Details_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_list(dw_dbg: *s_Dwarf_Debug_s, dw_cie_data: ***s_Dwarf_Cie_s, dw_cie_element_count: *int64, dw_fde_data: ***s_Dwarf_Fde_s, dw_fde_element_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_list_eh(dw_dbg: *s_Dwarf_Debug_s, dw_cie_data: ***s_Dwarf_Cie_s, dw_cie_element_count: *int64, dw_fde_data: ***s_Dwarf_Fde_s, dw_fde_element_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_fde_cie_list(dw_dbg: *s_Dwarf_Debug_s, dw_cie_data: **s_Dwarf_Cie_s, dw_cie_element_count: int64, dw_fde_data: **s_Dwarf_Fde_s, dw_fde_element_count: int64)
export import def #extern dwarf_get_fde_range(dw_fde: *s_Dwarf_Fde_s, dw_low_pc: *uint64, dw_func_length: *uint64, dw_fde_bytes: **uint8, dw_fde_byte_length: *uint64, dw_cie_offset: *uint64, dw_cie_index: *int64, dw_fde_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_exception_info(dw_fde: *s_Dwarf_Fde_s, dw_offset_into_exception_tables: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cie_of_fde(dw_fde: *s_Dwarf_Fde_s, dw_cie_returned: **s_Dwarf_Cie_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cie_info_b(dw_cie: *s_Dwarf_Cie_s, dw_bytes_in_cie: *uint64, dw_version: *uint8, dw_augmenter: **char, dw_code_alignment_factor: *uint64, dw_data_alignment_factor: *int64, dw_return_address_register_rule: *ushort, dw_initial_instructions: **uint8, dw_initial_instructions_length: *uint64, dw_offset_size: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cie_index(dw_cie: *s_Dwarf_Cie_s, dw_index: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_instr_bytes(dw_fde: *s_Dwarf_Fde_s, dw_outinstrs: **uint8, dw_outlen: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_info_for_all_regs3(dw_fde: *s_Dwarf_Fde_s, dw_pc_requested: uint64, dw_reg_table: *s_Dwarf_Regtable3_s, dw_row_pc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_info_for_reg3_c(dw_fde: *s_Dwarf_Fde_s, dw_table_column: ushort, dw_pc_requested: uint64, dw_value_type: *uint8, dw_offset_relevant: *uint64, dw_register: *uint64, dw_offset: *int64, dw_block_content: *s_Dwarf_Block_s, dw_row_pc_out: *uint64, dw_has_more_rows: *int, dw_subsequent_pc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_info_for_reg3_b(dw_fde: *s_Dwarf_Fde_s, dw_table_column: ushort, dw_pc_requested: uint64, dw_value_type: *uint8, dw_offset_relevant: *uint64, dw_register: *uint64, dw_offset: *uint64, dw_block_content: *s_Dwarf_Block_s, dw_row_pc_out: *uint64, dw_has_more_rows: *int, dw_subsequent_pc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_info_for_cfa_reg3_c(dw_fde: *s_Dwarf_Fde_s, dw_pc_requested: uint64, dw_value_type: *uint8, dw_offset_relevant: *uint64, dw_register: *uint64, dw_offset: *int64, dw_block: *s_Dwarf_Block_s, dw_row_pc_out: *uint64, dw_has_more_rows: *int, dw_subsequent_pc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_info_for_cfa_reg3_b(dw_fde: *s_Dwarf_Fde_s, dw_pc_requested: uint64, dw_value_type: *uint8, dw_offset_relevant: *uint64, dw_register: *uint64, dw_offset: *uint64, dw_block: *s_Dwarf_Block_s, dw_row_pc_out: *uint64, dw_has_more_rows: *int, dw_subsequent_pc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_for_die(dw_dbg: *s_Dwarf_Debug_s, dw_subr_die: *s_Dwarf_Die_s, dw_returned_fde: **s_Dwarf_Fde_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_n(dw_fde_data: **s_Dwarf_Fde_s, dw_fde_index: uint64, dw_returned_fde: **s_Dwarf_Fde_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_at_pc(dw_fde_data: **s_Dwarf_Fde_s, dw_pc_of_interest: uint64, dw_returned_fde: **s_Dwarf_Fde_s, dw_lopc: *uint64, dw_hipc: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cie_augmentation_data(dw_cie: *s_Dwarf_Cie_s, dw_augdata: **uint8, dw_augdata_len: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_fde_augmentation_data(dw_fde: *s_Dwarf_Fde_s, dw_augdata: **uint8, dw_augdata_len: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_expand_frame_instructions(dw_cie: *s_Dwarf_Cie_s, dw_instructionspointer: *uint8, dw_length_in_bytes: uint64, dw_head: **s_Dwarf_Frame_Instr_Head_s, dw_instr_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_frame_instruction(dw_head: *s_Dwarf_Frame_Instr_Head_s, dw_instr_index: uint64, dw_instr_offset_in_instrs: *uint64, dw_cfa_operation: *uint8, dw_fields_description: **char, dw_u0: *uint64, dw_u1: *uint64, dw_s0: *int64, dw_s1: *int64, dw_code_alignment_factor: *uint64, dw_data_alignment_factor: *int64, dw_expression_block: *s_Dwarf_Block_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_frame_instruction_a(dw_: *s_Dwarf_Frame_Instr_Head_s, dw_instr_index: uint64, dw_instr_offset_in_instrs: *uint64, dw_cfa_operation: *uint8, dw_fields_description: **char, dw_u0: *uint64, dw_u1: *uint64, dw_u2: *uint64, dw_s0: *int64, dw_s1: *int64, dw_code_alignment_factor: *uint64, dw_data_alignment_factor: *int64, dw_expression_block: *s_Dwarf_Block_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_frame_instr_head(dw_head: *s_Dwarf_Frame_Instr_Head_s)
export import def #extern dwarf_fde_section_offset(dw_dbg: *s_Dwarf_Debug_s, dw_in_fde: *s_Dwarf_Fde_s, dw_fde_off: *uint64, dw_cie_off: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_cie_section_offset(dw_dbg: *s_Dwarf_Debug_s, dw_in_cie: *s_Dwarf_Cie_s, dw_cie_off: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_set_frame_rule_table_size(dw_dbg: *s_Dwarf_Debug_s, dw_value: ushort) -> ushort
export import def #extern dwarf_set_frame_rule_initial_value(dw_dbg: *s_Dwarf_Debug_s, dw_value: ushort) -> ushort
export import def #extern dwarf_set_frame_cfa_value(dw_dbg: *s_Dwarf_Debug_s, dw_value: ushort) -> ushort
export import def #extern dwarf_set_frame_same_value(dw_dbg: *s_Dwarf_Debug_s, dw_value: ushort) -> ushort
export import def #extern dwarf_set_frame_undefined_value(dw_dbg: *s_Dwarf_Debug_s, dw_value: ushort) -> ushort
export import def #extern dwarf_get_abbrev(dw_dbg: *s_Dwarf_Debug_s, dw_offset: uint64, dw_returned_abbrev: **s_Dwarf_Abbrev_s, dw_length: *uint64, dw_attr_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_abbrev_tag(dw_abbrev: *s_Dwarf_Abbrev_s, dw_return_tag_number: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_abbrev_code(dw_abbrev: *s_Dwarf_Abbrev_s, dw_return_code_number: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_abbrev_children_flag(dw_abbrev: *s_Dwarf_Abbrev_s, dw_return_flag: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_abbrev_entry_b(dw_abbrev: *s_Dwarf_Abbrev_s, dw_indx: uint64, dw_filter_outliers: int, dw_returned_attr_num: *uint64, dw_returned_form: *uint64, dw_returned_implicit_const: *int64, dw_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_str(dw_dbg: *s_Dwarf_Debug_s, dw_offset: uint64, dw_string: **char, dw_strlen_of_string: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_open_str_offsets_table_access(dw_dbg: *s_Dwarf_Debug_s, dw_table_data: **s_Dwarf_Str_Offsets_Table_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_close_str_offsets_table_access(dw_table_data: *s_Dwarf_Str_Offsets_Table_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_next_str_offsets_table(dw_table_data: *s_Dwarf_Str_Offsets_Table_s, dw_unit_length: *uint64, dw_unit_length_offset: *uint64, dw_table_start_offset: *uint64, dw_entry_size: *ushort, dw_version: *ushort, dw_padding: *ushort, dw_table_value_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_str_offsets_value_by_index(dw_table_data: *s_Dwarf_Str_Offsets_Table_s, dw_index_to_entry: uint64, dw_entry_value: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_str_offsets_statistics(dw_table_data: *s_Dwarf_Str_Offsets_Table_s, dw_wasted_byte_count: *uint64, dw_table_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_errno(dw_error: *s_Dwarf_Error_s) -> uint64
export import def #extern dwarf_errmsg(dw_error: *s_Dwarf_Error_s) -> *char
export import def #extern dwarf_errmsg_by_number(dw_errornum: uint64) -> *char
export import def #extern dwarf_error_creation(dw_dbg: *s_Dwarf_Debug_s, dw_error: **s_Dwarf_Error_s, dw_errmsg: *char)
export import def #extern dwarf_dealloc_error(dw_dbg: *s_Dwarf_Debug_s, dw_error: *s_Dwarf_Error_s)
export import def #extern dwarf_dealloc(dw_dbg: *s_Dwarf_Debug_s, dw_space: *, dw_type: uint64)
export import def #extern dwarf_get_debug_sup(dw_dbg: *s_Dwarf_Debug_s, dw_version: *ushort, dw_is_supplementary: *uint8, dw_filename: **char, dw_checksum_len: *uint64, dw_checksum: **uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_header(dw_dbg: *s_Dwarf_Debug_s, dw_starting_offset: uint64, dw_dn: **s_Dwarf_Dnames_Head_s, dw_offset_of_next_table: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_dnames(dw_dn: *s_Dwarf_Dnames_Head_s)
export import def #extern dwarf_dnames_abbrevtable(dw_dn: *s_Dwarf_Dnames_Head_s, dw_index: uint64, dw_abbrev_offset: *uint64, dw_abbrev_code: *uint64, dw_abbrev_tag: *uint64, dw_array_size: uint64, dw_idxattr_array: *ushort, dw_form_array: *ushort, dw_idxattr_count: *uint64) -> int
export import def #extern dwarf_dnames_sizes(dw_dn: *s_Dwarf_Dnames_Head_s, dw_comp_unit_count: *uint64, dw_local_type_unit_count: *uint64, dw_foreign_type_unit_count: *uint64, dw_bucket_count: *uint64, dw_name_count: *uint64, dw_abbrev_table_size: *uint64, dw_entry_pool_size: *uint64, dw_augmentation_string_size: *uint64, dw_augmentation_string: **char, dw_section_size: *uint64, dw_table_version: *ushort, dw_offset_size: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_offsets(dw_dn: *s_Dwarf_Dnames_Head_s, dw_header_offset: *uint64, dw_cu_table_offset: *uint64, dw_tu_local_offset: *uint64, dw_foreign_tu_offset: *uint64, dw_bucket_offset: *uint64, dw_hashes_offset: *uint64, dw_stringoffsets_offset: *uint64, dw_entryoffsets_offset: *uint64, dw_abbrev_table_offset: *uint64, dw_entry_pool_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_cu_table(dw_dn: *s_Dwarf_Dnames_Head_s, dw_type: *char, dw_index_number: uint64, dw_offset: *uint64, dw_sig: *s_Dwarf_Sig8_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_bucket(dw_dn: *s_Dwarf_Dnames_Head_s, dw_bucket_number: uint64, dw_index: *uint64, dw_indexcount: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_name(dw_dn: *s_Dwarf_Dnames_Head_s, dw_name_index: uint64, dw_bucket_number: *uint64, dw_hash_value: *uint64, dw_offset_to_debug_str: *uint64, dw_ptrtostr: **char, dw_offset_in_entrypool: *uint64, dw_abbrev_number: *uint64, dw_abbrev_tag: *ushort, dw_array_size: uint64, dw_idxattr_array: *ushort, dw_form_array: *ushort, dw_idxattr_count: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_entrypool(dw_dn: *s_Dwarf_Dnames_Head_s, dw_offset_in_entrypool: uint64, dw_abbrev_code: *uint64, dw_tag: *ushort, dw_value_count: *uint64, dw_index_of_abbrev: *uint64, dw_offset_of_initial_value: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dnames_entrypool_values(dw_dn: *s_Dwarf_Dnames_Head_s, dw_index_of_abbrev: uint64, dw_offset_in_entrypool_of_values: uint64, dw_arrays_length: uint64, dw_array_idx_number: *ushort, dw_array_form: *ushort, dw_array_of_offsets: *uint64, dw_array_of_signatures: *s_Dwarf_Sig8_s, dw_single_cu: *int, dw_cu_offset: *uint64, dw_offset_of_next_entrypool: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_aranges(dw_dbg: *s_Dwarf_Debug_s, dw_aranges: ***s_Dwarf_Arange_s, dw_arange_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_arange(dw_aranges: **s_Dwarf_Arange_s, dw_arange_count: uint64, dw_address: uint64, dw_returned_arange: **s_Dwarf_Arange_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_cu_die_offset(dw_arange: *s_Dwarf_Arange_s, dw_return_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_arange_cu_header_offset(dw_arange: *s_Dwarf_Arange_s, dw_return_cu_header_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_arange_info_b(dw_arange: *s_Dwarf_Arange_s, dw_segment: *uint64, dw_segment_entry_size: *uint64, dw_start: *uint64, dw_length: *uint64, dw_cu_die_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_globals(dw_dbg: *s_Dwarf_Debug_s, dw_globals: ***s_Dwarf_Global_s, dw_number_of_globals: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_pubtypes(dw_dbg: *s_Dwarf_Debug_s, dw_pubtypes: ***s_Dwarf_Global_s, dw_number_of_pubtypes: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_globals_by_type(dw_dbg: *s_Dwarf_Debug_s, dw_requested_section: int, dw_contents: ***s_Dwarf_Global_s, dw_count: *int64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_globals_dealloc(dw_dbg: *s_Dwarf_Debug_s, dw_global_like: **s_Dwarf_Global_s, dw_count: int64)
export import def #extern dwarf_globname(dw_global: *s_Dwarf_Global_s, dw_returned_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_die_offset(dw_global: *s_Dwarf_Global_s, dw_die_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_cu_offset(dw_global: *s_Dwarf_Global_s, dw_cu_header_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_name_offsets(dw_global: *s_Dwarf_Global_s, dw_returned_name: **char, dw_die_offset: *uint64, dw_cu_die_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_global_tag_number(dw_global: *s_Dwarf_Global_s) -> ushort
export import def #extern dwarf_get_globals_header(dw_global: *s_Dwarf_Global_s, dw_category: *int, dw_offset_pub_header: *uint64, dw_length_size: *uint64, dw_length_pub: *uint64, dw_version: *uint64, dw_header_info_offset: *uint64, dw_info_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_return_empty_pubnames(dw_dbg: *s_Dwarf_Debug_s, dw_flag: int) -> int
export import def #extern dwarf_get_gnu_index_head(dw_dbg: *s_Dwarf_Debug_s, dw_which_section: int, dw_head: **s_Dwarf_Gnu_Index_Head_s, dw_index_block_count_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gnu_index_dealloc(dw_head: *s_Dwarf_Gnu_Index_Head_s)
export import def #extern dwarf_get_gnu_index_block(dw_head: *s_Dwarf_Gnu_Index_Head_s, dw_number: uint64, dw_block_length: *uint64, dw_version: *ushort, dw_offset_into_debug_info: *uint64, dw_size_of_debug_info_area: *uint64, dw_count_of_index_entries: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_gnu_index_block_entry(dw_head: *s_Dwarf_Gnu_Index_Head_s, dw_blocknumber: uint64, dw_entrynumber: uint64, dw_offset_in_debug_info: *uint64, dw_name_string: **char, dw_flagbyte: *uint8, dw_staticorglobal: *uint8, dw_typeofentry: *uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_header(dw_dbg: *s_Dwarf_Debug_s, dw_gdbindexptr: **s_Dwarf_Gdbindex_s, dw_version: *uint64, dw_cu_list_offset: *uint64, dw_types_cu_list_offset: *uint64, dw_address_area_offset: *uint64, dw_symbol_table_offset: *uint64, dw_constant_pool_offset: *uint64, dw_section_size: *uint64, dw_section_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_gdbindex(dw_gdbindexptr: *s_Dwarf_Gdbindex_s)
export import def #extern dwarf_gdbindex_culist_array(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_list_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_culist_entry(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_entryindex: uint64, dw_cu_offset: *uint64, dw_cu_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_types_culist_array(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_types_list_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_types_culist_entry(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_types_entryindex: uint64, dw_cu_offset: *uint64, dw_tu_offset: *uint64, dw_type_signature: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_addressarea(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_addressarea_list_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_addressarea_entry(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_entryindex: uint64, dw_low_address: *uint64, dw_high_address: *uint64, dw_cu_index: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_symboltable_array(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_symtab_list_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_symboltable_entry(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_entryindex: uint64, dw_string_offset: *uint64, dw_cu_vector_offset: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_cuvector_length(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_cuvector_offset: uint64, dw_innercount: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_cuvector_inner_attributes(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_cuvector_offset_in: uint64, dw_innerindex: uint64, dw_field_value: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_cuvector_instance_expand_value(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_field_value: uint64, dw_cu_index: *uint64, dw_symbol_kind: *uint64, dw_is_static: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gdbindex_string_by_offset(dw_gdbindexptr: *s_Dwarf_Gdbindex_s, dw_stringoffset: uint64, dw_string_ptr: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_xu_index_header(dw_dbg: *s_Dwarf_Debug_s, dw_section_type: *char, dw_xuhdr: **s_Dwarf_Xu_Index_Header_s, dw_version_number: *uint64, dw_section_count: *uint64, dw_units_count: *uint64, dw_hash_slots_count: *uint64, dw_sect_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_dealloc_xu_header(dw_xuhdr: *s_Dwarf_Xu_Index_Header_s)
export import def #extern dwarf_get_xu_index_section_type(dw_xuhdr: *s_Dwarf_Xu_Index_Header_s, dw_typename: **char, dw_sectionname: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_xu_hash_entry(dw_xuhdr: *s_Dwarf_Xu_Index_Header_s, dw_index: uint64, dw_hash_value: *s_Dwarf_Sig8_s, dw_index_to_sections: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_xu_section_names(dw_xuhdr: *s_Dwarf_Xu_Index_Header_s, dw_column_index: uint64, dw_SECT_number: *uint64, dw_SECT_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_xu_section_offset(dw_xuhdr: *s_Dwarf_Xu_Index_Header_s, dw_row_index: uint64, dw_column_index: uint64, dw_sec_offset: *uint64, dw_sec_size: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_debugfission_for_die(dw_die: *s_Dwarf_Die_s, dw_percu_out: *s_Dwarf_Debug_Fission_Per_CU_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_debugfission_for_key(dw_dbg: *s_Dwarf_Debug_s, dw_hash_sig: *s_Dwarf_Sig8_s, dw_cu_type: *char, dw_percu_out: *s_Dwarf_Debug_Fission_Per_CU_s, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_gnu_debuglink(dw_dbg: *s_Dwarf_Debug_s, dw_debuglink_path_returned: **char, dw_crc_returned: **uint8, dw_debuglink_fullpath_returned: **char, dw_debuglink_path_length_returned: *uint, dw_buildid_type_returned: *uint, dw_buildid_owner_name_returned: **char, dw_buildid_returned: **uint8, dw_buildid_length_returned: *uint, dw_paths_returned: ***char, dw_paths_length_returned: *uint, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_suppress_debuglink_crc(dw_suppress: int) -> int
export import def #extern dwarf_add_debuglink_global_path(dw_dbg: *s_Dwarf_Debug_s, dw_pathname: *char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_crc32(dw_dbg: *s_Dwarf_Debug_s, dw_crcbuf: *uint8, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_basic_crc32(dw_buf: *uint8, dw_len: ulong, dw_init: uint) -> uint
export import def #extern dwarf_get_harmless_error_list(dw_dbg: *s_Dwarf_Debug_s, dw_count: uint, dw_errmsg_ptrs_array: **char, dw_newerr_count: *uint) -> int
export import def #extern dwarf_set_harmless_error_list_size(dw_dbg: *s_Dwarf_Debug_s, dw_maxcount: uint) -> uint
export import def #extern dwarf_insert_harmless_error(dw_dbg: *s_Dwarf_Debug_s, dw_newerror: *char)
export import def #extern dwarf_get_ACCESS_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ADDR_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_AT_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ATCF_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ATE_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_CC_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_CFA_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_children_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_CHILDREN_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_DEFAULTED_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_DS_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_DSC_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_GNUIKIND_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_EH_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_END_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_FORM_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_FRAME_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_GNUIVIS_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ID_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_IDX_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_INL_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ISA_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LANG_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LLE_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LLEX_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LNCT_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LNE_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_LNS_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_MACINFO_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_MACRO_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_OP_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_ORD_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_RLE_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_SECT_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_TAG_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_UT_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_VIRTUALITY_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_VIS_name(dw_val_in: uint, dw_s_out: **char) -> int
export import def #extern dwarf_get_FORM_CLASS_name(dw_fc: e_Dwarf_Form_Class, dw_s_out: **char) -> int
export import def #extern dwarf_get_die_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_is_info: int, dw_sec_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_die_section_name_b(dw_die: *s_Dwarf_Die_s, dw_sec_name: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_macro_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_sec_name_out: **char, dw_err: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_real_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_std_section_name: *char, dw_actual_sec_name_out: **char, dw_marked_zcompressed: *uint8, dw_marked_zlib_compressed: *uint8, dw_marked_shf_compressed: *uint8, dw_compressed_length: *uint64, dw_uncompressed_length: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_frame_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_frame_section_name_eh_gnu(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_aranges_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_ranges_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_offset_size(_0: *s_Dwarf_Debug_s, dw_offset_size: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_address_size(_0: *s_Dwarf_Debug_s, dw_addr_size: *ushort, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_string_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_line_section_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_line_section_name_from_die(dw_die: *s_Dwarf_Die_s, dw_section_name_out: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_section_info_by_name(dw_dbg: *s_Dwarf_Debug_s, dw_section_name: *char, dw_section_addr: *uint64, dw_section_size: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_section_info_by_index(dw_dbg: *s_Dwarf_Debug_s, dw_section_index: int, dw_section_name: **char, dw_section_addr: *uint64, dw_section_size: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_section_count(dw_dbg: *s_Dwarf_Debug_s) -> int
export import def #extern dwarf_get_section_max_offsets_d(dw_dbg: *s_Dwarf_Debug_s, dw_debug_info_size: *uint64, dw_debug_abbrev_size: *uint64, dw_debug_line_size: *uint64, dw_debug_loc_size: *uint64, dw_debug_aranges_size: *uint64, dw_debug_macinfo_size: *uint64, dw_debug_pubnames_size: *uint64, dw_debug_str_size: *uint64, dw_debug_frame_size: *uint64, dw_debug_ranges_size: *uint64, dw_debug_pubtypes_size: *uint64, dw_debug_types_size: *uint64, dw_debug_macro_size: *uint64, dw_debug_str_offsets_size: *uint64, dw_debug_sup_size: *uint64, dw_debug_cu_index_size: *uint64, dw_debug_tu_index_size: *uint64, dw_debug_names_size: *uint64, dw_debug_loclists_size: *uint64, dw_debug_rnglists_size: *uint64) -> int
export import def #extern dwarf_sec_group_sizes(dw_dbg: *s_Dwarf_Debug_s, dw_section_count_out: *uint64, dw_group_count_out: *uint64, dw_selected_group_out: *uint64, dw_map_entry_count_out: *uint64, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_sec_group_map(dw_dbg: *s_Dwarf_Debug_s, dw_map_entry_count: uint64, dw_group_numbers_array: *uint64, dw_sec_numbers_array: *uint64, dw_sec_names_array: **char, dw_error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_encode_leb128(dw_val: uint64, dw_nbytes: *int, dw_space: *char, dw_splen: int) -> int
export import def #extern dwarf_encode_signed_leb128(dw_val: int64, dw_nbytes: *int, dw_space: *char, dw_splen: int) -> int
export import def #extern dwarf_decode_leb128(dw_leb: *char, dw_leblen: *uint64, dw_outval: *uint64, dw_endptr: *char) -> int
export import def #extern dwarf_decode_signed_leb128(dw_leb: *char, dw_leblen: *uint64, dw_outval: *int64, dw_endptr: *char) -> int
export import def #extern dwarf_package_version() -> *char
export import def #extern dwarf_set_stringcheck(dw_stringcheck: int) -> int
export import def #extern dwarf_set_reloc_application(dw_apply: int) -> int
export import def #extern dwarf_get_endian_copy_function(dw_dbg: *s_Dwarf_Debug_s) -> def (*, *, ulong) -> ()
export import var #extern dwarf_cmdline_options: s_Dwarf_Cmdline_Options_s
export import def #extern dwarf_record_cmdline_options(dw_dd_options: s_Dwarf_Cmdline_Options_s)
export import def #extern dwarf_set_de_alloc_flag(dw_v: int) -> int
export import def #extern dwarf_set_default_address_size(dw_dbg: *s_Dwarf_Debug_s, dw_value: uint8) -> uint8
export import def #extern dwarf_object_detector_path_b(dw_path: *char, dw_outpath_buffer: *char, dw_outpathlen: ulong, dw_gl_pathnames: **char, dw_gl_pathcount: uint, dw_ftype: *uint, dw_endian: *uint, dw_offsetsize: *uint, dw_filesize: *uint64, dw_pathsource: *uint8, dw_errcode: *int) -> int
export import def #extern dwarf_object_detector_path_dSYM(dw_path: *char, dw_outpath: *char, dw_outpath_len: ulong, dw_gl_pathnames: **char, dw_gl_pathcount: uint, dw_ftype: *uint, dw_endian: *uint, dw_offsetsize: *uint, dw_filesize: *uint64, dw_pathsource: *uint8, dw_errcode: *int) -> int
export import def #extern dwarf_object_detector_fd(dw_fd: int, dw_ftype: *uint, dw_endian: *uint, dw_offsetsize: *uint, dw_filesize: *uint64, dw_errcode: *int) -> int
export const dwarf_drt_none: int = 0
export const dwarf_drt_data_reloc: int = 1
export const dwarf_drt_segment_rel: int = 2
export const dwarf_drt_first_of_length_pair: int = 3
export const dwarf_drt_second_of_length_pair: int = 4
export import def #extern dwarf_producer_init(_0: uint64, _1: def (*char, int, uint64, uint64, uint64, uint64, *uint64, *, *int) -> (int), _2: def (*s_Dwarf_Error_s, *) -> (), _3: *, _4: *, isa_name: *char, dwarf_version: *char, extra: *char, _8: **s_Dwarf_P_Debug_s, _9: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_pro_set_default_string_form(_0: *s_Dwarf_P_Debug_s, _1: int, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_transform_to_disk_form_a(_0: *s_Dwarf_P_Debug_s, _1: *uint64, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_section_bytes_a(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *uint64, _3: *uint64, _4: **, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_relocation_info_count(_0: *s_Dwarf_P_Debug_s, _1: *uint64, _2: *int, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_relocation_info(_0: *s_Dwarf_P_Debug_s, _1: *uint64, _2: *uint64, _3: *uint64, _4: **s_Dwarf_Relocation_Data_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_die_marker_a(dbg: *s_Dwarf_P_Debug_s, die: *s_Dwarf_P_Die_s, marker: uint64, error: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_die_markers_a(_0: *s_Dwarf_P_Debug_s, _1: **s_Dwarf_P_Marker_s, _2: *uint64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_string_attributes_count(_0: *s_Dwarf_P_Debug_s, _1: *uint64, _2: *int, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_string_attributes_info(_0: *s_Dwarf_P_Debug_s, _1: *int64, _2: *uint64, _3: **s_Dwarf_P_String_Attr_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_reset_section_bytes(_0: *s_Dwarf_P_Debug_s)
export import def #extern dwarf_producer_finish_a(_0: *s_Dwarf_P_Debug_s, _1: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_debug_sup(_0: *s_Dwarf_P_Debug_s, _1: ushort, _2: uint8, _3: *char, _4: uint64, _5: *uint8, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_targ_address_c(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: uint64, _4: uint64, _5: **s_Dwarf_P_Attribute_s, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_block_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: *uint8, _4: uint64, _5: **s_Dwarf_P_Attribute_s, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_ref_address_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: uint64, _4: uint64, _5: **s_Dwarf_P_Attribute_s, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_unsigned_const_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: uint64, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_signed_const_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: int64, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_reference_c(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: *s_Dwarf_P_Die_s, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_fixup_AT_reference_die(_0: *s_Dwarf_P_Debug_s, _1: ushort, _2: *s_Dwarf_P_Die_s, _3: *s_Dwarf_P_Die_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_dataref_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: uint64, _4: uint64, _5: **s_Dwarf_P_Attribute_s, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_const_value_string_a(_0: *s_Dwarf_P_Die_s, _1: *char, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_location_expr_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: *s_Dwarf_P_Expr_s, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_string_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: *char, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_flag_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: ushort, _3: uint8, _4: **s_Dwarf_P_Attribute_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_producer_a(_0: *s_Dwarf_P_Die_s, _1: *char, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_data16(_0: *s_Dwarf_P_Die_s, _1: ushort, _2: *s_Dwarf_Form_Data16_s, _3: **s_Dwarf_P_Attribute_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_implicit_const(_0: *s_Dwarf_P_Die_s, _1: ushort, _2: int64, _3: **s_Dwarf_P_Attribute_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_any_value_sleb_a(_0: *s_Dwarf_P_Die_s, _1: ushort, _2: int64, _3: **s_Dwarf_P_Attribute_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_const_value_signedint_a(_0: *s_Dwarf_P_Die_s, _1: int64, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_any_value_uleb_a(_0: *s_Dwarf_P_Die_s, _1: ushort, _2: uint64, _3: **s_Dwarf_P_Attribute_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_const_value_unsignedint_a(_0: *s_Dwarf_P_Die_s, _1: uint64, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_comp_dir_a(_0: *s_Dwarf_P_Die_s, _1: *char, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_name_a(_0: *s_Dwarf_P_Die_s, _1: *char, _2: **s_Dwarf_P_Attribute_s, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_AT_with_ref_sig8_a(_0: *s_Dwarf_P_Die_s, _1: ushort, _2: *s_Dwarf_Sig8_s, _3: **s_Dwarf_P_Attribute_s, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_directory_decl_a(_0: *s_Dwarf_P_Debug_s, _1: *char, _2: *uint64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_file_decl_a(_0: *s_Dwarf_P_Debug_s, _1: *char, _2: uint64, _3: uint64, _4: uint64, _5: *uint64, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_line_entry_c(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: uint64, _3: uint64, _4: int64, _5: int, _6: int, _7: int, _8: int, _9: uint64, _10: uint64, _11: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lne_set_address_a(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: uint64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_lne_end_sequence_a(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_frame_cie_a(_0: *s_Dwarf_P_Debug_s, _1: *char, _2: uint8, _3: uint8, _4: uint8, _5: *, _6: uint64, _7: *uint64, _8: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_frame_fde_c(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Fde_s, _2: *s_Dwarf_P_Die_s, _3: uint64, _4: uint64, _5: uint64, _6: uint64, _7: uint64, _8: uint64, _9: *uint64, _10: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_frame_info_c(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Fde_s, _2: *s_Dwarf_P_Die_s, _3: uint64, _4: uint64, _5: uint64, _6: uint64, _7: uint64, _8: uint64, _9: int64, _10: uint64, _11: *uint64, _12: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_fde_inst_a(_0: *s_Dwarf_P_Fde_s, _1: uint8, _2: uint64, _3: uint64, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_insert_fde_inst_bytes(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Fde_s, _2: uint64, _3: *, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_new_fde_a(_0: *s_Dwarf_P_Debug_s, _1: **s_Dwarf_P_Fde_s, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_fde_cfa_offset_a(_0: *s_Dwarf_P_Fde_s, _1: uint64, _2: int64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_new_die_a(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *s_Dwarf_P_Die_s, _3: *s_Dwarf_P_Die_s, _4: *s_Dwarf_P_Die_s, _5: *s_Dwarf_P_Die_s, _6: **s_Dwarf_P_Die_s, _7: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_die_to_debug_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_get_die_marker_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *uint64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_die_link_a(_0: *s_Dwarf_P_Die_s, _1: *s_Dwarf_P_Die_s, _2: *s_Dwarf_P_Die_s, _3: *s_Dwarf_P_Die_s, _4: *s_Dwarf_P_Die_s, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_compress_integer_block_a(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *int64, _3: *uint64, _4: **, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_new_expr_a(_0: *s_Dwarf_P_Debug_s, _1: **s_Dwarf_P_Expr_s, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_expr_reset(_0: *s_Dwarf_P_Expr_s, _1: **s_Dwarf_Error_s)
export import def #extern dwarf_add_expr_gen_a(_0: *s_Dwarf_P_Expr_s, _1: uint8, _2: uint64, _3: uint64, _4: *uint64, _5: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_expr_addr_c(_0: *s_Dwarf_P_Expr_s, _1: uint64, _2: uint64, _3: *uint64, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_expr_current_offset_a(_0: *s_Dwarf_P_Expr_s, _1: *uint64, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_expr_into_block_a(_0: *s_Dwarf_P_Expr_s, _1: *uint64, _2: **uint8, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_arange_c(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: uint64, _3: uint64, _4: uint64, _5: uint64, _6: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_pubname_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_pubtype_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_funcname_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_typename_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_varname_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_add_weakname_a(_0: *s_Dwarf_P_Debug_s, _1: *s_Dwarf_P_Die_s, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_force_dnames(_0: *s_Dwarf_P_Debug_s, _1: int, _2: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_def_macro(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *char, _3: *char, _4: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_undef_macro(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_start_macro_file(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: uint64, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_end_macro_file(_0: *s_Dwarf_P_Debug_s, _1: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_vendor_ext(_0: *s_Dwarf_P_Debug_s, _1: uint64, _2: *char, _3: **s_Dwarf_Error_s) -> int
export import def #extern dwarf_pro_get_string_stats(_0: *s_Dwarf_P_Debug_s, _1: *uint64, _2: *uint64, _3: *uint64, _4: *uint64, _5: *uint64, _6: *uint64, _7: **s_Dwarf_Error_s) -> int
